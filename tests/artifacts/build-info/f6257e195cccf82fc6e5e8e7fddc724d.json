{
	"id": "f6257e195cccf82fc6e5e8e7fddc724d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"tests/WallyVesting_test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n        \npragma solidity >=0.4.22 <0.9.0;\n\n// This import is automatically injected by Remix\nimport \"remix_tests.sol\"; \n\n// This import is required to use custom transaction context\n// Although it may fail compilation in 'Solidity Compiler' plugin\n// But it will work fine in 'Solidity Unit Testing' plugin\nimport \"remix_accounts.sol\";\nimport \"../contracts/WallyVesting.sol\";\n\n// File name has to end with '_test.sol', this file can contain more than one testSuite contracts\ncontract testSuite {\n\n    /// 'beforeAll' runs before all other tests\n    /// More special functions are: 'beforeEach', 'beforeAll', 'afterEach' & 'afterAll'\n    function beforeAll() public {\n        // <instantiate contract>\n        Assert.equal(uint(1), uint(1), \"1 should be equal to 1\");\n    }\n\n    function checkSuccess() public {\n        // Use 'Assert' methods: https://remix-ide.readthedocs.io/en/latest/assert_library.html\n        Assert.ok(2 == 2, 'should be true');\n        Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\");\n        Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\");\n    }\n\n    function checkSuccess2() public pure returns (bool) {\n        // Use the return value (true or false) to test the contract\n        return true;\n    }\n    \n    function checkFailure() public {\n        Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\");\n    }\n\n    /// Custom Transaction Context: https://remix-ide.readthedocs.io/en/latest/unittesting.html#customization\n    /// #sender: account-1\n    /// #value: 100\n    function checkSenderAndValue() public payable {\n        // account index varies 0-9, value is in wei\n        Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\");\n        Assert.equal(msg.value, 100, \"Invalid value\");\n    }\n}\n    "
			},
			"contracts/WallyVesting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/* ---------------------------------\n * Custom Errors\n * --------------------------------- */\nerror VestingRevokedAlready();\nerror InvalidAddress();\nerror CliffGreaterThanDuration();\nerror NotAuthorized();\nerror NothingToRelease();\n\n/**\n * @title WallyVesting\n * @dev Token vesting with cliff + linear release. Admin can revoke.\n */\ncontract WallyVesting is AccessControl {\n    bytes32 private constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    IERC20 private immutable token;      \n    address private immutable beneficiary;\n\n    uint256 private immutable cliff;     \n    uint256 private immutable start;     \n    uint256 private immutable duration;  \n\n    uint256 private released;\n    bool private revoked;\n\n    event TokensReleased(uint256 amount);\n    event VestingRevoked();\n\n    constructor(\n        address _token,\n        address _beneficiary,\n        uint256 _start,\n        uint256 _cliffDuration,\n        uint256 _duration,\n        address _admin\n    ) payable { // (G008) constructor payable\n        if (_token == address(0)) revert InvalidAddress();\n        if (_beneficiary == address(0)) revert InvalidAddress();\n        if (_admin == address(0)) revert InvalidAddress();\n        if (_cliffDuration > _duration) revert CliffGreaterThanDuration();\n\n        _grantRole(ADMIN_ROLE, _admin);\n\n        token = IERC20(_token);\n        beneficiary = _beneficiary;\n        start = _start;\n        cliff = _start + _cliffDuration;\n        duration = _duration;\n    }\n\n    modifier onlyAuthorized() {\n        if (!hasRole(ADMIN_ROLE, msg.sender)) revert NotAuthorized();\n        _;\n    }\n\n    /**\n     * @dev Release vested tokens to beneficiary.\n     */\n    function release() external onlyAuthorized {\n        if (revoked) revert VestingRevokedAlready();\n        uint256 unreleased = releasableAmount();\n        if (unreleased == 0) revert NothingToRelease();\n\n        // (G010) difference vs. +=\n        released = released + unreleased;\n\n        // (M003) check bool\n        bool success = token.transfer(beneficiary, unreleased);\n        require(success, \"Transfer fail\");\n\n        emit TokensReleased(unreleased);\n    }\n\n    /**\n     * @dev Allows admin to revoke vesting. Already-vested remain claimable; unvested => admin.\n     */\n    function revoke() external onlyRole(ADMIN_ROLE) {\n        if (revoked) revert VestingRevokedAlready();\n        revoked = true;\n\n        uint256 balance = token.balanceOf(address(this));\n        uint256 unreleased = releasableAmount();\n        uint256 refund = (balance > unreleased) ? (balance - unreleased) : 0;\n\n        if (refund != 0) {\n            bool success = token.transfer(msg.sender, refund);\n            require(success, \"Refund fail\");\n        }\n        emit VestingRevoked();\n    }\n\n    function releasableAmount() public view returns (uint256) {\n        return vestedAmount() - released;\n    }\n\n    function vestedAmount() public view returns (uint256) {\n        uint256 totalCurrent = token.balanceOf(address(this));\n        uint256 totalAssigned = totalCurrent + released;\n\n        // (I002) block.timestamp used for approximate time\n        if (block.timestamp < cliff) {\n            return 0;\n        } else if (block.timestamp >= (start + duration) || revoked) {\n            return totalAssigned;\n        } else {\n            uint256 timeSoFar = block.timestamp - start;\n            uint256 vested = (totalAssigned * timeSoFar) / duration;\n            return vested;\n        }\n    }\n\n    // Optional getters\n    function isRevoked() external view returns (bool) {\n        return revoked;\n    }\n    function totalReleased() external view returns (uint256) {\n        return released;\n    }\n    function getBeneficiary() external view returns (address) {\n        return beneficiary;\n    }\n}"
			},
			"remix_accounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.4.22 <0.9.0;\n\nlibrary TestsAccounts {\n    function getAccount(uint index) pure public returns (address) {\n        address[15] memory accounts;\n\t\taccounts[0] = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n\n\t\taccounts[1] = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;\n\n\t\taccounts[2] = 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db;\n\n\t\taccounts[3] = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB;\n\n\t\taccounts[4] = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2;\n\n\t\taccounts[5] = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372;\n\n\t\taccounts[6] = 0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678;\n\n\t\taccounts[7] = 0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7;\n\n\t\taccounts[8] = 0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C;\n\n\t\taccounts[9] = 0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC;\n\n\t\taccounts[10] = 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;\n\n\t\taccounts[11] = 0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C;\n\n\t\taccounts[12] = 0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB;\n\n\t\taccounts[13] = 0x583031D1113aD414F02576BD6afaBfb302140225;\n\n\t\taccounts[14] = 0xdD870fA1b7C4700F2BD7f44238821C26f7392148;\nreturn accounts[index];\n    }\n}\n"
			},
			"remix_tests.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.4.22 <0.9.0;\n\nlibrary Assert {\n\n  event AssertionEvent(\n    bool passed,\n    string message,\n    string methodName\n  );\n\n  event AssertionEventUint(\n    bool passed,\n    string message,\n    string methodName,\n    uint256 returned,\n    uint256 expected\n  );\n\n  event AssertionEventInt(\n    bool passed,\n    string message,\n    string methodName,\n    int256 returned,\n    int256 expected\n  );\n\n  event AssertionEventBool(\n    bool passed,\n    string message,\n    string methodName,\n    bool returned,\n    bool expected\n  );\n\n  event AssertionEventAddress(\n    bool passed,\n    string message,\n    string methodName,\n    address returned,\n    address expected\n  );\n\n  event AssertionEventBytes32(\n    bool passed,\n    string message,\n    string methodName,\n    bytes32 returned,\n    bytes32 expected\n  );\n\n  event AssertionEventString(\n    bool passed,\n    string message,\n    string methodName,\n    string returned,\n    string expected\n  );\n\n  event AssertionEventUintInt(\n    bool passed,\n    string message,\n    string methodName,\n    uint256 returned,\n    int256 expected\n  );\n\n  event AssertionEventIntUint(\n    bool passed,\n    string message,\n    string methodName,\n    int256 returned,\n    uint256 expected\n  );\n\n  function ok(bool a, string memory message) public returns (bool result) {\n    result = a;\n    emit AssertionEvent(result, message, \"ok\");\n  }\n\n  function equal(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventUint(result, message, \"equal\", a, b);\n  }\n\n  function equal(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventInt(result, message, \"equal\", a, b);\n  }\n\n  function equal(bool a, bool b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventBool(result, message, \"equal\", a, b);\n  }\n\n  // TODO: only for certain versions of solc\n  //function equal(fixed a, fixed b, string message) public returns (bool result) {\n  //  result = (a == b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  // TODO: only for certain versions of solc\n  //function equal(ufixed a, ufixed b, string message) public returns (bool result) {\n  //  result = (a == b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  function equal(address a, address b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventAddress(result, message, \"equal\", a, b);\n  }\n\n  function equal(bytes32 a, bytes32 b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventBytes32(result, message, \"equal\", a, b);\n  }\n\n  function equal(string memory a, string memory b, string memory message) public returns (bool result) {\n     result = (keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)));\n     emit AssertionEventString(result, message, \"equal\", a, b);\n  }\n\n  function notEqual(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventUint(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventInt(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(bool a, bool b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventBool(result, message, \"notEqual\", a, b);\n  }\n\n  // TODO: only for certain versions of solc\n  //function notEqual(fixed a, fixed b, string message) public returns (bool result) {\n  //  result = (a != b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  // TODO: only for certain versions of solc\n  //function notEqual(ufixed a, ufixed b, string message) public returns (bool result) {\n  //  result = (a != b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  function notEqual(address a, address b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventAddress(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(bytes32 a, bytes32 b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventBytes32(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(string memory a, string memory b, string memory message) public returns (bool result) {\n    result = (keccak256(abi.encodePacked(a)) != keccak256(abi.encodePacked(b)));\n    emit AssertionEventString(result, message, \"notEqual\", a, b);\n  }\n\n  /*----------------- Greater than --------------------*/\n  function greaterThan(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a > b);\n    emit AssertionEventUint(result, message, \"greaterThan\", a, b);\n  }\n\n  function greaterThan(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a > b);\n    emit AssertionEventInt(result, message, \"greaterThan\", a, b);\n  }\n  // TODO: safely compare between uint and int\n  function greaterThan(uint256 a, int256 b, string memory message) public returns (bool result) {\n    if(b < int(0)) {\n      // int is negative uint \"a\" always greater\n      result = true;\n    } else {\n      result = (a > uint(b));\n    }\n    emit AssertionEventUintInt(result, message, \"greaterThan\", a, b);\n  }\n  function greaterThan(int256 a, uint256 b, string memory message) public returns (bool result) {\n    if(a < int(0)) {\n      // int is negative uint \"b\" always greater\n      result = false;\n    } else {\n      result = (uint(a) > b);\n    }\n    emit AssertionEventIntUint(result, message, \"greaterThan\", a, b);\n  }\n  /*----------------- Lesser than --------------------*/\n  function lesserThan(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a < b);\n    emit AssertionEventUint(result, message, \"lesserThan\", a, b);\n  }\n\n  function lesserThan(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a < b);\n    emit AssertionEventInt(result, message, \"lesserThan\", a, b);\n  }\n  // TODO: safely compare between uint and int\n  function lesserThan(uint256 a, int256 b, string memory message) public returns (bool result) {\n    if(b < int(0)) {\n      // int is negative int \"b\" always lesser\n      result = false;\n    } else {\n      result = (a < uint(b));\n    }\n    emit AssertionEventUintInt(result, message, \"lesserThan\", a, b);\n  }\n\n  function lesserThan(int256 a, uint256 b, string memory message) public returns (bool result) {\n    if(a < int(0)) {\n      // int is negative int \"a\" always lesser\n      result = true;\n    } else {\n      result = (uint(a) < b);\n    }\n    emit AssertionEventIntUint(result, message, \"lesserThan\", a, b);\n  }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyVesting.sol": {
				"WallyVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CliffGreaterThanDuration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NothingToRelease",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VestingRevokedAlready",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "VestingRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBeneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReleased",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  0x0120\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0xc0\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  tag_8\n  0x20\n  dup4\n  add\n  tag_1\n  jump\t// in\ntag_8:\n  swap1\n  0x40\n  dup4\n  add\n  mload\n  swap2\n  0x60\n  dup5\n  add\n  mload\n  swap2\n  tag_9\n  0xa0\n  0x80\n  dup8\n  add\n  mload\n  swap7\n  add\n  tag_1\n  jump\t// in\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/WallyVesting.sol\":1192:1212  _token == address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyVesting.sol\":1188:1237  if (_token == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  dup4\n  and\n    /* \"contracts/WallyVesting.sol\":1251:1277  _beneficiary == address(0) */\n  iszero\n    /* \"contracts/WallyVesting.sol\":1247:1302  if (_beneficiary == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  dup2\n  and\n    /* \"contracts/WallyVesting.sol\":1316:1336  _admin == address(0) */\n  iszero\n    /* \"contracts/WallyVesting.sol\":1312:1361  if (_admin == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n    /* \"contracts/WallyVesting.sol\":1375:1401  _cliffDuration > _duration */\n  dup6\n  dup5\n  gt\n    /* \"contracts/WallyVesting.sol\":1371:1436  if (_cliffDuration > _duration) revert CliffGreaterThanDuration() */\n  tag_16\n  jumpi\n    /* \"contracts/WallyVesting.sol\":1447:1477  _grantRole(ADMIN_ROLE, _admin) */\n  tag_18\n  swap1\n  tag_2\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  0x80\n    /* \"contracts/WallyVesting.sol\":1488:1510  token = IERC20(_token) */\n  mstore\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  0xa0\n    /* \"contracts/WallyVesting.sol\":1520:1546  beneficiary = _beneficiary */\n  mstore\n    /* \"contracts/WallyVesting.sol\":1556:1570  start = _start */\n  dup2\n  0xe0\n  mstore\n    /* \"contracts/WallyVesting.sol\":590:613  keccak256(\"ADMIN_ROLE\") */\n  dup2\n  add\n  dup1\n  swap2\n  gt\n  tag_19\n  jumpi\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  0xc0\n    /* \"contracts/WallyVesting.sol\":1580:1611  cliff = _start + _cliffDuration */\n  mstore\n    /* \"contracts/WallyVesting.sol\":1621:1641  duration = _duration */\n  0x0100\n  mstore\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x92301b0fbe71398b074974cbaad6952dd587c7bfe6c03904031cb0a6440991dd\")\n  mload(0xa0)\n  dup2\n  assignImmutable(\"0x742923de7bc50464937906bfe030fa4efb91e6a4573564a32c624c34f00beca2\")\n  mload(0xc0)\n  dup2\n  assignImmutable(\"0x5a93a2dc92091af230683d15d3257a435cf66aed689fda6017f4307513f6d5be\")\n    /* \"contracts/WallyVesting.sol\":1556:1570  start = _start */\n  0xe0\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  mload\n  dup2\n  assignImmutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n    /* \"contracts/WallyVesting.sol\":1621:1641  duration = _duration */\n  0x0100\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  mload\n  dup2\n  assignImmutable(\"0x22615f586e4a86b23ead367df957a03709c50c3e9f8d9d951d77eb93984a0744\")\n  return\n    /* \"contracts/WallyVesting.sol\":590:613  keccak256(\"ADMIN_ROLE\") */\ntag_19:\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  shl(0xe0, 0x4e487b71)\n  0x00\n    /* \"contracts/WallyVesting.sol\":590:613  keccak256(\"ADMIN_ROLE\") */\n  mstore\n  mstore(0x04, 0x11)\n  revert(0x00, 0x24)\n    /* \"contracts/WallyVesting.sol\":1371:1436  if (_cliffDuration > _duration) revert CliffGreaterThanDuration() */\ntag_16:\n    /* \"contracts/WallyVesting.sol\":1410:1436  CliffGreaterThanDuration() */\n  mstore(0x00, shl(0xe0, 0x67f675ff))\n  revert(0x00, 0x04)\n    /* \"contracts/WallyVesting.sol\":1312:1361  if (_admin == address(0)) revert InvalidAddress() */\ntag_14:\n    /* \"contracts/WallyVesting.sol\":1221:1237  InvalidAddress() */\n  shl(0xe0, 0xe6c4247b)\n  0x00\n    /* \"contracts/WallyVesting.sol\":1345:1361  InvalidAddress() */\n  mstore\n  revert(0x00, 0x04)\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_23\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  swap1\n    /* \"contracts/WallyVesting.sol\":590:613  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\nstop\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\n\nsub_0: assembly {\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_12, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_12:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_14\n      jumpi\n      pop\n      dup1\n      0x248a9ca3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x2bc9ed02\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x44b1231f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x565a2e2c\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x5b940081\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xb6549f75\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_38\n      jumpi\n      0xe33b7de3\n      eq\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyVesting.sol\":3816:3824  released */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_44:\n      0x00\n      dup1\n      revert\n    tag_38:\n      jumpi(tag_44, callvalue)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_48\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      tag_49\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_49:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_50\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_51\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_9\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_11\n      jump\t// in\n    tag_48:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      stop\n    tag_36:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_56\n      jumpi\n        /* \"contracts/WallyVesting.sol\":2486:2493  revoked */\n      0x02\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n      0xff\n      dup2\n      and\n        /* \"contracts/WallyVesting.sol\":2482:2525  if (revoked) revert VestingRevokedAlready() */\n      tag_58\n      jumpi\n      not(0xff)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      and\n        /* \"contracts/WallyVesting.sol\":2545:2549  true */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      or\n        /* \"contracts/WallyVesting.sol\":2486:2493  revoked */\n      0x02\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sstore\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":2602:2606  this */\n      address\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n        /* \"contracts/WallyVesting.sol\":2578:2583  token */\n      immutable(\"0x92301b0fbe71398b074974cbaad6952dd587c7bfe6c03904031cb0a6440991dd\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      and\n      swap1\n      0x20\n      dup2\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup2\n      dup6\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      swap2\n      tag_62\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_63:\n        /* \"contracts/WallyVesting.sol\":3000:3014  vestedAmount() */\n      pop\n        /* \"contracts/WallyVesting.sol\":3000:3025  vestedAmount() - released */\n      tag_64\n        /* \"contracts/WallyVesting.sol\":3000:3014  vestedAmount() */\n      tag_65\n      tag_6\n      jump\t// in\n    tag_65:\n        /* \"contracts/WallyVesting.sol\":2545:2549  true */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n        /* \"contracts/WallyVesting.sol\":3000:3025  vestedAmount() - released */\n      swap1\n      tag_5\n      jump\t// in\n    tag_64:\n        /* \"contracts/WallyVesting.sol\":2685:2705  balance > unreleased */\n      dup1\n      dup3\n      gt\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/WallyVesting.sol\":2710:2730  balance - unreleased */\n      tag_68\n      swap2\n      tag_5\n      jump\t// in\n    tag_68:\n        /* \"contracts/WallyVesting.sol\":2684:2735  (balance > unreleased) ? (balance - unreleased) : 0 */\n      swap1\n    tag_69:\n        /* \"contracts/WallyVesting.sol\":2750:2761  refund != 0 */\n      dup2\n        /* \"contracts/WallyVesting.sol\":2746:2882  if (refund != 0) {... */\n      tag_70\n      jumpi\n        /* \"contracts/WallyVesting.sol\":2684:2735  (balance > unreleased) ? (balance - unreleased) : 0 */\n    tag_71:\n        /* \"contracts/WallyVesting.sol\":2896:2912  VestingRevoked() */\n      0xab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed0\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2896:2912  VestingRevoked() */\n      dup1\n      log1\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      stop\n        /* \"contracts/WallyVesting.sol\":2746:2882  if (refund != 0) {... */\n    tag_70:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n      dup3\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x20\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n      swap2\n      tag_75\n      jumpi\n        /* \"contracts/WallyVesting.sol\":2746:2882  if (refund != 0) {... */\n    tag_76:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      pop\n      iszero\n      tag_77\n      jumpi\n        /* \"contracts/WallyVesting.sol\":2746:2882  if (refund != 0) {... */\n      dup1\n      dup1\n      jump(tag_71)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_77:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x1499599d5b990819985a5b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n    tag_75:\n      tag_79\n      swap2\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2792:2826  token.transfer(msg.sender, refund) */\n      gt\n      tag_80\n      jumpi\n    tag_81:\n      tag_82\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_82:\n      dup2\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_79:\n      dup2\n      jump(tag_76)\n    tag_80:\n      pop\n      returndatasize\n      jump(tag_81)\n    tag_73:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/WallyVesting.sol\":2684:2735  (balance > unreleased) ? (balance - unreleased) : 0 */\n    tag_66:\n      pop\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2684:2735  (balance > unreleased) ? (balance - unreleased) : 0 */\n      swap1\n      jump(tag_69)\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n    tag_62:\n      swap1\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      gt\n      tag_83\n      jumpi\n    tag_84:\n      dup2\n      tag_85\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_3\n      jump\t// in\n    tag_85:\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sub\n      slt\n      tag_44\n      jumpi\n      mload\n        /* \"contracts/WallyVesting.sol\":2578:2608  token.balanceOf(address(this)) */\n      dup3\n      jump(tag_63)\n    tag_83:\n      returndatasize\n      swap2\n      pop\n      jump(tag_84)\n        /* \"contracts/WallyVesting.sol\":2482:2525  if (revoked) revert VestingRevokedAlready() */\n    tag_58:\n        /* \"contracts/WallyVesting.sol\":1913:1936  VestingRevokedAlready() */\n      shl(0xe0, 0x01404c2b)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2502:2525  VestingRevokedAlready() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n      0x00\n        /* \"contracts/WallyVesting.sol\":2502:2525  VestingRevokedAlready() */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n      mstore\n        /* \"contracts/WallyVesting.sol\":590:613  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_34:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_32:\n      jumpi(tag_44, callvalue)\n      tag_94\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_94:\n      swap1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_30:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/WallyVesting.sol\":1715:1725  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/WallyVesting.sol\":1694:1726  !hasRole(ADMIN_ROLE, msg.sender) */\n      iszero\n        /* \"contracts/WallyVesting.sol\":1690:1750  if (!hasRole(ADMIN_ROLE, msg.sender)) revert NotAuthorized() */\n      tag_99\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0xff\n        /* \"contracts/WallyVesting.sol\":1897:1904  revoked */\n      0x02\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n      and\n        /* \"contracts/WallyVesting.sol\":1893:1936  if (revoked) revert VestingRevokedAlready() */\n      tag_58\n      jumpi\n        /* \"contracts/WallyVesting.sol\":3000:3014  vestedAmount() */\n      tag_103\n      tag_6\n      jump\t// in\n    tag_103:\n        /* \"contracts/WallyVesting.sol\":3000:3025  vestedAmount() - released */\n      tag_104\n        /* \"contracts/WallyVesting.sol\":3017:3025  released */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n        /* \"contracts/WallyVesting.sol\":3000:3025  vestedAmount() - released */\n      dup1\n      swap3\n      tag_5\n      jump\t// in\n    tag_104:\n        /* \"contracts/WallyVesting.sol\":1999:2014  unreleased == 0 */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/WallyVesting.sol\":1995:2041  if (unreleased == 0) revert NothingToRelease() */\n      tag_105\n      jumpi\n        /* \"contracts/WallyVesting.sol\":2099:2120  released + unreleased */\n      dup2\n      tag_107\n      swap2\n      tag_4\n      jump\t// in\n    tag_107:\n        /* \"contracts/WallyVesting.sol\":3017:3025  released */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sstore\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":2190:2201  beneficiary */\n      immutable(\"0x742923de7bc50464937906bfe030fa4efb91e6a4573564a32c624c34f00beca2\")\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      and\n      0x04\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      dup3\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x20\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      sub\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup2\n      0x00\n        /* \"contracts/WallyVesting.sol\":2175:2180  token */\n      immutable(\"0x92301b0fbe71398b074974cbaad6952dd587c7bfe6c03904031cb0a6440991dd\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      and\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      swap2\n      tag_111\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_112:\n      pop\n      iszero\n      tag_113\n      jumpi\n      0x20\n        /* \"contracts/WallyVesting.sol\":2273:2299  TokensReleased(unreleased) */\n      0xa1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      swap2\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":2273:2299  TokensReleased(unreleased) */\n      log1\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      stop\n    tag_113:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x151c985b9cd9995c8819985a5b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n    tag_111:\n      tag_115\n      swap2\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":2175:2214  token.transfer(beneficiary, unreleased) */\n      gt\n      tag_80\n      jumpi\n      tag_82\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_115:\n      dup3\n      jump(tag_112)\n        /* \"contracts/WallyVesting.sol\":1995:2041  if (unreleased == 0) revert NothingToRelease() */\n    tag_105:\n        /* \"contracts/WallyVesting.sol\":2023:2041  NothingToRelease() */\n      shl(0xe0, 0xb10205ed)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":2023:2041  NothingToRelease() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n      0x00\n        /* \"contracts/WallyVesting.sol\":2023:2041  NothingToRelease() */\n      revert\n        /* \"contracts/WallyVesting.sol\":1690:1750  if (!hasRole(ADMIN_ROLE, msg.sender)) revert NotAuthorized() */\n    tag_99:\n        /* \"contracts/WallyVesting.sol\":1735:1750  NotAuthorized() */\n      shl(0xe0, 0xea8e4eb5)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1735:1750  NotAuthorized() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n      0x00\n        /* \"contracts/WallyVesting.sol\":1735:1750  NotAuthorized() */\n      revert\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_28:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyVesting.sol\":3000:3025  vestedAmount() - released */\n      tag_123\n        /* \"contracts/WallyVesting.sol\":3000:3014  vestedAmount() */\n      tag_65\n      tag_6\n      jump\t// in\n        /* \"contracts/WallyVesting.sol\":3000:3025  vestedAmount() - released */\n    tag_123:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_26:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n        /* \"contracts/WallyVesting.sol\":3911:3922  beneficiary */\n      immutable(\"0x742923de7bc50464937906bfe030fa4efb91e6a4573564a32c624c34f00beca2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_24:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      tag_123\n      tag_6\n      jump\t// in\n    tag_22:\n      jumpi(tag_44, callvalue)\n      tag_136\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_48\n      swap2\n      tag_11\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_20:\n      jumpi(tag_44, callvalue)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_48\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      tag_143\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_51\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_10\n      jump\t// in\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_18:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"contracts/WallyVesting.sol\":3723:3730  revoked */\n      0x02\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_16:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_123\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_14:\n      jumpi(tag_44, callvalue)\n      jumpi(tag_44, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_44\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_162:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_161:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_162)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_1:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_44\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_44\n      jumpi\n      swap1\n      jump\t// out\n    tag_3:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_167\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_167:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_4:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_169\n      jumpi\n      jump\t// out\n    tag_169:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_5:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_169\n      jumpi\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":3038:3626  function vestedAmount() public view returns (uint256) {... */\n    tag_6:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":3149:3153  this */\n      address\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n      0x20\n      dup2\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup2\n        /* \"contracts/WallyVesting.sol\":3125:3130  token */\n      immutable(\"0x92301b0fbe71398b074974cbaad6952dd587c7bfe6c03904031cb0a6440991dd\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      and\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      swap1\n      tag_175\n      jumpi\n        /* \"contracts/WallyVesting.sol\":3038:3626  function vestedAmount() public view returns (uint256) {... */\n    tag_176:\n        /* \"contracts/WallyVesting.sol\":3189:3212  totalCurrent + released */\n      tag_177\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      swap2\n      pop\n        /* \"contracts/WallyVesting.sol\":3204:3212  released */\n      0x01\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n        /* \"contracts/WallyVesting.sol\":3189:3212  totalCurrent + released */\n      swap1\n      tag_4\n      jump\t// in\n    tag_177:\n        /* \"contracts/WallyVesting.sol\":3305:3310  cliff */\n      immutable(\"0x5a93a2dc92091af230683d15d3257a435cf66aed689fda6017f4307513f6d5be\")\n        /* \"contracts/WallyVesting.sol\":3287:3302  block.timestamp */\n      timestamp\n        /* \"contracts/WallyVesting.sol\":3287:3310  block.timestamp < cliff */\n      lt\n        /* \"contracts/WallyVesting.sol\":3305:3310  cliff */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/WallyVesting.sol\":3326:3334  return 0 */\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":3326:3334  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":3283:3620  if (block.timestamp < cliff) {... */\n    tag_178:\n        /* \"contracts/WallyVesting.sol\":3383:3391  duration */\n      immutable(\"0x22615f586e4a86b23ead367df957a03709c50c3e9f8d9d951d77eb93984a0744\")\n      swap1\n        /* \"contracts/WallyVesting.sol\":3375:3380  start */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/WallyVesting.sol\":3375:3391  start + duration */\n      tag_180\n        /* \"contracts/WallyVesting.sol\":3383:3391  duration */\n      dup4\n        /* \"contracts/WallyVesting.sol\":3375:3380  start */\n      dup3\n        /* \"contracts/WallyVesting.sol\":3375:3391  start + duration */\n      tag_4\n      jump\t// in\n    tag_180:\n        /* \"contracts/WallyVesting.sol\":3287:3302  block.timestamp */\n      timestamp\n        /* \"contracts/WallyVesting.sol\":3355:3392  block.timestamp >= (start + duration) */\n      lt\n      dup1\n      iszero\n        /* \"contracts/WallyVesting.sol\":3355:3403  block.timestamp >= (start + duration) || revoked */\n      swap1\n      tag_181\n      jumpi\n        /* \"contracts/WallyVesting.sol\":3283:3620  if (block.timestamp < cliff) {... */\n    tag_182:\n        /* \"contracts/WallyVesting.sol\":3351:3620  if (block.timestamp >= (start + duration) || revoked) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/WallyVesting.sol\":3419:3439  return totalAssigned */\n      pop\n      swap1\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":3351:3620  if (block.timestamp >= (start + duration) || revoked) {... */\n    tag_183:\n        /* \"contracts/WallyVesting.sol\":3490:3513  block.timestamp - start */\n      tag_185\n        /* \"contracts/WallyVesting.sol\":3287:3302  block.timestamp */\n      swap1\n      timestamp\n        /* \"contracts/WallyVesting.sol\":3490:3513  block.timestamp - start */\n      tag_5\n      jump\t// in\n    tag_185:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_169\n      jumpi\n      dup2\n      iszero\n      tag_188\n      jumpi\n      div\n        /* \"contracts/WallyVesting.sol\":3596:3609  return vested */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_188:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      0x12\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      0x04\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n      revert\n        /* \"contracts/WallyVesting.sol\":3355:3403  block.timestamp >= (start + duration) || revoked */\n    tag_181:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      pop\n      0xff\n        /* \"contracts/WallyVesting.sol\":3396:3403  revoked */\n      0x02\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sload\n      and\n        /* \"contracts/WallyVesting.sol\":3355:3403  block.timestamp >= (start + duration) || revoked */\n      jump(tag_182)\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n    tag_175:\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      gt\n      tag_190\n      jumpi\n    tag_191:\n      dup2\n      tag_192\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_3\n      jump\t// in\n    tag_192:\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      sub\n      slt\n      tag_44\n      jumpi\n        /* \"contracts/WallyVesting.sol\":3189:3212  totalCurrent + released */\n      tag_177\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      swap1\n      mload\n        /* \"contracts/WallyVesting.sol\":3125:3155  token.balanceOf(address(this)) */\n      jump(tag_176)\n    tag_190:\n      returndatasize\n      swap2\n      pop\n      jump(tag_191)\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n    tag_7:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_44\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_44\n      jumpi\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_10:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_201\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_11:\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyVesting.sol\":507:3931  contract WallyVesting is AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa264697066735822122022d3c16b3680a677a7a008f256257aa4ce74967a0df1ed6cec083af1c8a0c37464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 376,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610120601f610c8938819003918201601f19168301916001600160401b038311848410176101505780849260c09460405283398101031261014c5761004381610164565b61004f60208301610164565b9060408301519160608401519161006d60a060808701519601610164565b6001600160a01b0390911690811561013d576001600160a01b0383161561013d576001600160a01b0381161561013d5785841161012e576100ad90610178565b5060805260a0528160e052810180911161011a5760c05261010052604051610a459081610224823960805181818161017d01528181610461015261076a015260a0518181816104280152610578015260c051816107b1015260e05181610800015261010051816107de0152f35b634e487b7160e01b5f52601160045260245ffd5b6367f675ff60e01b5f5260045ffd5b63e6c4247b60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361014c57565b6001600160a01b0381165f9081525f516020610c695f395f51905f52602052604090205460ff1661021e576001600160a01b03165f8181525f516020610c695f395f51905f5260205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b505f9056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461067257508063248a9ca3146106485780632bc9ed02146106265780632f2ff15d146105f757806336568abe146105c157806344b1231f146105a7578063565a2e2c146105635780635b9400811461053e57806386d1a69f1461039857806391d148541461035d578063a217fddf14610343578063b6549f751461010d578063d547741f146100d75763e33b7de3146100b6575f80fd5b346100d3575f3660031901126100d3576020600154604051908152f35b5f80fd5b346100d35761010b6100e8366106c5565b90610106610101825f525f602052600160405f20015490565b6108cf565b61098f565b005b346100d3575f3660031901126100d357335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561030c5760025460ff81166102fd5760ff19166001176002556040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa9081156102b7575f916102cb575b506101d26101c961074f565b60015490610742565b808211156102c2576101e391610742565b905b81610211575b7fab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed05f80a1005b60405163a9059cbb60e01b81523360048201526024810192909252602090829060449082905f905af19081156102b7575f91610288575b50156102555780806101eb565b60405162461bcd60e51b815260206004820152600b60248201526a1499599d5b990819985a5b60aa1b6044820152606490fd5b6102aa915060203d6020116102b0575b6102a281836106eb565b8101906108b7565b81610248565b503d610298565b6040513d5f823e3d90fd5b50505f906101e5565b90506020813d6020116102f5575b816102e6602093836106eb565b810103126100d35751826101bd565b3d91506102d9565b6301404c2b60e01b5f5260045ffd5b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b346100d3575f3660031901126100d35760206040515f8152f35b346100d35761036b366106c5565b905f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100d3575f3660031901126100d357335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561052f5760ff600254166102fd576103f061074f565b6103fd6001548092610742565b908115610520578161040e91610721565b60015560405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052602081806044810103815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156102b7575f91610501575b50156104cc5760207fa1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f91604051908152a1005b60405162461bcd60e51b815260206004820152600d60248201526c151c985b9cd9995c8819985a5b609a1b6044820152606490fd5b61051a915060203d6020116102b0576102a281836106eb565b82610499565b63b10205ed60e01b5f5260045ffd5b63ea8e4eb560e01b5f5260045ffd5b346100d3575f3660031901126100d357602061055b6101c961074f565b604051908152f35b346100d3575f3660031901126100d3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100d3575f3660031901126100d357602061055b61074f565b346100d3576105cf366106c5565b336001600160a01b038216036105e85761010b9161098f565b63334bd91960e11b5f5260045ffd5b346100d35761010b610608366106c5565b90610621610101825f525f602052600160405f20015490565b610907565b346100d3575f3660031901126100d357602060ff600254166040519015158152f35b346100d35760203660031901126100d357602061055b6004355f525f602052600160405f20015490565b346100d35760203660031901126100d3576004359063ffffffff60e01b82168092036100d357602091637965db0b60e01b81149081156106b4575b5015158152f35b6301ffc9a760e01b149050836106ad565b60409060031901126100d357600435906024356001600160a01b03811681036100d35790565b90601f8019910116810190811067ffffffffffffffff82111761070d57604052565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161072e57565b634e487b7160e01b5f52601160045260245ffd5b9190820391821161072e57565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156102b7575f90610883575b6107af915060015490610721565b7f00000000000000000000000000000000000000000000000000000000000000004210156107dc57505f90565b7f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006108298382610721565b4210801590610877575b1561083e5750905090565b6108489042610742565b9081810291818304149015171561072e578115610863570490565b634e487b7160e01b5f52601260045260245ffd5b5060ff60025416610833565b506020813d6020116108af575b8161089d602093836106eb565b810103126100d3576107af90516107a1565b3d9150610890565b908160209103126100d3575180151581036100d35790565b5f8181526020818152604080832033845290915290205460ff16156108f15750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610989575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610989575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea264697066735822122022d3c16b3680a677a7a008f256257aa4ce74967a0df1ed6cec083af1c8a0c37464736f6c634300081c00337d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
							"opcodes": "PUSH2 0x120 PUSH1 0x1F PUSH2 0xC89 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x150 JUMPI DUP1 DUP5 SWAP3 PUSH1 0xC0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x14C JUMPI PUSH2 0x43 DUP2 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x4F PUSH1 0x20 DUP4 ADD PUSH2 0x164 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MLOAD SWAP2 PUSH1 0x60 DUP5 ADD MLOAD SWAP2 PUSH2 0x6D PUSH1 0xA0 PUSH1 0x80 DUP8 ADD MLOAD SWAP7 ADD PUSH2 0x164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x13D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x13D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x13D JUMPI DUP6 DUP5 GT PUSH2 0x12E JUMPI PUSH2 0xAD SWAP1 PUSH2 0x178 JUMP JUMPDEST POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE DUP2 PUSH1 0xE0 MSTORE DUP2 ADD DUP1 SWAP2 GT PUSH2 0x11A JUMPI PUSH1 0xC0 MSTORE PUSH2 0x100 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP1 DUP2 PUSH2 0x224 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x17D ADD MSTORE DUP2 DUP2 PUSH2 0x461 ADD MSTORE PUSH2 0x76A ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x428 ADD MSTORE PUSH2 0x578 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x7B1 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x800 ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x7DE ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x67F675FF PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14C JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xC69 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x21E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xC69 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x672 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x2BC9ED02 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x44B1231F EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0x565A2E2C EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x5B940081 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xB6549F75 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xD7 JUMPI PUSH4 0xE33B7DE3 EQ PUSH2 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x10B PUSH2 0xE8 CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST SWAP1 PUSH2 0x106 PUSH2 0x101 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x30C JUMPI PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x2FD JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP2 PUSH2 0x2CB JUMPI JUMPDEST POP PUSH2 0x1D2 PUSH2 0x1C9 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0x742 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x1E3 SWAP2 PUSH2 0x742 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x211 JUMPI JUMPDEST PUSH32 0xAB9BB9A2DBCE8EB1C5199596521D57563C7289FB1AC680030C44E9A0D16E6ED0 PUSH0 DUP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP2 PUSH2 0x288 JUMPI JUMPDEST POP ISZERO PUSH2 0x255 JUMPI DUP1 DUP1 PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1499599D5B990819985A5B PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2AA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B0 JUMPI JUMPDEST PUSH2 0x2A2 DUP2 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x8B7 JUMP JUMPDEST DUP2 PUSH2 0x248 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH0 SWAP1 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2F5 JUMPI JUMPDEST DUP2 PUSH2 0x2E6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD3 JUMPI MLOAD DUP3 PUSH2 0x1BD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D9 JUMP JUMPDEST PUSH4 0x1404C2B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x36B CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x52F JUMPI PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2FD JUMPI PUSH2 0x3F0 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x3FD PUSH1 0x1 SLOAD DUP1 SWAP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x520 JUMPI DUP2 PUSH2 0x40E SWAP2 PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP2 PUSH2 0x501 JUMPI JUMPDEST POP ISZERO PUSH2 0x4CC JUMPI PUSH1 0x20 PUSH32 0xA1598FB976F7DD9DF63FD18699C54A5744A6A95364166BBD0D77A2F6C8438B1F SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x151C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x51A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B0 JUMPI PUSH2 0x2A2 DUP2 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH4 0xB10205ED PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH2 0x55B PUSH2 0x1C9 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH2 0x55B PUSH2 0x74F JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x5CF CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x5E8 JUMPI PUSH2 0x10B SWAP2 PUSH2 0x98F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x10B PUSH2 0x608 CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST SWAP1 PUSH2 0x621 PUSH2 0x101 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH2 0x55B PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xD3 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x6B4 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xD3 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x70D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x72E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x72E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP1 PUSH2 0x883 JUMPI JUMPDEST PUSH2 0x7AF SWAP2 POP PUSH1 0x1 SLOAD SWAP1 PUSH2 0x721 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x7DC JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH2 0x829 DUP4 DUP3 PUSH2 0x721 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x877 JUMPI JUMPDEST ISZERO PUSH2 0x83E JUMPI POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP1 TIMESTAMP PUSH2 0x742 JUMP JUMPDEST SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x72E JUMPI DUP2 ISZERO PUSH2 0x863 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x833 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8AF JUMPI JUMPDEST DUP2 PUSH2 0x89D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD3 JUMPI PUSH2 0x7AF SWAP1 MLOAD PUSH2 0x7A1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x890 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD3 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8F1 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x989 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x989 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD3 0xC1 PUSH12 0x3680A677A7A008F256257AA4 0xCE PUSH21 0x967A0DF1ED6CEC083AF1C8A0C37464736F6C634300 ADDMOD SHR STOP CALLER PUSH30 0x7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292 0xEC ",
							"sourceMap": "507:3424:6:-:0;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;-1:-1:-1;;;;;507:3424:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;507:3424:6;;;;1192:20;;1188:49;;-1:-1:-1;;;;;507:3424:6;;1251:26;1247:55;;-1:-1:-1;;;;;507:3424:6;;1316:20;1312:49;;1375:26;;;1371:65;;1447:30;;;:::i;:::-;;507:3424;1488:22;507:3424;1520:26;1556:14;;;590:23;;;;;;;507:3424;1580:31;1621:20;;507:3424;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:14;507:3424;;;;;1621:20;507:3424;;;;;;590:23;507:3424;;;-1:-1:-1;590:23:6;;;;;-1:-1:-1;590:23:6;1371:65;1410:26;;;-1:-1:-1;1410:26:6;;-1:-1:-1;1410:26:6;1312:49;1221:16;;;-1:-1:-1;1345:16:6;;-1:-1:-1;1345:16:6;507:3424;-1:-1:-1;507:3424:6;;;;;;-1:-1:-1;507:3424:6;;;;;-1:-1:-1;507:3424:6;;;;-1:-1:-1;;;;;507:3424:6;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;507:3424:6;;;;;;-1:-1:-1;;;;;;;;;;;507:3424:6;;;;;;;;;;-1:-1:-1;;;;;507:3424:6;;;;;-1:-1:-1;;;;;;;;;;;507:3424:6;;;;;;;-1:-1:-1;;507:3424:6;;;;;735:10:3;;507:3424:6;590:23;;6370:40:0;;507:3424:6;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;507:3424:6;6466:12:0;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bool_fromMemory": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes32t_address": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 2255,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 2311,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 2447,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_vestedAmount": {
									"entryPoint": 1871,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"547": [
									{
										"length": 32,
										"start": 381
									},
									{
										"length": 32,
										"start": 1121
									},
									{
										"length": 32,
										"start": 1898
									}
								],
								"549": [
									{
										"length": 32,
										"start": 1064
									},
									{
										"length": 32,
										"start": 1400
									}
								],
								"551": [
									{
										"length": 32,
										"start": 1969
									}
								],
								"553": [
									{
										"length": 32,
										"start": 2048
									}
								],
								"555": [
									{
										"length": 32,
										"start": 2014
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461067257508063248a9ca3146106485780632bc9ed02146106265780632f2ff15d146105f757806336568abe146105c157806344b1231f146105a7578063565a2e2c146105635780635b9400811461053e57806386d1a69f1461039857806391d148541461035d578063a217fddf14610343578063b6549f751461010d578063d547741f146100d75763e33b7de3146100b6575f80fd5b346100d3575f3660031901126100d3576020600154604051908152f35b5f80fd5b346100d35761010b6100e8366106c5565b90610106610101825f525f602052600160405f20015490565b6108cf565b61098f565b005b346100d3575f3660031901126100d357335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561030c5760025460ff81166102fd5760ff19166001176002556040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa9081156102b7575f916102cb575b506101d26101c961074f565b60015490610742565b808211156102c2576101e391610742565b905b81610211575b7fab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed05f80a1005b60405163a9059cbb60e01b81523360048201526024810192909252602090829060449082905f905af19081156102b7575f91610288575b50156102555780806101eb565b60405162461bcd60e51b815260206004820152600b60248201526a1499599d5b990819985a5b60aa1b6044820152606490fd5b6102aa915060203d6020116102b0575b6102a281836106eb565b8101906108b7565b81610248565b503d610298565b6040513d5f823e3d90fd5b50505f906101e5565b90506020813d6020116102f5575b816102e6602093836106eb565b810103126100d35751826101bd565b3d91506102d9565b6301404c2b60e01b5f5260045ffd5b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b346100d3575f3660031901126100d35760206040515f8152f35b346100d35761036b366106c5565b905f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100d3575f3660031901126100d357335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561052f5760ff600254166102fd576103f061074f565b6103fd6001548092610742565b908115610520578161040e91610721565b60015560405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052602081806044810103815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156102b7575f91610501575b50156104cc5760207fa1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f91604051908152a1005b60405162461bcd60e51b815260206004820152600d60248201526c151c985b9cd9995c8819985a5b609a1b6044820152606490fd5b61051a915060203d6020116102b0576102a281836106eb565b82610499565b63b10205ed60e01b5f5260045ffd5b63ea8e4eb560e01b5f5260045ffd5b346100d3575f3660031901126100d357602061055b6101c961074f565b604051908152f35b346100d3575f3660031901126100d3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100d3575f3660031901126100d357602061055b61074f565b346100d3576105cf366106c5565b336001600160a01b038216036105e85761010b9161098f565b63334bd91960e11b5f5260045ffd5b346100d35761010b610608366106c5565b90610621610101825f525f602052600160405f20015490565b610907565b346100d3575f3660031901126100d357602060ff600254166040519015158152f35b346100d35760203660031901126100d357602061055b6004355f525f602052600160405f20015490565b346100d35760203660031901126100d3576004359063ffffffff60e01b82168092036100d357602091637965db0b60e01b81149081156106b4575b5015158152f35b6301ffc9a760e01b149050836106ad565b60409060031901126100d357600435906024356001600160a01b03811681036100d35790565b90601f8019910116810190811067ffffffffffffffff82111761070d57604052565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161072e57565b634e487b7160e01b5f52601160045260245ffd5b9190820391821161072e57565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156102b7575f90610883575b6107af915060015490610721565b7f00000000000000000000000000000000000000000000000000000000000000004210156107dc57505f90565b7f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006108298382610721565b4210801590610877575b1561083e5750905090565b6108489042610742565b9081810291818304149015171561072e578115610863570490565b634e487b7160e01b5f52601260045260245ffd5b5060ff60025416610833565b506020813d6020116108af575b8161089d602093836106eb565b810103126100d3576107af90516107a1565b3d9150610890565b908160209103126100d3575180151581036100d35790565b5f8181526020818152604080832033845290915290205460ff16156108f15750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610989575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610989575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea264697066735822122022d3c16b3680a677a7a008f256257aa4ce74967a0df1ed6cec083af1c8a0c37464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x672 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x2BC9ED02 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x44B1231F EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0x565A2E2C EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x5B940081 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xB6549F75 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xD7 JUMPI PUSH4 0xE33B7DE3 EQ PUSH2 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x10B PUSH2 0xE8 CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST SWAP1 PUSH2 0x106 PUSH2 0x101 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x30C JUMPI PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x2FD JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP2 PUSH2 0x2CB JUMPI JUMPDEST POP PUSH2 0x1D2 PUSH2 0x1C9 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0x742 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x1E3 SWAP2 PUSH2 0x742 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x211 JUMPI JUMPDEST PUSH32 0xAB9BB9A2DBCE8EB1C5199596521D57563C7289FB1AC680030C44E9A0D16E6ED0 PUSH0 DUP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP2 PUSH2 0x288 JUMPI JUMPDEST POP ISZERO PUSH2 0x255 JUMPI DUP1 DUP1 PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1499599D5B990819985A5B PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2AA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B0 JUMPI JUMPDEST PUSH2 0x2A2 DUP2 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x8B7 JUMP JUMPDEST DUP2 PUSH2 0x248 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH0 SWAP1 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2F5 JUMPI JUMPDEST DUP2 PUSH2 0x2E6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD3 JUMPI MLOAD DUP3 PUSH2 0x1BD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D9 JUMP JUMPDEST PUSH4 0x1404C2B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x36B CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x52F JUMPI PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2FD JUMPI PUSH2 0x3F0 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x3FD PUSH1 0x1 SLOAD DUP1 SWAP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x520 JUMPI DUP2 PUSH2 0x40E SWAP2 PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP2 PUSH2 0x501 JUMPI JUMPDEST POP ISZERO PUSH2 0x4CC JUMPI PUSH1 0x20 PUSH32 0xA1598FB976F7DD9DF63FD18699C54A5744A6A95364166BBD0D77A2F6C8438B1F SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x151C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x51A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B0 JUMPI PUSH2 0x2A2 DUP2 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH4 0xB10205ED PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH2 0x55B PUSH2 0x1C9 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH2 0x55B PUSH2 0x74F JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x5CF CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x5E8 JUMPI PUSH2 0x10B SWAP2 PUSH2 0x98F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH2 0x10B PUSH2 0x608 CALLDATASIZE PUSH2 0x6C5 JUMP JUMPDEST SWAP1 PUSH2 0x621 PUSH2 0x101 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH2 0x55B PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xD3 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x6B4 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xD3 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x70D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x72E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x72E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 SWAP1 PUSH2 0x883 JUMPI JUMPDEST PUSH2 0x7AF SWAP2 POP PUSH1 0x1 SLOAD SWAP1 PUSH2 0x721 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x7DC JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH2 0x829 DUP4 DUP3 PUSH2 0x721 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x877 JUMPI JUMPDEST ISZERO PUSH2 0x83E JUMPI POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP1 TIMESTAMP PUSH2 0x742 JUMP JUMPDEST SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x72E JUMPI DUP2 ISZERO PUSH2 0x863 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x833 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8AF JUMPI JUMPDEST DUP2 PUSH2 0x89D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD3 JUMPI PUSH2 0x7AF SWAP1 MLOAD PUSH2 0x7A1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x890 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD3 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8F1 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x989 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x989 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD3 0xC1 PUSH12 0x3680A677A7A008F256257AA4 0xCE PUSH21 0x967A0DF1ED6CEC083AF1C8A0C37464736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "507:3424:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;;3816:8;507:3424;;;;;;;;;;;;;;;4747:26:0;507:3424:6;;;:::i;:::-;4717:18:0;2475:4;4717:18;;3901:6;507:3424:6;3901:6:0;507:3424:6;;3901:22:0;507:3424:6;3901:6:0;507:3424:6;3901:22:0;507:3424:6;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;507:3424:6;;;;;;;-1:-1:-1;;507:3424:6;;;;735:10:3;507:3424:6;;;;;;;;;;;;;3519:23:0;3515:108;;2486:7:6;507:3424;;;;2482:43;;-1:-1:-1;;507:3424:6;2545:4;507:3424;2486:7;507:3424;;;-1:-1:-1;;;2578:30:6;;2602:4;507:3424;2578:30;;507:3424;2578:5;-1:-1:-1;;;;;507:3424:6;;;;2578:30;507:3424;;2578:30;;;;;;;507:3424;2578:30;;;507:3424;3000:14;:25;:14;;:::i;:::-;2545:4;507:3424;3000:25;;:::i;:::-;2685:20;;;;;;2710;;;:::i;:::-;2684:51;;2750:11;2746:136;;2684:51;2896:16;507:3424;2896:16;;507:3424;2746:136;507:3424;;-1:-1:-1;;;2792:34:6;;735:10:3;507:3424:6;2792:34;;507:3424;;;;;;;;;;;;;;;;-1:-1:-1;;2792:34:6;;;;;;;507:3424;2792:34;;;2746:136;507:3424;;;;2746:136;;;;507:3424;;;-1:-1:-1;;;507:3424:6;;;;;;;;2578:30;507:3424;;;-1:-1:-1;;;507:3424:6;;;;;;;2792:34;;;;507:3424;2792:34;507:3424;2792:34;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;507:3424;;;;;;;;;2684:51;;;507:3424;2684:51;;;2578:30;;;507:3424;2578:30;;507:3424;2578:30;;;;;;507:3424;2578:30;;;:::i;:::-;;;507:3424;;;;;2578:30;;;;;;-1:-1:-1;2578:30:6;;2482:43;1913:23;;;507:3424;2502:23;507:3424;;2502:23;3515:108:0;3565:47;;;507:3424:6;3565:47:0;735:10:3;507:3424:6;;590:23;507:3424;;;;3565:47:0;507:3424:6;;;;;;-1:-1:-1;;507:3424:6;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2954:29:0;507:3424:6;;;;;;-1:-1:-1;507:3424:6;;;;;;-1:-1:-1;507:3424:6;;;;;;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;1715:10;507:3424;;;;;;;;;;;;;1694:32;1690:60;;507:3424;1897:7;507:3424;;1893:43;;3000:14;;:::i;:::-;:25;3017:8;507:3424;3000:25;;;:::i;:::-;1999:15;;;1995:46;;2099:21;;;;:::i;:::-;3017:8;507:3424;;;-1:-1:-1;;;2175:39:6;;-1:-1:-1;;;;;2190:11:6;507:3424;;2175:39;;507:3424;;;;;;;;;;;;;2175:39;507:3424;;2175:5;-1:-1:-1;;;;;507:3424:6;2175:39;;;;;;;507:3424;2175:39;;;507:3424;;;;;;2273:26;507:3424;;;;;;2273:26;507:3424;;;;-1:-1:-1;;;507:3424:6;;;;;;;;;;;;-1:-1:-1;;;507:3424:6;;;;;;;2175:39;;;;507:3424;2175:39;507:3424;2175:39;;;;;;;:::i;:::-;;;;1995:46;2023:18;;;507:3424;2023:18;507:3424;;2023:18;1690:60;1735:15;;;507:3424;1735:15;507:3424;;1735:15;507:3424;;;;;;-1:-1:-1;;507:3424:6;;;;;3000:25;:14;;:::i;:25::-;507:3424;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;;;3911:11;-1:-1:-1;;;;;507:3424:6;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;;;;:::i;:::-;;;;;;;:::i;:::-;735:10:3;-1:-1:-1;;;;;507:3424:6;;5421:34:0;5417:102;;5529:37;;;:::i;5417:102::-;5478:30;;;507:3424:6;5478:30:0;507:3424:6;;5478:30:0;507:3424:6;;;;4330:25:0;507:3424:6;;;:::i;:::-;4300:18:0;2475:4;4300:18;;3901:6;507:3424:6;3901:6:0;507:3424:6;;3901:22:0;507:3424:6;3901:6:0;507:3424:6;3901:22:0;507:3424:6;3810:120:0;;2475:4;4330:25;:::i;507:3424:6:-;;;;;;-1:-1:-1;;507:3424:6;;;;;;3723:7;507:3424;;;;;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;;;;;3901:6:0;507:3424:6;3901:6:0;507:3424:6;;3901:22:0;507:3424:6;3901:6:0;507:3424:6;3901:22:0;507:3424:6;3810:120:0;;507:3424:6;;;;;;-1:-1:-1;;507:3424:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;507:3424:6;;;;;;;2673:87:0;-1:-1:-1;;;862:40:4;;-1:-1:-1;2673:87:0;;;507:3424:6;;;;;;;;;;;;;;-1:-1:-1;;;;;507:3424:6;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;507:3424:6;;;;;-1:-1:-1;507:3424:6;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;3038:588::-;507:3424;;-1:-1:-1;;;3125:30:6;;3149:4;3125:30;;;507:3424;;;3125:30;507:3424;3125:5;-1:-1:-1;;;;;507:3424:6;3125:30;;;;;;507:3424;3125:30;;;3038:588;3189:23;507:3424;;3204:8;507:3424;3189:23;;:::i;:::-;3305:5;3287:15;:23;3305:5;;;3326:8;507:3424;3326:8;:::o;3283:337::-;3383:8;;3375:5;:16;3383:8;3375:5;:16;:::i;:::-;3287:15;3355:37;;;:48;;;3283:337;3351:269;;;3419:20;;;;:::o;3351:269::-;3490:23;3287:15;;3490:23;:::i;:::-;507:3424;;;;;;;;;;;;;;;;;;;;3596:13;:::o;507:3424::-;;;;;;;3125:30;507:3424;3125:30;507:3424;;3355:48;507:3424;;3396:7;507:3424;;3355:48;;3125:30;;507:3424;3125:30;;507:3424;3125:30;;;;;;507:3424;3125:30;;;:::i;:::-;;;507:3424;;;;3189:23;507:3424;;3125:30;;;;;-1:-1:-1;3125:30:6;;507:3424;;;;;;;;;;;;;;;;;;:::o;3199:103:0:-;2954:6;507:3424:6;;;;;;;;;;;735:10:3;507:3424:6;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:3;3565:47:0;507:3424:6;;;;2954:6:0;3565:47;6179:316;507:3424:6;;;;;;;;;;;;-1:-1:-1;;;;;507:3424:6;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:3424:6;;;;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;;;735:10:3;;507:3424:6;;6370:40:0;;507:3424:6;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;;507:3424:6;6466:12:0;:::o;6730:317::-;507:3424:6;;;;;;;;;;;;-1:-1:-1;;;;;507:3424:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:3424:6;;;;;;;;;;;;;;;-1:-1:-1;;507:3424:6;;;735:10:3;;507:3424:6;;6922:40:0;;507:3424:6;6922:40:0;507:3424:6;6976:11:0;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "525800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "372",
								"getBeneficiary()": "infinite",
								"getRoleAdmin(bytes32)": "2363",
								"grantRole(bytes32,address)": "33339",
								"hasRole(bytes32,address)": "2691",
								"isRevoked()": "2312",
								"releasableAmount()": "infinite",
								"release()": "infinite",
								"renounceRole(bytes32,address)": "28929",
								"revoke()": "infinite",
								"revokeRole(bytes32,address)": "33534",
								"supportsInterface(bytes4)": "270",
								"totalReleased()": "2539",
								"vestedAmount()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 3931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 3931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 3931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1192,
									"end": 1212,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1192,
									"end": 1212,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1188,
									"end": 1237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1277,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1247,
									"end": 1302,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1336,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1312,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1312,
									"end": 1361,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1375,
									"end": 1401,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1375,
									"end": 1401,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1375,
									"end": 1401,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1371,
									"end": 1436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1447,
									"end": 1477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1447,
									"end": 1477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1477,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1447,
									"end": 1477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1488,
									"end": 1510,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1520,
									"end": 1546,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1570,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1556,
									"end": 1570,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 1580,
									"end": 1611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1641,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1621,
									"end": 1641,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "547"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "549"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "551"
								},
								{
									"begin": 1556,
									"end": 1570,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "553"
								},
								{
									"begin": 1621,
									"end": 1641,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "555"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1436,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1371,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1436,
									"name": "PUSH",
									"source": 6,
									"value": "67F675FF"
								},
								{
									"begin": 1410,
									"end": 1436,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1410,
									"end": 1436,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1410,
									"end": 1436,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1436,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1410,
									"end": 1436,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1312,
									"end": 1361,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1312,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1237,
									"name": "PUSH",
									"source": 6,
									"value": "E6C4247B"
								},
								{
									"begin": 1221,
									"end": 1237,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1221,
									"end": 1237,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 590,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 590,
									"end": 613,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 3931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022d3c16b3680a677a7a008f256257aa4ce74967a0df1ed6cec083af1c8a0c37464736f6c634300081c0033",
									".code": [
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "248A9CA3"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "2BC9ED02"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "2F2FF15D"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "36568ABE"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44B1231F"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "565A2E2C"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "5B940081"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "86D1A69F"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "91D14854"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "A217FDDF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "B6549F75"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "D547741F"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "E33B7DE3"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3816,
											"end": 3824,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2493,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2482,
											"end": 2525,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2493,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3000,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3000,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2710,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "AB9BB9A2DBCE8EB1C5199596521D57563C7289FB1AC680030C44E9A0D16E6ED0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2912,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2746,
											"end": 2882,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1499599D5B990819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2792,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2792,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2578,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2525,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2482,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "PUSH",
											"source": 6,
											"value": "1404C2B"
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2525,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 590,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1690,
											"end": 1750,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1897,
											"end": 1904,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1893,
											"end": 1936,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3000,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3017,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3000,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1995,
											"end": 2041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2099,
											"end": 2120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2099,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2120,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2099,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2201,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "A1598FB976F7DD9DF63FD18699C54A5744A6A95364166BBD0D77A2F6C8438B1F"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2299,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2175,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2175,
											"end": 2214,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2041,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1995,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "B10205ED"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1750,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1690,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "EA8E4EB5"
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3000,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "549"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3723,
											"end": 3730,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3038,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3153,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3038,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3204,
											"end": 3212,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3189,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3310,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3620,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3283,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3380,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3620,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3283,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3620,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3351,
											"end": 3620,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3620,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3351,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3490,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3513,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3490,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3396,
											"end": 3403,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3355,
											"end": 3403,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3125,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 507,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								},
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyVesting_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getBeneficiary()": "565a2e2c",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isRevoked()": "2bc9ed02",
							"releasableAmount()": "5b940081",
							"release()": "86d1a69f",
							"renounceRole(bytes32,address)": "36568abe",
							"revoke()": "b6549f75",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalReleased()": "e33b7de3",
							"vestedAmount()": "44b1231f"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 557,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "released",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 559,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "revoked",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/WallyVesting.sol:WallyVesting",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/WallyVesting.sol:WallyVesting",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"remix_accounts.sol": {
				"TestsAccounts": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_3, eq(0xce88b145, shr(0xe0, calldataload(0x00))))\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_5, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x01e0\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_7\n      jumpi\n      0x40\n      mstore\n      calldatasize\n      dup3\n      calldatacopy\n        /* \"remix_accounts.sol\":216:258  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      dup2\n      mstore\n        /* \"remix_accounts.sol\":277:319  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":338:380  0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db */\n      0x4b20993bc481177ec7e8f571cecae8a9e22c02db\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":399:441  0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n      0x78731d3ca6b7e34ac0f824c42a7cc18a495cabab\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":460:502  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n      0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x80\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":521:563  0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n      0x17f6ad8ef982297579c203069c1dbffe4348c372\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":582:624  0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678 */\n      0x5c6b0f7bf3e7ce046039bd8fabdfd3f9f5021678\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":643:685  0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7 */\n      0x03c6fced478cbbc9a4fab34ef9f40767739d1ff7\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0xe0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":704:746  0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C */\n      0x1ae0ea34a72d944a8c7603ffb3ec30a6669e454c\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0100\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":765:807  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n      0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0120\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":827:869  0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c */\n      0xca35b7d915458ef540ade6068dfe2f44e8fa733c\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0140\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":889:931  0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C */\n      0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0160\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":951:993  0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB */\n      0x4b0897b0513fdc7c541b6d9d7e929c4e5364d2db\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0180\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":1013:1055  0x583031D1113aD414F02576BD6afaBfb302140225 */\n      0x583031d1113ad414f02576bd6afabfb302140225\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x01a0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":1075:1117  0xdD870fA1b7C4700F2BD7f44238821C26f7392148 */\n      0xdd870fa1b7c4700f2bd7f44238821c26f7392148\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x01c0\n      dup3\n      add\n      mstore\n      0x0f\n      dup3\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_9:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_7:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601957610264908161001e823930815050f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63ce88b14514610024575f80fd5b602036600319011261022a576004356101e06040519080820182811067ffffffffffffffff82111761021657604052368237735b38da6a701c568545dcfcb03fcb875f56beddc4815273ab8483f64d9c6d1ecf9b849ae677dd3315835cb26020820152734b20993bc481177ec7e8f571cecae8a9e22c02db60408201527378731d3ca6b7e34ac0f824c42a7cc18a495cabab606082015273617f2e2fd72fd9d5503197092ac168c91465e7f260808201527317f6ad8ef982297579c203069c1dbffe4348c37260a0820152735c6b0f7bf3e7ce046039bd8fabdfd3f9f502167860c08201527303c6fced478cbbc9a4fab34ef9f40767739d1ff760e0820152731ae0ea34a72d944a8c7603ffb3ec30a6669e454c610100820152730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc61012082015273ca35b7d915458ef540ade6068dfe2f44e8fa733c6101408201527314723a09acff6d2a60dcdf7aa4aff308fddc160c610160820152734b0897b0513fdc7c541b6d9d7e929c4e5364d2db61018082015273583031d1113ad414f02576bd6afabfb3021402256101a082015273dd870fa1b7c4700f2bd7f44238821c26f73921486101c0820152600f8210156102025760209160051b0160018060a01b03905116604051908152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f80fdfea26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH2 0x264 SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xCE88B145 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1E0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x216 JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP3 CALLDATACOPY PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 DUP2 MSTORE PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x5C6B0F7BF3E7CE046039BD8FABDFD3F9F5021678 PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0x3C6FCED478CBBC9A4FAB34EF9F40767739D1FF7 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x1AE0EA34A72D944A8C7603FFB3EC30A6669E454C PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x583031D1113AD414F02576BD6AFABFB302140225 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xF DUP3 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xCE SELFBALANCE OR 0xEA SHL MSIZE PUSH23 0xD7A34F434CC0D41853ECA9E4C45F56BD25CE74DA6780B6 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:1079:7:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c63ce88b14514610024575f80fd5b602036600319011261022a576004356101e06040519080820182811067ffffffffffffffff82111761021657604052368237735b38da6a701c568545dcfcb03fcb875f56beddc4815273ab8483f64d9c6d1ecf9b849ae677dd3315835cb26020820152734b20993bc481177ec7e8f571cecae8a9e22c02db60408201527378731d3ca6b7e34ac0f824c42a7cc18a495cabab606082015273617f2e2fd72fd9d5503197092ac168c91465e7f260808201527317f6ad8ef982297579c203069c1dbffe4348c37260a0820152735c6b0f7bf3e7ce046039bd8fabdfd3f9f502167860c08201527303c6fced478cbbc9a4fab34ef9f40767739d1ff760e0820152731ae0ea34a72d944a8c7603ffb3ec30a6669e454c610100820152730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc61012082015273ca35b7d915458ef540ade6068dfe2f44e8fa733c6101408201527314723a09acff6d2a60dcdf7aa4aff308fddc160c610160820152734b0897b0513fdc7c541b6d9d7e929c4e5364d2db61018082015273583031d1113ad414f02576bd6afabfb3021402256101a082015273dd870fa1b7c4700f2bd7f44238821c26f73921486101c0820152600f8210156102025760209160051b0160018060a01b03905116604051908152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f80fdfea26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xCE88B145 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1E0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x216 JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP3 CALLDATACOPY PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 DUP2 MSTORE PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x5C6B0F7BF3E7CE046039BD8FABDFD3F9F5021678 PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0x3C6FCED478CBBC9A4FAB34EF9F40767739D1FF7 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x1AE0EA34A72D944A8C7603FFB3EC30A6669E454C PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x583031D1113AD414F02576BD6AFABFB302140225 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xF DUP3 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xCE SELFBALANCE OR 0xEA SHL MSIZE PUSH23 0xD7A34F434CC0D41853ECA9E4C45F56BD25CE74DA6780B6 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:1079:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;71:1079:7;;;;;;;;;;;;;;;;;;;;;;;;;;;216:42;71:1079;;277:42;71:1079;;;;338:42;71:1079;;;;399:42;71:1079;;;;460:42;71:1079;;;;521:42;71:1079;;;;582:42;71:1079;;;;643:42;71:1079;;;;704:42;71:1079;;;;765:42;71:1079;;;;827:42;71:1079;;;;889:42;71:1079;;;;951:42;71:1079;;;;1013:42;71:1079;;;;1075:42;71:1079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getAccount(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "library_deploy_address"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "REVERT",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033",
									".code": [
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "CE88B145"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "1E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 216,
											"end": 258,
											"name": "PUSH",
											"source": 7,
											"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 277,
											"end": 319,
											"name": "PUSH",
											"source": 7,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 338,
											"end": 380,
											"name": "PUSH",
											"source": 7,
											"value": "4B20993BC481177EC7E8F571CECAE8A9E22C02DB"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 399,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "78731D3CA6B7E34AC0F824C42A7CC18A495CABAB"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 460,
											"end": 502,
											"name": "PUSH",
											"source": 7,
											"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 563,
											"name": "PUSH",
											"source": 7,
											"value": "17F6AD8EF982297579C203069C1DBFFE4348C372"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 582,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "5C6B0F7BF3E7CE046039BD8FABDFD3F9F5021678"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 643,
											"end": 685,
											"name": "PUSH",
											"source": 7,
											"value": "3C6FCED478CBBC9A4FAB34EF9F40767739D1FF7"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 704,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "1AE0EA34A72D944A8C7603FFB3EC30A6669E454C"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 765,
											"end": 807,
											"name": "PUSH",
											"source": 7,
											"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 827,
											"end": 869,
											"name": "PUSH",
											"source": 7,
											"value": "CA35B7D915458EF540ADE6068DFE2F44E8FA733C"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 889,
											"end": 931,
											"name": "PUSH",
											"source": 7,
											"value": "14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 951,
											"end": 993,
											"name": "PUSH",
											"source": 7,
											"value": "4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1055,
											"name": "PUSH",
											"source": 7,
											"value": "583031D1113AD414F02576BD6AFABFB302140225"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "1A0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1117,
											"name": "PUSH",
											"source": 7,
											"value": "DD870FA1B7C4700F2BD7F44238821C26F7392148"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "1C0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyVesting_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getAccount(uint256)": "ce88b145"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"remix_tests.sol": {
				"Assert": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								}
							],
							"name": "AssertionEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "returned",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "expected",
									"type": "address"
								}
							],
							"name": "AssertionEventAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "returned",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "expected",
									"type": "bool"
								}
							],
							"name": "AssertionEventBool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "returned",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "expected",
									"type": "bytes32"
								}
							],
							"name": "AssertionEventBytes32",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "returned",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "expected",
									"type": "int256"
								}
							],
							"name": "AssertionEventInt",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "returned",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								}
							],
							"name": "AssertionEventIntUint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "returned",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "expected",
									"type": "string"
								}
							],
							"name": "AssertionEventString",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "returned",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								}
							],
							"name": "AssertionEventUint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "returned",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "expected",
									"type": "int256"
								}
							],
							"name": "AssertionEventUintInt",
							"type": "event"
						}
					],
					"evm": {
						"assembly": "    /* \"remix_tests.sol\":71:6823  library Assert {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mstore(0x40, 0x80)\n      eq(immutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\"), address)\n      jumpi(tag_12, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_12:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0897e4c7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x18211bfb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x39df137f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x44781a00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x44b7f248\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x49f97939\n      eq\n      tag_24\n      jumpi\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      dup1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      0x4e3e4035\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      eq\n      tag_26\n      jumpi\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup1\n      0x556fe562\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x561015e2\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x767392b3\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x77c6d463\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x8c45cb97\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x9c0b4336\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xa079f1a3\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xabcd7960\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xaea88952\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xb8f28531\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xbfba5dd6\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xe8c2cb16\n      eq\n      tag_50\n      jumpi\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      dup1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      0xea79dd79\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      eq\n      tag_52\n      jumpi\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      0xf5bae6b6\n      eq\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      tag_56\n      jumpi\n      0x20\n      tag_58\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_59\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_59:\n        /* \"remix_tests.sol\":1707:1713  a == b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_58:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x05\n      dup2\n      mstore\n      shl(0xda, 0x195c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_60:\n      swap2\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      mstore\n        /* \"remix_tests.sol\":1725:1774  AssertionEventInt(result, message, \"equal\", a, b) */\n      sub\n      swap1\n      log1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_56:\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n        /* \"remix_tests.sol\":2679:2732  AssertionEventBytes32(result, message, \"equal\", a, b) */\n      0x80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd28\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_59\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_50:\n      pop\n      tag_56\n      jumpi\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      0x20\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_68\n        /* \"remix_tests.sol\":2936:2988  AssertionEventString(result, message, \"equal\", a, b) */\n      0x772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_69\n      tag_70\n      calldatasize\n      tag_5\n      jump\t// in\n    tag_70:\n      swap2\n      swap5\n      swap1\n      tag_71\n      mload(0x40)\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      dup9\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      tag_72\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup11\n      dup3\n      dup2\n      dup13\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      sub\n      add\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      not(0x1f)\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_72:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":2859:2889  keccak256(abi.encodePacked(a)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      dup10\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      tag_73\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup12\n      dup3\n      dup8\n      mload\n      dup1\n      dup4\n      dup11\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      sub\n      add\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      not(0x1f)\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_73:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":2893:2923  keccak256(abi.encodePacked(b)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":2859:2923  keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)) */\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap7\n      tag_74\n      mload(0x40)\n      swap7\n      dup8\n      swap7\n      dup11\n      dup9\n      mstore\n      0xa0\n      dup13\n      dup10\n      add\n      mstore\n      0xa0\n      dup9\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_69:\n      dup7\n      dup2\n      sub\n      0x40\n      dup9\n      add\n      mstore\n      0x05\n      dup2\n      mstore\n      shl(0xda, 0x195c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_74:\n      swap1\n      dup6\n      dup3\n      sub\n      0x60\n      dup8\n      add\n      mstore\n      tag_7\n      jump\t// in\n    tag_71:\n      swap1\n      dup4\n      dup3\n      sub\n      0x80\n      dup6\n      add\n      mstore\n      tag_7\n      jump\t// in\n    tag_68:\n        /* \"remix_tests.sol\":2936:2988  AssertionEventString(result, message, \"equal\", a, b) */\n      sub\n      swap1\n      log1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n        /* \"remix_tests.sol\":2494:2547  AssertionEventAddress(result, message, \"equal\", a, b) */\n      0xac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_78\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      swap1\n      swap3\n      and\n        /* \"remix_tests.sol\":2476:2482  a == b */\n      dup4\n      dup2\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup1\n      dup5\n      mstore\n      0xa0\n      dup9\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n        /* \"remix_tests.sol\":2476:2482  a == b */\n      swap1\n      swap7\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap4\n      swap5\n      dup6\n      swap5\n      swap1\n      swap4\n      tag_60\n      swap3\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_46:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n        /* \"remix_tests.sol\":4096:4152  AssertionEventAddress(result, message, \"notEqual\", a, b) */\n      0xac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_83\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      swap1\n      swap3\n      and\n        /* \"remix_tests.sol\":4078:4084  a != b */\n      dup4\n      dup2\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup1\n      dup5\n      mstore\n      0xa0\n      dup9\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n        /* \"remix_tests.sol\":4078:4084  a != b */\n      swap1\n      swap7\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap4\n      swap5\n      dup6\n      swap5\n      swap1\n      swap4\n      tag_60\n      swap3\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_82:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc2, 0x1b9bdd115c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_44:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_88\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_88:\n        /* \"remix_tests.sol\":5891:5896  a < b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      lt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_87:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x0a\n      dup2\n      mstore\n      shl(0xb1, 0x3632b9b9b2b92a3430b7)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_42:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_59\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_40:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_98\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_98:\n        /* \"remix_tests.sol\":4781:4786  a > b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      gt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_97:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x0b\n      dup2\n      mstore\n      shl(0xa9, 0x33b932b0ba32b92a3430b7)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_38:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_103\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_103:\n        /* \"remix_tests.sol\":4972:4977  a > b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      sgt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_36:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n        /* \"remix_tests.sol\":5344:5403  AssertionEventUintInt(result, message, \"greaterThan\", a, b) */\n      0x14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe8\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_108\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_108:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":5202:5212  b < int(0) */\n      dup3\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"remix_tests.sol\":5280:5284  true */\n      0x01\n        /* \"remix_tests.sol\":5199:5334  if(b < int(0)) {... */\n      swap2\n    tag_111:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n        /* \"remix_tests.sol\":5199:5334  if(b < int(0)) {... */\n    tag_109:\n        /* \"remix_tests.sol\":5315:5326  a > uint(b) */\n      dup2\n      dup2\n      gt\n        /* \"remix_tests.sol\":5199:5334  if(b < int(0)) {... */\n      swap2\n      jump(tag_111)\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n    tag_34:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n        /* \"remix_tests.sol\":6758:6816  AssertionEventIntUint(result, message, \"lesserThan\", a, b) */\n      0x1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_116\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_116:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":6618:6628  a < int(0) */\n      dup2\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"remix_tests.sol\":6694:6698  true */\n      0x01\n        /* \"remix_tests.sol\":6615:6748  if(a < int(0)) {... */\n      swap2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n        /* \"remix_tests.sol\":6615:6748  if(a < int(0)) {... */\n    tag_117:\n        /* \"remix_tests.sol\":6729:6740  uint(a) < b */\n      dup2\n      dup2\n      lt\n        /* \"remix_tests.sol\":6615:6748  if(a < int(0)) {... */\n      swap2\n      jump(tag_111)\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n    tag_32:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n        /* \"remix_tests.sol\":1900:1950  AssertionEventBool(result, message, \"equal\", a, b) */\n      0xf7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea5\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_124\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_124:\n      swap1\n      swap4\n      swap2\n      swap4\n      iszero\n      iszero\n      swap4\n      iszero\n      iszero\n        /* \"remix_tests.sol\":1882:1888  a == b */\n      dup5\n      dup2\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_30:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_129\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_129:\n        /* \"remix_tests.sol\":3105:3111  a != b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_28:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n        /* \"remix_tests.sol\":4287:4343  AssertionEventBytes32(result, message, \"notEqual\", a, b) */\n      0x80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd28\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_129\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_26:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_129\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_24:\n      pop\n      tag_56\n      jumpi\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      0x20\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_68\n        /* \"remix_tests.sol\":4548:4603  AssertionEventString(result, message, \"notEqual\", a, b) */\n      0x772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_144\n      tag_145\n      calldatasize\n      tag_5\n      jump\t// in\n    tag_145:\n      swap2\n      swap5\n      swap1\n      tag_71\n      mload(0x40)\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      dup9\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      tag_147\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup11\n      dup3\n      dup2\n      dup13\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      sub\n      add\n      not(0x1f)\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_147:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":4472:4502  keccak256(abi.encodePacked(a)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      dup10\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      tag_148\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup12\n      dup3\n      dup8\n      mload\n      dup1\n      dup4\n      dup11\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      sub\n      add\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      not(0x1f)\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_148:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":4506:4536  keccak256(abi.encodePacked(b)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":4472:4536  keccak256(abi.encodePacked(a)) != keccak256(abi.encodePacked(b)) */\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap7\n      tag_74\n      mload(0x40)\n      swap7\n      dup8\n      swap7\n      dup11\n      dup9\n      mstore\n      0xa0\n      dup13\n      dup10\n      add\n      mstore\n      0xa0\n      dup9\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_144:\n      dup7\n      dup2\n      sub\n      0x40\n      dup9\n      add\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc2, 0x1b9bdd115c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_22:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_153\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_153:\n        /* \"remix_tests.sol\":6080:6085  a < b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_20:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n        /* \"remix_tests.sol\":3490:3543  AssertionEventBool(result, message, \"notEqual\", a, b) */\n      0xf7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea5\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_158\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_158:\n      swap1\n      swap4\n      swap2\n      swap4\n      iszero\n      iszero\n      swap4\n      iszero\n      iszero\n        /* \"remix_tests.sol\":3472:3478  a != b */\n      dup5\n      dup2\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_18:\n      pop\n      tag_56\n      jumpi\n      jumpi(tag_56, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_56\n      jumpi\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n        /* \"remix_tests.sol\":1376:1413  AssertionEvent(result, message, \"ok\") */\n      0xbbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_168\n      0x20\n      swap4\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_168:\n      0x40\n      tag_169\n      dup2\n      mload\n      swap3\n      dup6\n      dup5\n      mstore\n      0x60\n      dup8\n      dup6\n      add\n      mstore\n      0x60\n      dup5\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_169:\n      shl(0xf0, 0x6f6b)\n      dup7\n      dup5\n      dup4\n      sub\n      swap3\n      dup4\n      dup6\n      dup8\n      add\n      mstore\n      0x02\n      dup2\n      mstore\n      add\n      mstore\n        /* \"remix_tests.sol\":1376:1413  AssertionEvent(result, message, \"ok\") */\n      add\n      swap1\n      log1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_16:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n        /* \"remix_tests.sol\":6449:6507  AssertionEventUintInt(result, message, \"lesserThan\", a, b) */\n      0x14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe8\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_173\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_173:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":6308:6318  b < int(0) */\n      dup3\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_117\n      jumpi\n      0x00\n        /* \"remix_tests.sol\":6305:6439  if(b < int(0)) {... */\n      swap2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_14:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n        /* \"remix_tests.sol\":5657:5716  AssertionEventIntUint(result, message, \"greaterThan\", a, b) */\n      0x1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_181\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_181:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":5514:5524  a < int(0) */\n      dup2\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_109\n      jumpi\n      0x00\n        /* \"remix_tests.sol\":5511:5647  if(a < int(0)) {... */\n      swap2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_1:\n      swap1\n      0x1f\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      dup1\n      not\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_186\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_186:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_56\n      jumpi\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_186\n      jumpi\n      mload(0x40)\n      swap3\n      tag_192\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      0x1f\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_1\n      jump\t// in\n    tag_192:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_56\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_3:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      swap2\n      calldataload(0x24)\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_199:\n      swap1\n      jump\t// out\n    tag_4:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x24)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_5:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_56\n      jumpi\n      dup2\n      tag_213\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_213:\n      swap2\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_56\n      jumpi\n      dup3\n      tag_216\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_216:\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_6:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_7:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    stop\n    data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5 06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151\n    data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2 968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1a\n\n    auxdata: 0xa2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601b57610c0090816100208239308160070152f35b5f80fdfe6080604052307f0000000000000000000000000000000000000000000000000000000000000000146004361015610034575f80fd5b5f3560e01c80630897e4c71461094257806318211bfb146108e357806339df137f1461084557806344781a00146107e757806344b7f248146107a357806349f97939146106c85780634e3e4035146106a7578063556fe56214610673578063561015e21461062e578063767392b3146105d157806377c6d463146105685780638c45cb97146104fe5780639c0b4336146104ba578063a079f1a314610450578063abcd79601461042f578063aea88952146103c6578063b8f285311461033a578063bfba5dd6146102d2578063e8c2cb16146101d4578063ea79dd79146101a05763f5bae6b614610123575f80fd5b61019c5760206101665f516020610b8b5f395f51905f5261014336610a2d565b9093918481149461018660405194859488865260a08a87015260a0860190610b66565b84810360408601526005815264195c5d585b60da1b602082015260400190565b91606084015260808301520390a1604051908152f35b5f80fd5b5061019c5760206101667f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861014336610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f61028b61020b36610aa8565b9194906102b96040518881019061023d8a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061026a8b82875180838a01875e81015f838201520301601f1981018352826109a1565b51902014966102ab6040519687968a885260a08c89015260a0880190610b66565b86810360408801526005815264195c5d585b60da1b602082015260400190565b908582036060870152610b66565b908382036080850152610b66565b0390a1604051908152f35b5061019c5760206101667fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61030636610b13565b6040516001600160a01b039384169390921683811480845260a0888501819052909693948594909361018692860190610b66565b5061019c5760206103a37fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61036e36610b13565b6040516001600160a01b03938416939092168381141580845260a0888501819052909693948594909361018692860190610b66565b848103604086015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610bab5f395f51905f526103e736610a2d565b9093918481109461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600a8152693632b9b9b2b92a3430b760b11b602082015260400190565b5061019c5760206101665f516020610bab5f395f51905f5261014336610a2d565b5061019c5760206104945f516020610bab5f395f51905f5261047136610a2d565b9093918481119461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600b81526a33b932b0ba32b92a3430b760a91b602082015260400190565b5061019c5760206104945f516020610b8b5f395f51905f526104db36610a2d565b9093918481139461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206104947f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861053236610a2d565b93915f82121561055f576001915b61018660405194859415159788865260a08a87015260a0860190610b66565b81811191610540565b5061019c57602061040a7f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261059c36610a2d565b93915f8112156105c85760019161018660405194859415159788865260a08a87015260a0860190610b66565b81811091610540565b5061019c5760206101667ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561060536610a63565b9093919315159315158481149461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a35f516020610bab5f395f51905f5261064f36610a2d565b909391848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861064f36610a2d565b5061019c5760206103a35f516020610b8b5f395f51905f5261064f36610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f6107806106ff36610aa8565b9194906102b9604051888101906107318a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061075e8b82875180838a01875e81015f838201520301601f1981018352826109a1565b5190201415966102ab6040519687968a885260a08c89015260a0880190610b66565b868103604088015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610b8b5f395f51905f526107c436610a2d565b9093918481129461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561081b36610a63565b909391931515931515848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c57604036600319011261019c5760043580151580910361019c576024359067ffffffffffffffff821161019c577fbbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f16108a760209336906004016109d7565b60406108c28151928584526060878501526060840190610b66565b616f6b60f01b868483039283858701526002815201520190a1604051908152f35b5061019c57602061040a7f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861091736610a2d565b93915f8212156105c8575f9161018660405194859415159788865260a08a87015260a0860190610b66565b5061019c5760206104947f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261097636610a2d565b93915f81121561055f575f9161018660405194859415159788865260a08a87015260a0860190610b66565b90601f8019910116810190811067ffffffffffffffff8211176109c357604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561019c5780359067ffffffffffffffff82116109c35760405192610a0c601f8401601f1916602001856109a1565b8284526020838301011161019c57815f926020809301838601378301015290565b606060031982011261019c5760043591602435916044359067ffffffffffffffff821161019c57610a60916004016109d7565b90565b606060031982011261019c57600435801515810361019c5791602435801515810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c5760043567ffffffffffffffff811161019c5781610ad3916004016109d7565b9160243567ffffffffffffffff811161019c5782610af3916004016109d7565b916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c576004356001600160a01b038116810361019c57916024356001600160a01b038116810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b805180835260209291819084018484015e5f828201840152601f01601f191601019056fe06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1aa2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI PUSH2 0xC00 SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY ADDRESS DUP2 PUSH1 0x7 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE ADDRESS PUSH32 0x0 EQ PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x34 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x897E4C7 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0x18211BFB EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x39DF137F EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0x44781A00 EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0x44B7F248 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0x49F97939 EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0x4E3E4035 EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x556FE562 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x561015E2 EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x767392B3 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x77C6D463 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x8C45CB97 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9C0B4336 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xA079F1A3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xABCD7960 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xAEA88952 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xB8F28531 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xBFBA5DD6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE8C2CB16 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xEA79DD79 EQ PUSH2 0x1A0 JUMPI PUSH4 0xF5BAE6B6 EQ PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x28B PUSH2 0x20B CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x23D DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x26A DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x306 CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x36E CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ ISZERO DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x3E7 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 LT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x3632B9B9B2B92A3430B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x471 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 GT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x33B932B0BA32B92A3430B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x4DB CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SGT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x532 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x55F JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 GT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x59C CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x1 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 LT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x605 CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x780 PUSH2 0x6FF CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x731 DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x75E DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ ISZERO SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x7C4 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SLT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x81B CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x19C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH32 0xBBF85D637D70CCACC5B8EDB602351BA3DEC7BC069D69235C3529EF3F453D01F1 PUSH2 0x8A7 PUSH1 0x20 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x8C2 DUP2 MLOAD SWAP3 DUP6 DUP5 MSTORE PUSH1 0x60 DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x6F6B PUSH1 0xF0 SHL DUP7 DUP5 DUP4 SUB SWAP3 DUP4 DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP2 MSTORE ADD MSTORE ADD SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x917 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x976 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x55F JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x19C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA0C PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x19C JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP2 PUSH2 0xAD3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP3 PUSH2 0xAF3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP INVALID MOD 0xC5 REVERT SGT PUSH7 0x1D229189D43A6A CODESIZE 0xE8 PUSH8 0x21AF51ED7065A4B6 DELEGATECALL RETURNDATASIZE LOG4 0xBD DUP13 0xD1 0xB1 DUP2 MLOAD SWAP7 DUP12 PUSH27 0x5D7C5BCC2E8F9F583456A62C310B1B4E509906C1C1BB1A5AFF86CC 0x1E BYTE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x6DC2 0xD9 SWAP2 JUMPDEST INVALID PUSH24 0x8101A0FE62FE39B195D6BEE4F239FF9246FDDD87C1BC3073 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:6752:8:-:0;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_addresst_addresst_string": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_boolt_boolt_string": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_int256t_uint256t_string": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_string": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_stringt_stringt_string": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_encode_string": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_stringliteral": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_50a9": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_6eac": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_9221": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"library_deploy_address": [
									{
										"length": 32,
										"start": 7
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052307f0000000000000000000000000000000000000000000000000000000000000000146004361015610034575f80fd5b5f3560e01c80630897e4c71461094257806318211bfb146108e357806339df137f1461084557806344781a00146107e757806344b7f248146107a357806349f97939146106c85780634e3e4035146106a7578063556fe56214610673578063561015e21461062e578063767392b3146105d157806377c6d463146105685780638c45cb97146104fe5780639c0b4336146104ba578063a079f1a314610450578063abcd79601461042f578063aea88952146103c6578063b8f285311461033a578063bfba5dd6146102d2578063e8c2cb16146101d4578063ea79dd79146101a05763f5bae6b614610123575f80fd5b61019c5760206101665f516020610b8b5f395f51905f5261014336610a2d565b9093918481149461018660405194859488865260a08a87015260a0860190610b66565b84810360408601526005815264195c5d585b60da1b602082015260400190565b91606084015260808301520390a1604051908152f35b5f80fd5b5061019c5760206101667f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861014336610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f61028b61020b36610aa8565b9194906102b96040518881019061023d8a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061026a8b82875180838a01875e81015f838201520301601f1981018352826109a1565b51902014966102ab6040519687968a885260a08c89015260a0880190610b66565b86810360408801526005815264195c5d585b60da1b602082015260400190565b908582036060870152610b66565b908382036080850152610b66565b0390a1604051908152f35b5061019c5760206101667fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61030636610b13565b6040516001600160a01b039384169390921683811480845260a0888501819052909693948594909361018692860190610b66565b5061019c5760206103a37fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61036e36610b13565b6040516001600160a01b03938416939092168381141580845260a0888501819052909693948594909361018692860190610b66565b848103604086015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610bab5f395f51905f526103e736610a2d565b9093918481109461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600a8152693632b9b9b2b92a3430b760b11b602082015260400190565b5061019c5760206101665f516020610bab5f395f51905f5261014336610a2d565b5061019c5760206104945f516020610bab5f395f51905f5261047136610a2d565b9093918481119461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600b81526a33b932b0ba32b92a3430b760a91b602082015260400190565b5061019c5760206104945f516020610b8b5f395f51905f526104db36610a2d565b9093918481139461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206104947f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861053236610a2d565b93915f82121561055f576001915b61018660405194859415159788865260a08a87015260a0860190610b66565b81811191610540565b5061019c57602061040a7f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261059c36610a2d565b93915f8112156105c85760019161018660405194859415159788865260a08a87015260a0860190610b66565b81811091610540565b5061019c5760206101667ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561060536610a63565b9093919315159315158481149461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a35f516020610bab5f395f51905f5261064f36610a2d565b909391848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861064f36610a2d565b5061019c5760206103a35f516020610b8b5f395f51905f5261064f36610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f6107806106ff36610aa8565b9194906102b9604051888101906107318a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061075e8b82875180838a01875e81015f838201520301601f1981018352826109a1565b5190201415966102ab6040519687968a885260a08c89015260a0880190610b66565b868103604088015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610b8b5f395f51905f526107c436610a2d565b9093918481129461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561081b36610a63565b909391931515931515848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c57604036600319011261019c5760043580151580910361019c576024359067ffffffffffffffff821161019c577fbbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f16108a760209336906004016109d7565b60406108c28151928584526060878501526060840190610b66565b616f6b60f01b868483039283858701526002815201520190a1604051908152f35b5061019c57602061040a7f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861091736610a2d565b93915f8212156105c8575f9161018660405194859415159788865260a08a87015260a0860190610b66565b5061019c5760206104947f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261097636610a2d565b93915f81121561055f575f9161018660405194859415159788865260a08a87015260a0860190610b66565b90601f8019910116810190811067ffffffffffffffff8211176109c357604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561019c5780359067ffffffffffffffff82116109c35760405192610a0c601f8401601f1916602001856109a1565b8284526020838301011161019c57815f926020809301838601378301015290565b606060031982011261019c5760043591602435916044359067ffffffffffffffff821161019c57610a60916004016109d7565b90565b606060031982011261019c57600435801515810361019c5791602435801515810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c5760043567ffffffffffffffff811161019c5781610ad3916004016109d7565b9160243567ffffffffffffffff811161019c5782610af3916004016109d7565b916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c576004356001600160a01b038116810361019c57916024356001600160a01b038116810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b805180835260209291819084018484015e5f828201840152601f01601f191601019056fe06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1aa2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE ADDRESS PUSH32 0x0 EQ PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x34 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x897E4C7 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0x18211BFB EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x39DF137F EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0x44781A00 EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0x44B7F248 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0x49F97939 EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0x4E3E4035 EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x556FE562 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x561015E2 EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x767392B3 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x77C6D463 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x8C45CB97 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9C0B4336 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xA079F1A3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xABCD7960 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xAEA88952 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xB8F28531 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xBFBA5DD6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE8C2CB16 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xEA79DD79 EQ PUSH2 0x1A0 JUMPI PUSH4 0xF5BAE6B6 EQ PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x28B PUSH2 0x20B CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x23D DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x26A DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x306 CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x36E CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ ISZERO DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x3E7 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 LT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x3632B9B9B2B92A3430B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x471 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 GT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x33B932B0BA32B92A3430B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x4DB CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SGT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x532 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x55F JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 GT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x59C CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x1 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 LT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x605 CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x780 PUSH2 0x6FF CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x731 DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x75E DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ ISZERO SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x7C4 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SLT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x81B CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x19C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH32 0xBBF85D637D70CCACC5B8EDB602351BA3DEC7BC069D69235C3529EF3F453D01F1 PUSH2 0x8A7 PUSH1 0x20 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x8C2 DUP2 MLOAD SWAP3 DUP6 DUP5 MSTORE PUSH1 0x60 DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x6F6B PUSH1 0xF0 SHL DUP7 DUP5 DUP4 SUB SWAP3 DUP4 DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP2 MSTORE ADD MSTORE ADD SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x917 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x976 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x55F JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x19C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA0C PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x19C JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP2 PUSH2 0xAD3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP3 PUSH2 0xAF3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP INVALID MOD 0xC5 REVERT SGT PUSH7 0x1D229189D43A6A CODESIZE 0xE8 PUSH8 0x21AF51ED7065A4B6 DELEGATECALL RETURNDATASIZE LOG4 0xBD DUP13 0xD1 0xB1 DUP2 MLOAD SWAP7 DUP12 PUSH27 0x5D7C5BCC2E8F9F583456A62C310B1B4E509906C1C1BB1A5AFF86CC 0x1E BYTE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x6DC2 0xD9 SWAP2 JUMPDEST INVALID PUSH24 0x8101A0FE62FE39B195D6BEE4F239FF9246FDDD87C1BC3073 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:6752:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4482:19;71:6752;4482:19;;;71:6752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2869:19;71:6752;2869:19;;;71:6752;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;1707:6;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;;;;;1725:49;;;71:6752;;;;;;;;;;;;;;;;2679:53;71:6752;;;:::i;:::-;;;;2869:19;71:6752;2936:52;71:6752;;;;:::i;:::-;;;;;;;2869:19;;;71:6752;2869:19;71:6752;;;;;;;;;;;;;;;;;;;2869:19;;4482;;2869;;;;;;:::i;:::-;71:6752;2859:30;;71:6752;;2903:19;;;71:6752;2903:19;71:6752;;;;;;;;;;;;;;;;;2903:19;;4482;;2903;;;;;;:::i;:::-;71:6752;2893:30;;2859:64;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2936:52;;;71:6752;;;;;;;;;;;;2494:53;71:6752;;;:::i;:::-;;;-1:-1:-1;;;;;71:6752:8;;;;;;;2476:6;;;71:6752;;;;;;;;;;2476:6;;71:6752;;;;;;;;;;;;:::i;:::-;;;;;;4096:56;71:6752;;;:::i;:::-;;;-1:-1:-1;;;;;71:6752:8;;;;;;;4078:6;;;;71:6752;;;;;;;;;;4078:6;;71:6752;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;5891:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;4781:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;4972:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5344:59;71:6752;;;:::i;:::-;;;;5202:10;;71:6752;;;5280:4;5199:135;;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;5199:135::-;5315:11;;;5199:135;;;71:6752;;;;;;6758:58;71:6752;;;:::i;:::-;;;;6618:10;;71:6752;;;6694:4;6615:133;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;6615:133::-;6729:11;;;6615:133;;;71:6752;;;;;;1900:50;71:6752;;;:::i;:::-;;;;;;;;;;1882:6;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;3105:6;;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;4287:56;71:6752;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;;;;4482:19;71:6752;4548:55;71:6752;;;;:::i;:::-;;;;;;;4482:19;;;71:6752;4482:19;71:6752;;;;;;;;;;;;;;;;;;;4482:19;;;;;;;;;;:::i;:::-;71:6752;4472:30;;71:6752;;4516:19;;;71:6752;4516:19;71:6752;;;;;;;;;;;;;;;;;4516:19;;4482;;4516;;;;;;:::i;:::-;71:6752;4506:30;;4472:64;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:8;;;:::i;:::-;6080:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3490:53;71:6752;;;:::i;:::-;;;;;;;;;;3472:6;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;71:6752:8;;;;;;;;;;;;;;;;;;;;;;1376:37;71:6752;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;71:6752:8;;;;;;;;;;;;;;;1376:37;;;71:6752;;;;;;;;;;;;6449:58;71:6752;;;:::i;:::-;;;;6308:10;;71:6752;;;;6305:134;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5657:59;71:6752;;;:::i;:::-;;;;5514:10;;71:6752;;;;5511:136;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4482:19;;71:6752;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;71:6752:8;;;;;-1:-1:-1;71:6752:8;;;;;;;;;;;;;;;;;;;;;;4482:19;71:6752;;-1:-1:-1;;71:6752:8;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;71:6752:8;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;71:6752:8;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;-1:-1:-1;;71:6752:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;71:6752:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;71:6752:8;;;;;;;-1:-1:-1;;;;;71:6752:8;;;;;;;;;-1:-1:-1;;;;;71:6752:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;71:6752:8;;;;;;;;-1:-1:-1;;71:6752:8;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "614400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"equal(address,address,string)": "infinite",
								"equal(bool,bool,string)": "infinite",
								"equal(bytes32,bytes32,string)": "infinite",
								"equal(int256,int256,string)": "infinite",
								"equal(string,string,string)": "infinite",
								"equal(uint256,uint256,string)": "infinite",
								"greaterThan(int256,int256,string)": "infinite",
								"greaterThan(int256,uint256,string)": "infinite",
								"greaterThan(uint256,int256,string)": "infinite",
								"greaterThan(uint256,uint256,string)": "infinite",
								"lesserThan(int256,int256,string)": "infinite",
								"lesserThan(int256,uint256,string)": "infinite",
								"lesserThan(uint256,int256,string)": "infinite",
								"lesserThan(uint256,uint256,string)": "infinite",
								"notEqual(address,address,string)": "infinite",
								"notEqual(bool,bool,string)": "infinite",
								"notEqual(bytes32,bytes32,string)": "infinite",
								"notEqual(int256,int256,string)": "infinite",
								"notEqual(string,string,string)": "infinite",
								"notEqual(uint256,uint256,string)": "infinite",
								"ok(bool,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033",
									".code": [
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "library_deploy_address"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "897E4C7"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "18211BFB"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "39DF137F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "44781A00"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "44B7F248"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "49F97939"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4E3E4035"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "556FE562"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "561015E2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "767392B3"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "77C6D463"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "8C45CB97"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "9C0B4336"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A079F1A3"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "ABCD7960"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "AEA88952"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "B8F28531"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "BFBA5DD6"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "E8C2CB16"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "EA79DD79"
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "F5BAE6B6"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1774,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1774,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "PUSH",
											"source": 8,
											"value": "80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "PUSH",
											"source": 8,
											"value": "772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2869,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2889,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2889,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2923,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2494,
											"end": 2547,
											"name": "PUSH",
											"source": 8,
											"value": "AC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4096,
											"end": 4152,
											"name": "PUSH",
											"source": 8,
											"value": "AC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD115C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3632B9B9B2B92A3430B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33B932B0BA32B92A3430B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SGT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5344,
											"end": 5403,
											"name": "PUSH",
											"source": 8,
											"value": "14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5212,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6758,
											"end": 6816,
											"name": "PUSH",
											"source": 8,
											"value": "1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1900,
											"end": 1950,
											"name": "PUSH",
											"source": 8,
											"value": "F7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4287,
											"end": 4343,
											"name": "PUSH",
											"source": 8,
											"value": "80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4548,
											"end": 4603,
											"name": "PUSH",
											"source": 8,
											"value": "772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4482,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4502,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4516,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4536,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4536,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4536,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD115C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3490,
											"end": 3543,
											"name": "PUSH",
											"source": 8,
											"value": "F7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "BBF85D637D70CCACC5B8EDB602351BA3DEC7BC069D69235C3529EF3F453D01F1"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6449,
											"end": 6507,
											"name": "PUSH",
											"source": 8,
											"value": "14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6308,
											"end": 6318,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5657,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5524,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5524,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									],
									".data": {
										"05D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5": "06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151",
										"CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2": "968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1a"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyVesting_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"equal(address,address,string)": "bfba5dd6",
							"equal(bool,bool,string)": "767392b3",
							"equal(bytes32,bytes32,string)": "ea79dd79",
							"equal(int256,int256,string)": "f5bae6b6",
							"equal(string,string,string)": "e8c2cb16",
							"equal(uint256,uint256,string)": "abcd7960",
							"greaterThan(int256,int256,string)": "9c0b4336",
							"greaterThan(int256,uint256,string)": "0897e4c7",
							"greaterThan(uint256,int256,string)": "8c45cb97",
							"greaterThan(uint256,uint256,string)": "a079f1a3",
							"lesserThan(int256,int256,string)": "44b7f248",
							"lesserThan(int256,uint256,string)": "77c6d463",
							"lesserThan(uint256,int256,string)": "18211bfb",
							"lesserThan(uint256,uint256,string)": "aea88952",
							"notEqual(address,address,string)": "b8f28531",
							"notEqual(bool,bool,string)": "44781a00",
							"notEqual(bytes32,bytes32,string)": "556fe562",
							"notEqual(int256,int256,string)": "4e3e4035",
							"notEqual(string,string,string)": "49f97939",
							"notEqual(uint256,uint256,string)": "561015e2",
							"ok(bool,string)": "39df137f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tests/WallyVesting_test.sol": {
				"testSuite": {
					"abi": [
						{
							"inputs": [],
							"name": "beforeAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkFailure",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSenderAndValue",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSuccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSuccess2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_3, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_3:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x011e6492\n      eq\n      tag_5\n      jumpi\n      pop\n      dup1\n      0x12d487ea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36c00656\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7fea0d4b\n      eq\n      tag_11\n      jumpi\n      0x9074416d\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      shl(0xe0, 0xce88b145)\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1747:1748  1 */\n      0x01\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1697:1703  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n      dup3\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      0x24\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyVesting_test.sol\":1722:1735  TestsAccounts */\n      linkerSymbol(\"1068a87eb54ed04c4e435de35b2ebf536f41f3ff436b4a9bd78b8044f97a1889\")\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      gas\n      delegatecall\n      swap2\n      dup3\n      iszero\n      tag_25\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x00\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      swap3\n      tag_19\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_20:\n      pop\n      mload(0x40)\n      shl(0xe1, 0x5fdd2eeb)\n        /* \"tests/WallyVesting_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1710:1720  msg.sender */\n      caller\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      0x24\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup4\n      add\n      mstore\n      0x60\n      0x44\n      dup4\n      add\n      mstore\n      0x0e\n      0x64\n      dup4\n      add\n      mstore\n      shl(0x91, 0x24b73b30b634b21039b2b73232b9)\n      0x84\n      dup4\n      add\n      mstore\n      0x20\n      dup3\n        /* \"tests/WallyVesting_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      0xa4\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyVesting_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      dup5\n      gas\n      delegatecall\n      swap1\n      dup2\n      iszero\n      tag_25\n      jumpi\n      0xa4\n      swap3\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      swap3\n      tag_23\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_24:\n      pop\n      mload(0x40)\n      swap3\n      dup4\n      dup1\n      swap3\n      shl(0xe5, 0x055e6bcb)\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      dup3\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1791:1800  msg.value */\n      callvalue\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      dup4\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mstore\n      0x64\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      0x24\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup4\n      add\n      mstore\n      0x60\n      0x44\n      dup4\n      add\n      mstore\n      0x0d\n      0x64\n      dup4\n      add\n      mstore\n      shl(0x98, 0x496e76616c69642076616c7565)\n      0x84\n      dup4\n      add\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      stop\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n    tag_27:\n      tag_29\n      swap1\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      returndatasize\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      gt\n      tag_30\n      jumpi\n    tag_31:\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_32:\n      dup2\n      add\n      swap1\n      tag_2\n      jump\t// in\n    tag_29:\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      stop\n        /* \"tests/WallyVesting_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n    tag_30:\n      pop\n      returndatasize\n      jump(tag_31)\n    tag_25:\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"tests/WallyVesting_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n    tag_23:\n      tag_33\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_30\n      jumpi\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_33:\n      jump(tag_24)\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n    tag_19:\n      swap1\n      swap2\n      pop\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      dup2\n      returndatasize\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      gt\n      tag_37\n      jumpi\n    tag_38:\n      dup2\n      tag_39\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      swap4\n      dup4\n      tag_1\n      jump\t// in\n    tag_39:\n      dup2\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      sub\n      slt\n      tag_42\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_42\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      swap1\n      0x00\n      jump(tag_20)\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_42:\n      0x00\n      dup1\n      revert\n        /* \"tests/WallyVesting_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n    tag_37:\n      returndatasize\n      swap2\n      pop\n      jump(tag_38)\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_11:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      shl(0xe5, 0x055e6bcb)\n        /* \"tests/WallyVesting_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":763:764  1 */\n      0x01\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x16\n      0x64\n      dup3\n      add\n      mstore\n      shl(0x50, 0x312073686f756c6420626520657175616c20746f2031)\n      0x84\n      dup3\n      add\n      mstore\n      0x20\n      dup2\n        /* \"tests/WallyVesting_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      0xa4\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyVesting_test.sol\":745:751  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n        /* \"tests/WallyVesting_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      stop\n    tag_9:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      shl(0xe1, 0x2b080af1)\n        /* \"tests/WallyVesting_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1376:1377  1 */\n      0x01\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x1a\n      0x64\n      dup3\n      add\n      mstore\n      0x312073686f756c64206e6f7420626520657175616c20746f2031000000000000\n      0x84\n      dup3\n      add\n      mstore\n      0x20\n      dup2\n        /* \"tests/WallyVesting_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      0xa4\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyVesting_test.sol\":1355:1361  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n        /* \"tests/WallyVesting_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      stop\n    tag_7:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"tests/WallyVesting_test.sol\":1293:1297  true */\n      0x01\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      shl(0xe0, 0x39df137f)\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":961:967  2 == 2 */\n      0x01\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mstore\n      0x40\n      0x24\n      dup3\n      add\n      mstore\n      0x0e\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x90, 0x73686f756c642062652074727565)\n      0x64\n      dup3\n      add\n      mstore\n        /* \"tests/WallyVesting_test.sol\":951:957  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n      swap1\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n      dup2\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      0x84\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyVesting_test.sol\":951:957  Assert */\n      dup6\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_78\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_79:\n      pop\n      mload(0x40)\n      shl(0xe0, 0xa079f1a3)\n        /* \"tests/WallyVesting_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":961:962  2 */\n      0x02\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mstore\n        /* \"tests/WallyVesting_test.sol\":961:967  2 == 2 */\n      0x01\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x1d\n      0x64\n      dup3\n      add\n      mstore\n      0x322073686f756c642062652067726561746572207468616e20746f2031000000\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      0x84\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup3\n      add\n      mstore\n      swap1\n      0x20\n      dup3\n        /* \"tests/WallyVesting_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      0xa4\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      dup5\n        /* \"tests/WallyVesting_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      gas\n      delegatecall\n      swap1\n      dup2\n      iszero\n      tag_25\n      jumpi\n      0xa4\n      swap3\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      swap3\n      tag_82\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_83:\n      pop\n      mload(0x40)\n      shl(0xe1, 0x575444a9)\n        /* \"tests/WallyVesting_test.sol\":1075:1142  Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\") */\n      dup2\n      mstore\n        /* \"tests/WallyVesting_test.sol\":961:962  2 */\n      0x02\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyVesting_test.sol\":1075:1142  Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\") */\n      dup3\n      add\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      mstore\n        /* \"tests/WallyVesting_test.sol\":1107:1108  3 */\n      0x03\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x1c\n      0x64\n      dup3\n      add\n      mstore\n      0x322073686f756c64206265206c6573736572207468616e20746f203300000000\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      0x84\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      dup3\n      add\n      mstore\n      swap3\n      dup4\n      swap2\n      dup3\n      swap1\n        /* \"tests/WallyVesting_test.sol\":1075:1142  Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      stop\n        /* \"tests/WallyVesting_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n    tag_82:\n      tag_92\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_30\n      jumpi\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_92:\n      jump(tag_83)\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n    tag_78:\n      tag_96\n      swap1\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      returndatasize\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyVesting_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      gt\n      tag_30\n      jumpi\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_96:\n      jump(tag_79)\n        /* \"tests/WallyVesting_test.sol\":511:1832  contract testSuite {... */\n    tag_1:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_100\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_100:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_42\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_42\n      jumpi\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c3ee6873d25e7ab6f709cfc5a0fb5254ee356e3700cc01b2c579c680f9df9b5b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {
								"remix_accounts.sol": {
									"TestsAccounts": [
										{
											"length": 20,
											"start": 169
										}
									]
								},
								"remix_tests.sol": {
									"Assert": [
										{
											"length": 20,
											"start": 142
										},
										{
											"length": 20,
											"start": 633
										},
										{
											"length": 20,
											"start": 769
										},
										{
											"length": 20,
											"start": 901
										}
									]
								}
							},
							"object": "6080806040523460155761051e908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c908163011e6492146103235750806312d487ea1461030857806336c00656146102805780637fea0d4b146101ff57639074416d14610053575f80fd5b5f3660031901126101f35760405163ce88b14560e01b81526001600482015273__$acbfb1c35000d78352310b16a054a6b106$__60208260248173__$1068a87eb54ed04c4e435de35b2ebf536f$__5af4918215610191575f926101b7575b50604051635fdd2eeb60e11b81523360048201526001600160a01b03909216602483015260606044830152600e60648301526d24b73b30b634b21039b2b73232b960911b608483015260208260a481845af49081156101915760a49260209261019c575b506040519283809263055e6bcb60e51b82523460048301526064602483015260606044830152600d60648301526c496e76616c69642076616c756560981b60848301525af480156101915761016757005b6101889060203d60201161018a575b610180818361049a565b8101906104d0565b005b503d610176565b6040513d5f823e3d90fd5b6101b290833d851161018a57610180818361049a565b610116565b9091506020813d6020116101f7575b816101d36020938361049a565b810103126101f357516001600160a01b03811681036101f357905f6100b2565b5f80fd5b3d91506101c6565b346101f3575f3660031901126101f35760405163055e6bcb60e51b81526001600482018190526024820152606060448201526016606482015275312073686f756c6420626520657175616c20746f203160501b608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357604051632b080af160e11b8152600160048201819052602482015260606044820152601a60648201527f312073686f756c64206e6f7420626520657175616c20746f2031000000000000608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357602060405160018152f35b346101f3575f3660031901126101f3576339df137f60e01b81526001600482015260406024820152600e60448201526d73686f756c64206265207472756560901b606482015273__$acbfb1c35000d78352310b16a054a6b106$__90602081608481855af480156101915761047d575b5060405163a079f1a360e01b8152600260048201526001602482015260606044820152601d60648201527f322073686f756c642062652067726561746572207468616e20746f203100000060848201529060208260a481845af49081156101915760a492602092610462575b5060405163575444a960e11b8152600260048201526003602482015260606044820152601c60648201527f322073686f756c64206265206c6573736572207468616e20746f203300000000608482015292839182905af480156101915761016757005b61047890833d851161018a57610180818361049a565b6103ff565b6104959060203d60201161018a57610180818361049a565b610393565b90601f8019910116810190811067ffffffffffffffff8211176104bc57604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126101f3575180151581036101f3579056fea2646970667358221220c3ee6873d25e7ab6f709cfc5a0fb5254ee356e3700cc01b2c579c680f9df9b5b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x51E SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11E6492 EQ PUSH2 0x323 JUMPI POP DUP1 PUSH4 0x12D487EA EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x36C00656 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x7FEA0D4B EQ PUSH2 0x1FF JUMPI PUSH4 0x9074416D EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCE88B145 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x191 JUMPI PUSH0 SWAP3 PUSH2 0x1B7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x5FDD2EEB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xE PUSH1 0x64 DUP4 ADD MSTORE PUSH14 0x24B73B30B634B21039B2B73232B9 PUSH1 0x91 SHL PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x19C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP3 MSTORE CALLVALUE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP4 ADD MSTORE PUSH13 0x496E76616C69642076616C7565 PUSH1 0x98 SHL PUSH1 0x84 DUP4 ADD MSTORE GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x188 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI JUMPDEST PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1B2 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F7 JUMPI JUMPDEST DUP2 PUSH2 0x1D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 PUSH0 PUSH2 0xB2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x312073686F756C6420626520657175616C20746F2031 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B080AF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x312073686F756C64206E6F7420626520657175616C20746F2031000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH4 0x39DF137F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x73686F756C642062652074727565 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x84 DUP2 DUP6 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x47D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA079F1A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C642062652067726561746572207468616E20746F2031000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x462 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x575444A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C64206265206C6573736572207468616E20746F203300000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x478 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x495 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xEE PUSH9 0x73D25E7AB6F709CFC5 LOG0 0xFB MSTORE SLOAD 0xEE CALLDATALOAD PUSH15 0x3700CC01B2C579C680F9DF9B5B6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "511:1321:9:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bool_fromMemory": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {
								"remix_accounts.sol": {
									"TestsAccounts": [
										{
											"length": 20,
											"start": 143
										}
									]
								},
								"remix_tests.sol": {
									"Assert": [
										{
											"length": 20,
											"start": 116
										},
										{
											"length": 20,
											"start": 607
										},
										{
											"length": 20,
											"start": 743
										},
										{
											"length": 20,
											"start": 875
										}
									]
								}
							},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c908163011e6492146103235750806312d487ea1461030857806336c00656146102805780637fea0d4b146101ff57639074416d14610053575f80fd5b5f3660031901126101f35760405163ce88b14560e01b81526001600482015273__$acbfb1c35000d78352310b16a054a6b106$__60208260248173__$1068a87eb54ed04c4e435de35b2ebf536f$__5af4918215610191575f926101b7575b50604051635fdd2eeb60e11b81523360048201526001600160a01b03909216602483015260606044830152600e60648301526d24b73b30b634b21039b2b73232b960911b608483015260208260a481845af49081156101915760a49260209261019c575b506040519283809263055e6bcb60e51b82523460048301526064602483015260606044830152600d60648301526c496e76616c69642076616c756560981b60848301525af480156101915761016757005b6101889060203d60201161018a575b610180818361049a565b8101906104d0565b005b503d610176565b6040513d5f823e3d90fd5b6101b290833d851161018a57610180818361049a565b610116565b9091506020813d6020116101f7575b816101d36020938361049a565b810103126101f357516001600160a01b03811681036101f357905f6100b2565b5f80fd5b3d91506101c6565b346101f3575f3660031901126101f35760405163055e6bcb60e51b81526001600482018190526024820152606060448201526016606482015275312073686f756c6420626520657175616c20746f203160501b608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357604051632b080af160e11b8152600160048201819052602482015260606044820152601a60648201527f312073686f756c64206e6f7420626520657175616c20746f2031000000000000608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357602060405160018152f35b346101f3575f3660031901126101f3576339df137f60e01b81526001600482015260406024820152600e60448201526d73686f756c64206265207472756560901b606482015273__$acbfb1c35000d78352310b16a054a6b106$__90602081608481855af480156101915761047d575b5060405163a079f1a360e01b8152600260048201526001602482015260606044820152601d60648201527f322073686f756c642062652067726561746572207468616e20746f203100000060848201529060208260a481845af49081156101915760a492602092610462575b5060405163575444a960e11b8152600260048201526003602482015260606044820152601c60648201527f322073686f756c64206265206c6573736572207468616e20746f203300000000608482015292839182905af480156101915761016757005b61047890833d851161018a57610180818361049a565b6103ff565b6104959060203d60201161018a57610180818361049a565b610393565b90601f8019910116810190811067ffffffffffffffff8211176104bc57604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126101f3575180151581036101f3579056fea2646970667358221220c3ee6873d25e7ab6f709cfc5a0fb5254ee356e3700cc01b2c579c680f9df9b5b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11E6492 EQ PUSH2 0x323 JUMPI POP DUP1 PUSH4 0x12D487EA EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x36C00656 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x7FEA0D4B EQ PUSH2 0x1FF JUMPI PUSH4 0x9074416D EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCE88B145 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x191 JUMPI PUSH0 SWAP3 PUSH2 0x1B7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x5FDD2EEB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xE PUSH1 0x64 DUP4 ADD MSTORE PUSH14 0x24B73B30B634B21039B2B73232B9 PUSH1 0x91 SHL PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x19C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP3 MSTORE CALLVALUE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP4 ADD MSTORE PUSH13 0x496E76616C69642076616C7565 PUSH1 0x98 SHL PUSH1 0x84 DUP4 ADD MSTORE GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x188 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI JUMPDEST PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1B2 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F7 JUMPI JUMPDEST DUP2 PUSH2 0x1D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 PUSH0 PUSH2 0xB2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x312073686F756C6420626520657175616C20746F2031 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B080AF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x312073686F756C64206E6F7420626520657175616C20746F2031000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH4 0x39DF137F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x73686F756C642062652074727565 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x84 DUP2 DUP6 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x47D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA079F1A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C642062652067726561746572207468616E20746F2031000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x462 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x575444A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C64206265206C6573736572207468616E20746F203300000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x478 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x495 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xEE PUSH9 0x73D25E7AB6F709CFC5 LOG0 0xFB MSTORE SLOAD 0xEE CALLDATALOAD PUSH15 0x3700CC01B2C579C680F9DF9B5B6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "511:1321:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;511:1321:9;;;;;;-1:-1:-1;;;1722:27:9;;1747:1;511:1321;1722:27;;511:1321;1697:6;511:1321;;1722:27;511:1321;1722:13;:27;;;;;;;511:1321;1722:27;;;511:1321;-1:-1:-1;511:1321:9;;-1:-1:-1;;;1697:71:9;;1710:10;511:1321;1697:71;;511:1321;-1:-1:-1;;;;;511:1321:9;;;1722:27;511:1321;;;;;;;;;;;;;-1:-1:-1;;;511:1321:9;;;;;;1697:71;511:1321;1697:71;;;;;;;;;;511:1321;1697:71;;;511:1321;;;;;;;;;;;1778:45;;1791:9;511:1321;1778:45;;511:1321;;1722:27;511:1321;;;;;;;;;;;;;-1:-1:-1;;;511:1321:9;;;;1778:45;;;;;;;;511:1321;1778:45;;;511:1321;1778:45;511:1321;1778:45;;;;;;;;:::i;:::-;;;;;:::i;:::-;511:1321;1778:45;;;;;;511:1321;;;;;;;;;1697:71;;;;;;;;;;;;;:::i;:::-;;;1722:27;;;;511:1321;1722:27;;511:1321;1722:27;;;;;;511:1321;1722:27;;;:::i;:::-;;;511:1321;;;;;-1:-1:-1;;;;;511:1321:9;;;;;;1722:27;;;;511:1321;;;;1722:27;;;-1:-1:-1;1722:27:9;;511:1321;;;;;;-1:-1:-1;;511:1321:9;;;;;;-1:-1:-1;;;745:56:9;;763:1;511:1321;745:56;;511:1321;;;;;;;;;;;;;;;;;-1:-1:-1;;;511:1321:9;;;;;;745:56;511:1321;745:6;:56;;;;;;;;511:1321;;;;;;;-1:-1:-1;;511:1321:9;;;;;;-1:-1:-1;;;1355:63:9;;1376:1;511:1321;1355:63;;511:1321;;;;;;;;;;;;;;;;;;;;;;;;1355:63;511:1321;1355:6;:63;;;;;;;;511:1321;;;;;;;-1:-1:-1;;511:1321:9;;;;;;;1293:4;511:1321;;;;;;;;;-1:-1:-1;;511:1321:9;;;;-1:-1:-1;;;951:35:9;;961:6;511:1321;951:35;;511:1321;;;;;;;;;;;-1:-1:-1;;;511:1321:9;;;;951:6;;511:1321;;951:35;511:1321;951:6;:35;;;;;;;;511:1321;-1:-1:-1;511:1321:9;;-1:-1:-1;;;996:69:9;;961:1;511:1321;996:69;;511:1321;961:6;511:1321;;;;;;;;;;;;;;;951:35;511:1321;;;;;;996:69;511:1321;;996:69;;;;;;;;;511:1321;996:69;;;511:1321;-1:-1:-1;511:1321:9;;-1:-1:-1;;;1075:67:9;;961:1;511:1321;1075:67;;511:1321;1107:1;511:1321;;;;;;;;;;;;;;;951:35;511:1321;;;;;;;;1075:67;;;;;;;;511:1321;996:69;;;;;;;;;;;;;:::i;:::-;;;951:35;;;511:1321;951:35;511:1321;951:35;;;;;;;:::i;:::-;;;511:1321;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;511:1321:9;;;;;-1:-1:-1;511:1321:9;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "262000",
								"executionCost": "306",
								"totalCost": "262306"
							},
							"external": {
								"beforeAll()": "infinite",
								"checkFailure()": "infinite",
								"checkSenderAndValue()": "infinite",
								"checkSuccess()": "infinite",
								"checkSuccess2()": "175"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "REVERT",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c3ee6873d25e7ab6f709cfc5a0fb5254ee356e3700cc01b2c579c680f9df9b5b64736f6c634300081c0033",
									".code": [
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "11E6492"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "12D487EA"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "36C00656"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "7FEA0D4B"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "9074416D"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CE88B145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSHLIB",
											"source": 9,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1735,
											"name": "PUSHLIB",
											"source": 9,
											"value": "remix_accounts.sol:TestsAccounts"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5FDD2EEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21039B2B73232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "55E6BCB"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "E5"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1778,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55E6BCB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "312073686F756C6420626520657175616C20746F2031"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSHLIB",
											"source": 9,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 745,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B080AF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "312073686F756C64206E6F7420626520657175616C20746F2031000000000000"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "PUSHLIB",
											"source": 9,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39DF137F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 961,
											"end": 967,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73686F756C642062652074727565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 951,
											"end": 957,
											"name": "PUSHLIB",
											"source": 9,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A079F1A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 961,
											"end": 967,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "322073686F756C642062652067726561746572207468616E20746F2031000000"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "575444A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "322073686F756C64206265206C6573736572207468616E20746F203300000000"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 996,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 951,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 511,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyVesting_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beforeAll()": "7fea0d4b",
							"checkFailure()": "36c00656",
							"checkSenderAndValue()": "9074416d",
							"checkSuccess()": "011e6492",
							"checkSuccess2()": "12d487ea"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"beforeAll()": {
								"notice": "'beforeAll' runs before all other tests More special functions are: 'beforeEach', 'beforeAll', 'afterEach' & 'afterAll'"
							},
							"checkSenderAndValue()": {
								"notice": "Custom Transaction Context: https://remix-ide.readthedocs.io/en/latest/unittesting.html#customization #sender: account-1 #value: 100"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 511,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								510,
								522,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 456,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 456,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 456,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 456,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 456,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 456,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							510
						],
						"IERC165": [
							522
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 523,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 522,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165",
										"nameLocations": [
											"688:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "688:7:4"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								522
							],
							"name": "ERC165",
							"nameLocation": "678:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "845:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "862:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "882:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "855:47:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "790:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "839:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:4"
									},
									"scope": 510,
									"src": "763:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 511,
							"src": "660:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 522,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/WallyVesting.sol": {
				"ast": {
					"absolutePath": "contracts/WallyVesting.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"CliffGreaterThanDuration": [
							532
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"InvalidAddress": [
							530
						],
						"NotAuthorized": [
							534
						],
						"NothingToRelease": [
							536
						],
						"VestingRevokedAlready": [
							528
						],
						"WallyVesting": [
							873
						]
					},
					"id": 874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 874,
							"sourceUnit": 296,
							"src": "57:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 874,
							"sourceUnit": 457,
							"src": "116:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "01404c2b",
							"id": 528,
							"name": "VestingRevokedAlready",
							"nameLocation": "274:21:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 527,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "295:2:6"
							},
							"src": "268:30:6"
						},
						{
							"errorSelector": "e6c4247b",
							"id": 530,
							"name": "InvalidAddress",
							"nameLocation": "305:14:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 529,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "319:2:6"
							},
							"src": "299:23:6"
						},
						{
							"errorSelector": "67f675ff",
							"id": 532,
							"name": "CliffGreaterThanDuration",
							"nameLocation": "329:24:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 531,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "353:2:6"
							},
							"src": "323:33:6"
						},
						{
							"errorSelector": "ea8e4eb5",
							"id": 534,
							"name": "NotAuthorized",
							"nameLocation": "363:13:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 533,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "376:2:6"
							},
							"src": "357:22:6"
						},
						{
							"errorSelector": "b10205ed",
							"id": 536,
							"name": "NothingToRelease",
							"nameLocation": "386:16:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 535,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "402:2:6"
							},
							"src": "380:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 538,
										"name": "AccessControl",
										"nameLocations": [
											"532:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "532:13:6"
									},
									"id": 539,
									"nodeType": "InheritanceSpecifier",
									"src": "532:13:6"
								}
							],
							"canonicalName": "WallyVesting",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "407:99:6",
								"text": " @title WallyVesting\n @dev Token vesting with cliff + linear release. Admin can revoke."
							},
							"fullyImplemented": true,
							"id": 873,
							"linearizedBaseContracts": [
								873,
								295,
								510,
								522,
								378,
								486
							],
							"name": "WallyVesting",
							"nameLocation": "516:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 544,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "577:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "552:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 540,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 542,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "600:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 541,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "590:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 543,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "590:23:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 547,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "645:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "620:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$456",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 546,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 545,
											"name": "IERC20",
											"nameLocations": [
												"620:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 456,
											"src": "620:6:6"
										},
										"referencedDeclaration": 456,
										"src": "620:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$456",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 549,
									"mutability": "immutable",
									"name": "beneficiary",
									"nameLocation": "688:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "662:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 548,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "662:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 551,
									"mutability": "immutable",
									"name": "cliff",
									"nameLocation": "732:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "706:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 550,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 553,
									"mutability": "immutable",
									"name": "start",
									"nameLocation": "774:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "748:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 552,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 555,
									"mutability": "immutable",
									"name": "duration",
									"nameLocation": "816:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "790:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 554,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "790:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 557,
									"mutability": "mutable",
									"name": "released",
									"nameLocation": "849:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "833:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 556,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "833:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 559,
									"mutability": "mutable",
									"name": "revoked",
									"nameLocation": "876:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "863:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 558,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "863:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "a1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f",
									"id": 563,
									"name": "TokensReleased",
									"nameLocation": "896:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "919:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "911:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:16:6"
									},
									"src": "890:37:6"
								},
								{
									"anonymous": false,
									"eventSelector": "ab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed0",
									"id": 565,
									"name": "VestingRevoked",
									"nameLocation": "938:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:2:6"
									},
									"src": "932:23:6"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "1148:500:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "1192:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1210:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1202:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1202:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1202:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1192:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 589,
												"nodeType": "IfStatement",
												"src": "1188:49:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 586,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "1221:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1221:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 588,
													"nodeType": "RevertStatement",
													"src": "1214:23:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 590,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "1251:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1275:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1267:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 591,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1267:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1267:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1251:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "1247:55:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 596,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "1286:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1286:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 598,
													"nodeType": "RevertStatement",
													"src": "1279:23:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1334:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1326:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1326:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1326:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1316:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "1312:49:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 606,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "1345:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1345:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 608,
													"nodeType": "RevertStatement",
													"src": "1338:23:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "_cliffDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1375:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 611,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1392:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "1371:65:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 613,
															"name": "CliffGreaterThanDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "1410:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1410:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 615,
													"nodeType": "RevertStatement",
													"src": "1403:33:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "1458:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 619,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1470:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1447:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "1447:30:6"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 622,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "1488:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$456",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 624,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1503:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 623,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "1496:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1496:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$456",
															"typeString": "contract IERC20"
														}
													},
													"src": "1488:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "1488:22:6"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 628,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "1520:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 629,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "1534:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1520:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "1520:26:6"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1556:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 633,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "1564:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1556:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1556:14:6"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "1580:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 637,
															"name": "_start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "1588:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 638,
															"name": "_cliffDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "1597:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1588:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1580:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "1580:31:6"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 642,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1621:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 643,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1632:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1621:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1621:20:6"
											}
										]
									},
									"id": 647,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "990:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "982:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1014:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1006:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "1044:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1036:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "_cliffDuration",
												"nameLocation": "1068:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1060:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1100:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1092:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "1127:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1119:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:167:6"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:0:6"
									},
									"scope": 873,
									"src": "961:687:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "1680:88:6",
										"statements": [
											{
												"condition": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1694:32:6",
													"subExpression": {
														"arguments": [
															{
																"id": 650,
																"name": "ADMIN_ROLE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "1703:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"expression": {
																	"id": 651,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1715:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1719:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1715:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 649,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1695:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1695:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "1690:60:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 655,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "1735:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1735:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 657,
													"nodeType": "RevertStatement",
													"src": "1728:22:6"
												}
											},
											{
												"id": 659,
												"nodeType": "PlaceholderStatement",
												"src": "1760:1:6"
											}
										]
									},
									"id": 661,
									"name": "onlyAuthorized",
									"nameLocation": "1663:14:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1677:2:6"
									},
									"src": "1654:114:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "1883:423:6",
										"statements": [
											{
												"condition": {
													"id": 667,
													"name": "revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 559,
													"src": "1897:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "1893:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 668,
															"name": "VestingRevokedAlready",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "1913:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1913:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 670,
													"nodeType": "RevertStatement",
													"src": "1906:30:6"
												}
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "unreleased",
														"nameLocation": "1954:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "1946:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1946:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 674,
														"name": "releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1967:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1946:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "unreleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1999:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2013:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1999:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "1995:46:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 680,
															"name": "NothingToRelease",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "2023:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2023:18:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 682,
													"nodeType": "RevertStatement",
													"src": "2016:25:6"
												}
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 684,
														"name": "released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2088:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 685,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "2099:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 686,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "2110:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2099:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2088:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "2088:32:6"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2165:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "2160:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 690,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2160:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 694,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2190:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "2203:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 692,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "2175:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2181:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 423,
														"src": "2175:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2175:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2160:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2232:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																"typeString": "literal_string \"Transfer fail\""
															},
															"value": "Transfer fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																"typeString": "literal_string \"Transfer fail\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2224:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "2224:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 704,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "2288:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "2273:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "EmitStatement",
												"src": "2268:31:6"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "1774:61:6",
										"text": " @dev Release vested tokens to beneficiary."
									},
									"functionSelector": "86d1a69f",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyAuthorized",
												"nameLocations": [
													"1868:14:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 661,
												"src": "1868:14:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:14:6"
										}
									],
									"name": "release",
									"nameLocation": "1849:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1856:2:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1883:0:6"
									},
									"scope": 873,
									"src": "1840:466:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "2472:447:6",
										"statements": [
											{
												"condition": {
													"id": 715,
													"name": "revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 559,
													"src": "2486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"nodeType": "IfStatement",
												"src": "2482:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 716,
															"name": "VestingRevokedAlready",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2502:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2502:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 718,
													"nodeType": "RevertStatement",
													"src": "2495:30:6"
												}
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 720,
														"name": "revoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "2535:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2545:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2535:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "2535:14:6"
											},
											{
												"assignments": [
													725
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2568:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "2560:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2560:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 730,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2602:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyVesting_$873",
																		"typeString": "contract WallyVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyVesting_$873",
																		"typeString": "contract WallyVesting"
																	}
																],
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2594:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2594:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2594:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 726,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "2578:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2584:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "2578:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2560:48:6"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "unreleased",
														"nameLocation": "2626:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "2618:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2618:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "2639:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2618:39:6"
											},
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "refund",
														"nameLocation": "2675:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "2667:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2667:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 741,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "2685:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 742,
																	"name": "unreleased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2695:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2685:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 744,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2684:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2734:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2684:51:6",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 745,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "2710:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 746,
																	"name": "unreleased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2720:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2710:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 748,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2709:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2667:68:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 752,
														"name": "refund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "2750:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2760:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2750:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 770,
												"nodeType": "IfStatement",
												"src": "2746:136:6",
												"trueBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "2763:119:6",
													"statements": [
														{
															"assignments": [
																756
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 756,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "2782:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 769,
																	"src": "2777:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2777:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 763,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 759,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2807:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2811:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2807:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 761,
																		"name": "refund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "2819:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 757,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "2792:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2798:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "2792:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2777:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 765,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "2848:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526566756e64206661696c",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2857:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93",
																			"typeString": "literal_string \"Refund fail\""
																		},
																		"value": "Refund fail"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93",
																			"typeString": "literal_string \"Refund fail\""
																		}
																	],
																	"id": 764,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2840:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2840:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 768,
															"nodeType": "ExpressionStatement",
															"src": "2840:31:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 771,
														"name": "VestingRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "2896:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "EmitStatement",
												"src": "2891:21:6"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2312:107:6",
										"text": " @dev Allows admin to revoke vesting. Already-vested remain claimable; unvested => admin."
									},
									"functionSelector": "b6549f75",
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 712,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "2460:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 711,
												"name": "onlyRole",
												"nameLocations": [
													"2451:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2451:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2451:20:6"
										}
									],
									"name": "revoke",
									"nameLocation": "2433:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2439:2:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:0:6"
									},
									"scope": 873,
									"src": "2424:495:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "2983:49:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 780,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "3000:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3000:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 782,
														"name": "released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "3017:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3000:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 779,
												"id": 784,
												"nodeType": "Return",
												"src": "2993:32:6"
											}
										]
									},
									"functionSelector": "5b940081",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasableAmount",
									"nameLocation": "2934:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2950:2:6"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2974:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:9:6"
									},
									"scope": 873,
									"src": "2925:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "3092:534:6",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "totalCurrent",
														"nameLocation": "3110:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "3102:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 791,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3102:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 797,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3149:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyVesting_$873",
																		"typeString": "contract WallyVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyVesting_$873",
																		"typeString": "contract WallyVesting"
																	}
																],
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3141:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 795,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3141:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3141:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 793,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "3125:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3131:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "3125:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3125:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3102:53:6"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "totalAssigned",
														"nameLocation": "3173:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "3165:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3165:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "totalCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "3189:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 804,
														"name": "released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "3204:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3189:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3165:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 807,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3287:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3293:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3287:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 809,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "3305:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3287:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 814,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3355:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3361:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3355:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 816,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 553,
																			"src": "3375:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 817,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "3383:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3375:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3374:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3355:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"id": 821,
															"name": "revoked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3396:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3355:48:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 844,
														"nodeType": "Block",
														"src": "3456:164:6",
														"statements": [
															{
																"assignments": [
																	827
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 827,
																		"mutability": "mutable",
																		"name": "timeSoFar",
																		"nameLocation": "3478:9:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 844,
																		"src": "3470:17:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 826,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3470:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 832,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 828,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3490:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3496:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3490:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 830,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "3508:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3490:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3470:43:6"
															},
															{
																"assignments": [
																	834
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 834,
																		"mutability": "mutable",
																		"name": "vested",
																		"nameLocation": "3535:6:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 844,
																		"src": "3527:14:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 833,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3527:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 841,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 835,
																					"name": "totalAssigned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "3545:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 836,
																					"name": "timeSoFar",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "3561:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3545:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 838,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3544:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 839,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "3574:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3544:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3527:55:6"
															},
															{
																"expression": {
																	"id": 842,
																	"name": "vested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3603:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 790,
																"id": 843,
																"nodeType": "Return",
																"src": "3596:13:6"
															}
														]
													},
													"id": 845,
													"nodeType": "IfStatement",
													"src": "3351:269:6",
													"trueBody": {
														"id": 825,
														"nodeType": "Block",
														"src": "3405:45:6",
														"statements": [
															{
																"expression": {
																	"id": 823,
																	"name": "totalAssigned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "3426:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 790,
																"id": 824,
																"nodeType": "Return",
																"src": "3419:20:6"
															}
														]
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "3283:337:6",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "3312:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3333:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 790,
															"id": 812,
															"nodeType": "Return",
															"src": "3326:8:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "44b1231f",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "3047:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3059:2:6"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "3083:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:9:6"
									},
									"scope": 873,
									"src": "3038:588:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "3706:31:6",
										"statements": [
											{
												"expression": {
													"id": 853,
													"name": "revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 559,
													"src": "3723:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 852,
												"id": 854,
												"nodeType": "Return",
												"src": "3716:14:6"
											}
										]
									},
									"functionSelector": "2bc9ed02",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRevoked",
									"nameLocation": "3665:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3674:2:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3700:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3700:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3699:6:6"
									},
									"scope": 873,
									"src": "3656:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "3799:32:6",
										"statements": [
											{
												"expression": {
													"id": 861,
													"name": "released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 557,
													"src": "3816:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 862,
												"nodeType": "Return",
												"src": "3809:15:6"
											}
										]
									},
									"functionSelector": "e33b7de3",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalReleased",
									"nameLocation": "3751:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3764:2:6"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3790:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:9:6"
									},
									"scope": 873,
									"src": "3742:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "3894:35:6",
										"statements": [
											{
												"expression": {
													"id": 869,
													"name": "beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "3911:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 868,
												"id": 870,
												"nodeType": "Return",
												"src": "3904:18:6"
											}
										]
									},
									"functionSelector": "565a2e2c",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeneficiary",
									"nameLocation": "3845:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3859:2:6"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3885:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:9:6"
									},
									"scope": 873,
									"src": "3836:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 874,
							"src": "507:3424:6",
							"usedErrors": [
								305,
								308,
								528,
								530,
								532,
								534,
								536
							],
							"usedEvents": [
								317,
								326,
								335,
								563,
								565
							]
						}
					],
					"src": "32:3899:6"
				},
				"id": 6
			},
			"remix_accounts.sol": {
				"ast": {
					"absolutePath": "remix_accounts.sol",
					"exportedSymbols": {
						"TestsAccounts": [
							985
						]
					},
					"id": 986,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 875,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestsAccounts",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "TestsAccounts",
							"nameLocation": "79:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "161:987:7",
										"statements": [
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "accounts",
														"nameLocation": "190:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "171:27:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
															"typeString": "address[15]"
														},
														"typeName": {
															"baseType": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "171:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 886,
															"length": {
																"hexValue": "3135",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "179:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"nodeType": "ArrayTypeName",
															"src": "171:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_storage_ptr",
																"typeString": "address[15]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"nodeType": "VariableDeclarationStatement",
												"src": "171:27:7"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 889,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "202:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 891,
														"indexExpression": {
															"hexValue": "30",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "211:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "202:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "216:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
													},
													"src": "202:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "202:56:7"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 895,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "263:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 897,
														"indexExpression": {
															"hexValue": "31",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "263:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "277:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
													},
													"src": "263:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "263:56:7"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 901,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "324:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 903,
														"indexExpression": {
															"hexValue": "32",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "333:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "324:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "338:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
													},
													"src": "324:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "324:56:7"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 907,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "385:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 909,
														"indexExpression": {
															"hexValue": "33",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "394:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "385:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837383733314433436136623745333461433046383234633432613763433138413439356361626142",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "399:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB"
													},
													"src": "385:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "385:56:7"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 913,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "446:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 915,
														"indexExpression": {
															"hexValue": "34",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "455:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "446:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "460:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
													},
													"src": "446:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "446:56:7"
											},
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 919,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "507:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 921,
														"indexExpression": {
															"hexValue": "35",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "516:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "507:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831374636414438456639383232393735373943323033303639433144626646453433343863333732",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "521:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x17F6AD8Ef982297579C203069C1DbfFE4348c372"
													},
													"src": "507:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "507:56:7"
											},
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 925,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "568:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 927,
														"indexExpression": {
															"hexValue": "36",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "577:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "568:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835633642306637426633453763653034363033394264384641426466443366394635303231363738",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "582:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678"
													},
													"src": "568:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "568:56:7"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 931,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "629:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 933,
														"indexExpression": {
															"hexValue": "37",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "638:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "629:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830334336466345443437386342624339613446414233346546396634303736373733394431466637",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "643:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7"
													},
													"src": "629:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "629:56:7"
											},
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 937,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "690:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 939,
														"indexExpression": {
															"hexValue": "38",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "699:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "690:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831614530454133346137324439343461384337363033466642336543333061363636394534353443",
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "704:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C"
													},
													"src": "690:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "690:56:7"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 943,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "751:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 945,
														"indexExpression": {
															"hexValue": "39",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "760:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "751:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830413039384564613031436539326666344134434362374134664646623541343345424337304443",
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "765:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC"
													},
													"src": "751:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "751:56:7"
											},
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 949,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "812:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 951,
														"indexExpression": {
															"hexValue": "3130",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "821:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "812:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307843413335623764393135343538454635343061446536303638644665324634344538666137333363",
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "827:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c"
													},
													"src": "812:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "812:57:7"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 955,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "874:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 957,
														"indexExpression": {
															"hexValue": "3131",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "883:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "874:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831343732334130394143666636443241363044636446376141344146663330384644444331363043",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "889:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C"
													},
													"src": "874:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "874:57:7"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 961,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "936:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 963,
														"indexExpression": {
															"hexValue": "3132",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "936:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834423038393762303531336664433743353431423664394437453932394334653533363444326442",
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "951:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB"
													},
													"src": "936:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "936:57:7"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 967,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "998:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 969,
														"indexExpression": {
															"hexValue": "3133",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1007:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_13_by_1",
																"typeString": "int_const 13"
															},
															"value": "13"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "998:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835383330333144313131336144343134463032353736424436616661426662333032313430323235",
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1013:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x583031D1113aD414F02576BD6afaBfb302140225"
													},
													"src": "998:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "998:57:7"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 973,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "1060:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 975,
														"indexExpression": {
															"hexValue": "3134",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															},
															"value": "14"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1060:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307864443837306641316237433437303046324244376634343233383832314332366637333932313438",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xdD870fA1b7C4700F2BD7f44238821C26f7392148"
													},
													"src": "1060:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "1060:57:7"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 979,
														"name": "accounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "1126:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
															"typeString": "address[15] memory"
														}
													},
													"id": 981,
													"indexExpression": {
														"id": 980,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1135:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1126:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 881,
												"id": 982,
												"nodeType": "Return",
												"src": "1119:22:7"
											}
										]
									},
									"functionSelector": "ce88b145",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccount",
									"nameLocation": "108:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "124:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "119:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:12:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "152:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:9:7"
									},
									"scope": 985,
									"src": "99:1049:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 986,
							"src": "71:1079:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1114:7"
				},
				"id": 7
			},
			"remix_tests.sol": {
				"ast": {
					"absolutePath": "remix_tests.sol",
					"exportedSymbols": {
						"Assert": [
							1736
						]
					},
					"id": 1737,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Assert",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "Assert",
							"nameLocation": "79:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "bbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f1",
									"id": 995,
									"name": "AssertionEvent",
									"nameLocation": "97:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "122:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "117:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "117:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "141:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "134:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "134:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "161:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "154:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 992,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "154:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:64:8"
									},
									"src": "91:85:8"
								},
								{
									"anonymous": false,
									"eventSelector": "968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1a",
									"id": 1007,
									"name": "AssertionEventUint",
									"nameLocation": "186:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "215:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "210:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "210:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "234:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "227:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "227:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "254:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "247:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "247:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "278:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "270:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "300:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "292:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:108:8"
									},
									"src": "180:133:8"
								},
								{
									"anonymous": false,
									"eventSelector": "06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151",
									"id": 1019,
									"name": "AssertionEventInt",
									"nameLocation": "323:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "351:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "346:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "370:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "363:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1010,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "390:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "383:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1012,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "383:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "413:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "406:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1014,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "434:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "427:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1016,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "427:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:106:8"
									},
									"src": "317:130:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea5",
									"id": 1031,
									"name": "AssertionEventBool",
									"nameLocation": "457:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "486:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "481:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "505:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "498:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "525:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "518:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1024,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "518:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "546:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "541:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "541:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "565:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "560:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:102:8"
									},
									"src": "451:127:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b",
									"id": 1043,
									"name": "AssertionEventAddress",
									"nameLocation": "588:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "620:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "615:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "639:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "632:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "632:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "659:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "652:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "683:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "675:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "705:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "697:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:108:8"
									},
									"src": "582:136:8"
								},
								{
									"anonymous": false,
									"eventSelector": "80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd28",
									"id": 1055,
									"name": "AssertionEventBytes32",
									"nameLocation": "728:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "760:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "755:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "779:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "772:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "799:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "792:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "792:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "823:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "815:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "845:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "837:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:108:8"
									},
									"src": "722:136:8"
								},
								{
									"anonymous": false,
									"eventSelector": "772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f",
									"id": 1067,
									"name": "AssertionEventString",
									"nameLocation": "868:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "899:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "894:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "918:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "911:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "911:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "938:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "931:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "931:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "961:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "954:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "954:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "982:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "975:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1064,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "975:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:106:8"
									},
									"src": "862:133:8"
								},
								{
									"anonymous": false,
									"eventSelector": "14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe8",
									"id": 1079,
									"name": "AssertionEventUintInt",
									"nameLocation": "1005:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "1037:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1032:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1032:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1056:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1049:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1070,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "1076:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1069:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1069:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "1100:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1092:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "1121:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1114:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1076,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:107:8"
									},
									"src": "999:135:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e2",
									"id": 1091,
									"name": "AssertionEventIntUint",
									"nameLocation": "1144:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "1176:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1171:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1195:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1188:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1188:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "1215:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1208:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1208:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "1238:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1231:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1086,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "1260:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1252:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:107:8"
									},
									"src": "1138:135:8"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "1349:69:8",
										"statements": [
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1100,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "1355:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1101,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "1364:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1355:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "1355:10:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1105,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "1391:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1106,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "1399:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6f6b",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1408:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14502d3ab34ae28d404da8f6ec0501c6f295f66caa41e122cfa9b1291bc0f9e8",
																"typeString": "literal_string \"ok\""
															},
															"value": "ok"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_14502d3ab34ae28d404da8f6ec0501c6f295f66caa41e122cfa9b1291bc0f9e8",
																"typeString": "literal_string \"ok\""
															}
														],
														"id": 1104,
														"name": "AssertionEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1376:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory,string memory)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "EmitStatement",
												"src": "1371:42:8"
											}
										]
									},
									"functionSelector": "39df137f",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ok",
									"nameLocation": "1286:2:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1294:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1289:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1289:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1311:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1297:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:31:8"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1341:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1336:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1336:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:13:8"
									},
									"scope": 1736,
									"src": "1277:141:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "1511:89:8",
										"statements": [
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1122,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "1517:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1123,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "1527:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1124,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "1532:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1527:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1126,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1526:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "1517:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1130,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "1564:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1131,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1572:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1133,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1590:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1134,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1593:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "1545:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1545:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "EmitStatement",
												"src": "1540:55:8"
											}
										]
									},
									"functionSelector": "abcd7960",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "1431:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1456:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1473:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1459:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1436:45:8"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1503:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1498:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1498:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:13:8"
									},
									"scope": 1736,
									"src": "1422:178:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "1691:88:8",
										"statements": [
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1149,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1697:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "1707:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1151,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "1712:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1707:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1706:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "1697:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1157,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "1743:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1158,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "1751:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1760:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1160,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "1769:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1161,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "1772:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1156,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "1725:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "EmitStatement",
												"src": "1720:54:8"
											}
										]
									},
									"functionSelector": "f5bae6b6",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "1613:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1626:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1619:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1619:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1636:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1629:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1653:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1639:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1143,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1639:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:43:8"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1683:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1678:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1678:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:13:8"
									},
									"scope": 1736,
									"src": "1604:175:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "1866:89:8",
										"statements": [
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1176,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "1872:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1177,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "1882:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1178,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "1887:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1882:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1180,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1881:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1872:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "1872:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1184,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "1919:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1185,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "1927:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1936:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1187,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "1945:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1188,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "1948:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1183,
														"name": "AssertionEventBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1900:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bool,bool)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1900:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "EmitStatement",
												"src": "1895:55:8"
											}
										]
									},
									"functionSelector": "767392b3",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "1792:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1803:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1798:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1798:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1811:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1806:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1806:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1828:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1814:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1814:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1797:39:8"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1858:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1853:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1853:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:13:8"
									},
									"scope": 1736,
									"src": "1783:172:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "2460:92:8",
										"statements": [
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2466:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1204,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "2476:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1205,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "2481:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2476:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1207,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2475:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2466:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2466:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1211,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1212,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "2524:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2533:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1214,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "2542:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "2545:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "AssertionEventAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "2494:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bool,string memory,string memory,address,address)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2494:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "EmitStatement",
												"src": "2489:58:8"
											}
										]
									},
									"functionSelector": "bfba5dd6",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2380:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2394:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2386:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2405:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2397:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2422:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2408:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2385:45:8"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2452:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2447:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2447:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:13:8"
									},
									"scope": 1736,
									"src": "2371:181:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "2645:92:8",
										"statements": [
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1230,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2651:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1231,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "2661:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1232,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "2666:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2661:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1234,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2660:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2651:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2651:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1238,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "2701:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1239,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "2709:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2718:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1241,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "2727:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1242,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "2730:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1237,
														"name": "AssertionEventBytes32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "2679:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bytes32,bytes32)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "EmitStatement",
												"src": "2674:58:8"
											}
										]
									},
									"functionSelector": "ea79dd79",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2565:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2579:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2571:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2590:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2582:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2607:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2593:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2593:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:45:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2637:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2632:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2632:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:13:8"
									},
									"scope": 1736,
									"src": "2556:181:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "2842:151:8",
										"statements": [
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1257,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "2849:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1261,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "2886:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1259,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2869:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2873:12:8",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2869:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2869:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1258,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2859:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2859:30:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1267,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1250,
																					"src": "2920:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1265,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2903:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2907:12:8",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2903:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2903:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1264,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2893:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2893:30:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2859:64:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1271,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2858:66:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2849:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2849:75:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1275,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "2957:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1276,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "2965:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2974:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1278,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "2983:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1279,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "2986:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1274,
														"name": "AssertionEventString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "2936:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory,string memory,string memory,string memory)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2936:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "EmitStatement",
												"src": "2931:57:8"
											}
										]
									},
									"functionSelector": "e8c2cb16",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2750:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2770:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "2756:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2756:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "2773:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2773:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2804:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "2790:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:57:8"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2834:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "2829:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:13:8"
									},
									"scope": 1736,
									"src": "2741:252:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "3089:92:8",
										"statements": [
											{
												"expression": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "3095:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1295,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "3105:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1296,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "3110:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3105:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1298,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3104:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3095:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "3095:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1302,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3142:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1303,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "3150:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3159:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1305,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3171:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1306,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3174:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3123:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "EmitStatement",
												"src": "3118:58:8"
											}
										]
									},
									"functionSelector": "561015e2",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3006:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3023:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3015:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3034:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3026:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3051:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3037:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3037:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:45:8"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3081:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3076:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:13:8"
									},
									"scope": 1736,
									"src": "2997:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "3275:91:8",
										"statements": [
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "3281:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1322,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "3291:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1323,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "3296:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3291:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1325,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3290:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3281:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "3281:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1329,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "3327:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "3335:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3344:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1332,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "3356:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1333,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "3359:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1328,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3309:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3309:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "EmitStatement",
												"src": "3304:57:8"
											}
										]
									},
									"functionSelector": "4e3e4035",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3194:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "3203:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1311,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3203:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3220:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "3213:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3237:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "3223:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3223:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:43:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3267:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "3262:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3262:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:13:8"
									},
									"scope": 1736,
									"src": "3185:181:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "3456:92:8",
										"statements": [
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1348,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "3462:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1349,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "3472:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1350,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "3477:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3472:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1352,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3471:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3462:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "3462:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1356,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "3509:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1357,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3517:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3526:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1359,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "3538:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1360,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3541:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1355,
														"name": "AssertionEventBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "3490:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bool,bool)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "EmitStatement",
												"src": "3485:58:8"
											}
										]
									},
									"functionSelector": "44781a00",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3379:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3393:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3388:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3388:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3401:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3396:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3396:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3418:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3404:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3404:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:39:8"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3448:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3443:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3442:13:8"
									},
									"scope": 1736,
									"src": "3370:178:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "4062:95:8",
										"statements": [
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1375,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "4068:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1376,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "4078:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1377,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "4083:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4078:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4077:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4068:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "4068:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1383,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "4118:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1384,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4126:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4135:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1386,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4147:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "4150:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1382,
														"name": "AssertionEventAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "4096:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bool,string memory,string memory,address,address)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "EmitStatement",
												"src": "4091:61:8"
											}
										]
									},
									"functionSelector": "b8f28531",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3979:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3996:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "3988:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4007:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "3999:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4024:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4010:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4010:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3987:45:8"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4054:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4049:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4049:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:13:8"
									},
									"scope": 1736,
									"src": "3970:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "4253:95:8",
										"statements": [
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1402,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "4259:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1403,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "4269:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1404,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "4274:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4269:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1406,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4268:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4259:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "4259:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1410,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "4309:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1411,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "4317:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4326:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1413,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "4338:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1414,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "4341:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1409,
														"name": "AssertionEventBytes32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "4287:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bytes32,bytes32)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "EmitStatement",
												"src": "4282:61:8"
											}
										]
									},
									"functionSelector": "556fe562",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "4170:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4187:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4179:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4198:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4190:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4215:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4201:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4178:45:8"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4245:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4240:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4240:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:13:8"
									},
									"scope": 1736,
									"src": "4161:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "4456:152:8",
										"statements": [
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1429,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "4462:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1433,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1420,
																					"src": "4499:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1431,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4482:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4486:12:8",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4482:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4482:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1430,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4472:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4472:30:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1439,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1422,
																					"src": "4533:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1437,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4516:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4520:12:8",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4516:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4516:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1436,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4506:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4506:30:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4472:64:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1443,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4471:66:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4462:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "4462:75:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1447,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4569:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1448,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4577:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4586:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1450,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "4598:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1451,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "4601:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1446,
														"name": "AssertionEventString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "4548:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory,string memory,string memory,string memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "EmitStatement",
												"src": "4543:60:8"
											}
										]
									},
									"functionSelector": "49f97939",
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "4361:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4384:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "4370:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4370:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4401:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "4387:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4387:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4418:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "4404:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4404:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4369:57:8"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4448:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "4443:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:13:8"
									},
									"scope": 1736,
									"src": "4352:256:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "4765:94:8",
										"statements": [
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1466,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "4771:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1467,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "4781:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1468,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "4785:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4781:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1470,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4780:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4771:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "4771:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1474,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "4817:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1475,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "4825:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4834:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1477,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "4849:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1478,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "4852:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1473,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4798:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "EmitStatement",
												"src": "4793:61:8"
											}
										]
									},
									"functionSelector": "a079f1a3",
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "4679:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4699:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4691:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4710:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4702:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4727:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4713:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4713:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:45:8"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4757:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4752:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4752:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4751:13:8"
									},
									"scope": 1736,
									"src": "4670:189:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "4956:93:8",
										"statements": [
											{
												"expression": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1493,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "4962:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1494,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "4972:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1495,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "4976:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4972:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1497,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4971:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4962:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "4962:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1501,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "5007:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1502,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5015:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5024:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1504,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "5039:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1505,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "5042:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1500,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4989:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "EmitStatement",
												"src": "4984:60:8"
											}
										]
									},
									"functionSelector": "9c0b4336",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "4872:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4891:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4884:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1483,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4884:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4901:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4894:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1485,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4894:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4918:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4904:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4904:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4883:43:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4948:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4943:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4943:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:13:8"
									},
									"scope": 1736,
									"src": "4863:186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "5193:215:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "5202:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5210:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5206:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1521,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "5206:3:8",
																"typeDescriptions": {}
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5206:6:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5202:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1541,
													"nodeType": "Block",
													"src": "5297:37:8",
													"statements": [
														{
															"expression": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1531,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "5305:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1532,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "5315:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1535,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "5324:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5319:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1533,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "5319:4:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5319:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5315:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1538,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5314:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5305:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "5305:22:8"
														}
													]
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "5199:135:8",
												"trueBody": {
													"id": 1530,
													"nodeType": "Block",
													"src": "5214:77:8",
													"statements": [
														{
															"expression": {
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1526,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "5271:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5280:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5271:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1529,
															"nodeType": "ExpressionStatement",
															"src": "5271:13:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1544,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "5366:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1545,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "5374:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1547,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "5398:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1548,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5401:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1543,
														"name": "AssertionEventUintInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "5344:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,int256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5344:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "EmitStatement",
												"src": "5339:64:8"
											}
										]
									},
									"functionSelector": "8c45cb97",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "5108:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5128:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5120:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5138:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5131:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1512,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5131:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "5155:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5141:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5141:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:44:8"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5185:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5180:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5180:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:13:8"
									},
									"scope": 1736,
									"src": "5099:309:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "5505:216:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "5514:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5522:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5518:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1564,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "5518:3:8",
																"typeDescriptions": {}
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5518:6:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5514:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "5610:37:8",
													"statements": [
														{
															"expression": {
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1574,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "5618:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1577,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1554,
																						"src": "5633:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5628:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1575,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "5628:4:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5628:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 1579,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1556,
																				"src": "5638:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5628:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1581,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5627:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5618:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1583,
															"nodeType": "ExpressionStatement",
															"src": "5618:22:8"
														}
													]
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "5511:136:8",
												"trueBody": {
													"id": 1573,
													"nodeType": "Block",
													"src": "5526:78:8",
													"statements": [
														{
															"expression": {
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1569,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "5583:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5592:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5583:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1572,
															"nodeType": "ExpressionStatement",
															"src": "5583:14:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1587,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "5679:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1588,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "5687:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5696:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1590,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "5711:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1591,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "5714:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1586,
														"name": "AssertionEventIntUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "5657:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,uint256)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5657:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "EmitStatement",
												"src": "5652:64:8"
											}
										]
									},
									"functionSelector": "0897e4c7",
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "5420:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5439:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5432:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1553,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5450:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5442:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "5467:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5453:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5453:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5431:44:8"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5497:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "5492:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5492:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5491:13:8"
									},
									"scope": 1736,
									"src": "5411:310:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "5875:93:8",
										"statements": [
											{
												"expression": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1606,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "5881:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "5891:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1608,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "5895:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5891:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5890:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5881:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "5881:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1614,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "5927:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1615,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "5935:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5944:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1617,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "5958:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1618,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "5961:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1613,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "5908:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5908:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "EmitStatement",
												"src": "5903:60:8"
											}
										]
									},
									"functionSelector": "aea88952",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "5790:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5809:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "5801:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5820:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "5812:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "5837:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "5823:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5823:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:45:8"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5867:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "5862:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5861:13:8"
									},
									"scope": 1736,
									"src": "5781:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "6064:92:8",
										"statements": [
											{
												"expression": {
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1633,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "6070:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1634,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "6080:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1635,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "6084:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "6080:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1637,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6079:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6070:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "6070:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1641,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "6115:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1642,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "6123:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6132:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1644,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "6146:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1645,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "6149:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1640,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "6097:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6097:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "EmitStatement",
												"src": "6092:59:8"
											}
										]
									},
									"functionSelector": "44b7f248",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "5981:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5999:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "5992:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1623,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6009:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "6002:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1625,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6002:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "6026:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "6012:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6012:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:43:8"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6056:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "6051:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6051:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6050:13:8"
									},
									"scope": 1736,
									"src": "5972:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "6299:213:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1660,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "6308:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6316:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6312:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1661,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "6312:3:8",
																"typeDescriptions": {}
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6312:6:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6308:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "6402:37:8",
													"statements": [
														{
															"expression": {
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1671,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "6410:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1672,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1651,
																				"src": "6420:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1675,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1653,
																						"src": "6429:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6424:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1673,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "6424:4:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6424:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6420:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1678,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6419:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6410:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "6410:22:8"
														}
													]
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "6305:134:8",
												"trueBody": {
													"id": 1670,
													"nodeType": "Block",
													"src": "6320:76:8",
													"statements": [
														{
															"expression": {
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1666,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "6375:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6384:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6375:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1669,
															"nodeType": "ExpressionStatement",
															"src": "6375:14:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1684,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "6471:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1685,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "6479:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6488:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1687,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "6502:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1688,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "6505:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1683,
														"name": "AssertionEventUintInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "6449:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,int256)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6449:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "EmitStatement",
												"src": "6444:63:8"
											}
										]
									},
									"functionSelector": "18211bfb",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "6215:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6234:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6226:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6244:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6237:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6237:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "6261:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6247:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6247:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:44:8"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6291:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6286:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6286:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6285:13:8"
									},
									"scope": 1736,
									"src": "6206:306:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "6609:212:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1703,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "6618:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6626:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6622:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1704,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "6622:3:8",
																"typeDescriptions": {}
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6622:6:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6618:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "6711:37:8",
													"statements": [
														{
															"expression": {
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1714,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "6719:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1717,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1694,
																						"src": "6734:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1716,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6729:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1715,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "6729:4:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6729:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1719,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "6739:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6729:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1721,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6728:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6719:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "6719:22:8"
														}
													]
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "6615:133:8",
												"trueBody": {
													"id": 1713,
													"nodeType": "Block",
													"src": "6630:75:8",
													"statements": [
														{
															"expression": {
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1709,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "6685:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6694:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6685:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1712,
															"nodeType": "ExpressionStatement",
															"src": "6685:13:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1727,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "6780:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1728,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "6788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6797:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1730,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "6811:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1731,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "6814:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1726,
														"name": "AssertionEventIntUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "6758:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6758:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "EmitStatement",
												"src": "6753:63:8"
											}
										]
									},
									"functionSelector": "77c6d463",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "6525:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6543:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "6536:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6536:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6554:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "6546:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6546:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "6571:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "6557:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1697,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6557:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6535:44:8"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6601:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "6596:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6596:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6595:13:8"
									},
									"scope": 1736,
									"src": "6516:305:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1737,
							"src": "71:6752:8",
							"usedErrors": [],
							"usedEvents": [
								995,
								1007,
								1019,
								1031,
								1043,
								1055,
								1067,
								1079,
								1091
							]
						}
					],
					"src": "37:6787:8"
				},
				"id": 8
			},
			"tests/WallyVesting_test.sol": {
				"ast": {
					"absolutePath": "tests/WallyVesting_test.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Assert": [
							1736
						],
						"CliffGreaterThanDuration": [
							532
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"InvalidAddress": [
							530
						],
						"NotAuthorized": [
							534
						],
						"NothingToRelease": [
							536
						],
						"TestsAccounts": [
							985
						],
						"VestingRevokedAlready": [
							528
						],
						"WallyVesting": [
							873
						],
						"testSuite": [
							1854
						]
					},
					"id": 1855,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:32:9"
						},
						{
							"absolutePath": "remix_tests.sol",
							"file": "remix_tests.sol",
							"id": 1739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1855,
							"sourceUnit": 1737,
							"src": "129:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "remix_accounts.sol",
							"file": "remix_accounts.sol",
							"id": 1740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1855,
							"sourceUnit": 986,
							"src": "343:28:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/WallyVesting.sol",
							"file": "../contracts/WallyVesting.sol",
							"id": 1741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1855,
							"sourceUnit": 874,
							"src": "372:39:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "testSuite",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1854,
							"linearizedBaseContracts": [
								1854
							],
							"name": "testSuite",
							"nameLocation": "520:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "701:107:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "763:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "758:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1748,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "758:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "758:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "772:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "767:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1752,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "767:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "312073686f756c6420626520657175616c20746f2031",
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "776:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce5b66e712fd209701b261bab5d02d6006f943c117c975776d7bc101e6ea1c86",
																"typeString": "literal_string \"1 should be equal to 1\""
															},
															"value": "1 should be equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_ce5b66e712fd209701b261bab5d02d6006f943c117c975776d7bc101e6ea1c86",
																"typeString": "literal_string \"1 should be equal to 1\""
															}
														],
														"expression": {
															"id": 1745,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "745:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "752:5:9",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1138,
														"src": "745:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "745:56:9"
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "537:131:9",
										"text": "'beforeAll' runs before all other tests\n More special functions are: 'beforeEach', 'beforeAll', 'afterEach' & 'afterAll'"
									},
									"functionSelector": "7fea0d4b",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAll",
									"nameLocation": "682:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:9"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:9"
									},
									"scope": 1854,
									"src": "673:135:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "845:304:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "961:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "966:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "961:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73686f756c642062652074727565",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "969:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b12f9c5bc4a82ca1ad7ddb67124872006aff2994f603ddbee11475a3ecd79c21",
																"typeString": "literal_string \"should be true\""
															},
															"value": "should be true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b12f9c5bc4a82ca1ad7ddb67124872006aff2994f603ddbee11475a3ecd79c21",
																"typeString": "literal_string \"should be true\""
															}
														],
														"expression": {
															"id": 1763,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "951:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "958:2:9",
														"memberName": "ok",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "951:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bool,string memory) returns (bool)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "951:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1015:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1775,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1015:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1015:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1029:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1024:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1779,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1024:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1024:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "322073686f756c642062652067726561746572207468616e20746f2031",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1033:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4aa1f787db3fcfa9f54b0253d689d521f7ac16850a0d189839b4a572076119bc",
																"typeString": "literal_string \"2 should be greater than to 1\""
															},
															"value": "2 should be greater than to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_4aa1f787db3fcfa9f54b0253d689d521f7ac16850a0d189839b4a572076119bc",
																"typeString": "literal_string \"2 should be greater than to 1\""
															}
														],
														"expression": {
															"id": 1772,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "996:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1003:11:9",
														"memberName": "greaterThan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1482,
														"src": "996:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "996:69:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1098:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1093:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1789,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1093:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1093:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1107:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1102:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1793,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1102:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1102:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "322073686f756c64206265206c6573736572207468616e20746f2033",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1111:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afb127f3091a592e4442d3cc2f229397fb413d593c528e8b3f7fb127b3c43be8",
																"typeString": "literal_string \"2 should be lesser than to 3\""
															},
															"value": "2 should be lesser than to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_afb127f3091a592e4442d3cc2f229397fb413d593c528e8b3f7fb127b3c43be8",
																"typeString": "literal_string \"2 should be lesser than to 3\""
															}
														],
														"expression": {
															"id": 1786,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "1075:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1082:10:9",
														"memberName": "lesserThan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1622,
														"src": "1075:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "1075:67:9"
											}
										]
									},
									"functionSelector": "011e6492",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSuccess",
									"nameLocation": "823:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:2:9"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:9"
									},
									"scope": 1854,
									"src": "814:335:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "1207:97:9",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1293:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1805,
												"id": 1807,
												"nodeType": "Return",
												"src": "1286:11:9"
											}
										]
									},
									"functionSelector": "12d487ea",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSuccess2",
									"nameLocation": "1164:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:2:9"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1201:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1201:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:6:9"
									},
									"scope": 1854,
									"src": "1155:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "1345:80:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1371:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1815,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1371:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1385:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1380:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1819,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1380:4:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "312073686f756c64206e6f7420626520657175616c20746f2031",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1907b6a5d0bd9cd45a052fa707f99df6b74f937edef780db8347b7cf4acb592",
																"typeString": "literal_string \"1 should not be equal to 1\""
															},
															"value": "1 should not be equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_d1907b6a5d0bd9cd45a052fa707f99df6b74f937edef780db8347b7cf4acb592",
																"typeString": "literal_string \"1 should not be equal to 1\""
															}
														],
														"expression": {
															"id": 1812,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "1355:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1362:8:9",
														"memberName": "notEqual",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1310,
														"src": "1355:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "1355:63:9"
											}
										]
									},
									"functionSelector": "36c00656",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkFailure",
									"nameLocation": "1323:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:2:9"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:0:9"
									},
									"scope": 1854,
									"src": "1314:111:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "1634:196:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1710:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1714:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1710:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"id": 1836,
																	"name": "TestsAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "1722:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_TestsAccounts_$985_$",
																		"typeString": "type(library TestsAccounts)"
																	}
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1736:10:9",
																"memberName": "getAccount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 984,
																"src": "1722:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) pure returns (address)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:27:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "496e76616c69642073656e646572",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1751:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0",
																"typeString": "literal_string \"Invalid sender\""
															},
															"value": "Invalid sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0",
																"typeString": "literal_string \"Invalid sender\""
															}
														],
														"expression": {
															"id": 1831,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "1697:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1704:5:9",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "1697:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,address,string memory) returns (bool)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1697:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "1697:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1791:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1795:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1791:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1802:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1807:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"expression": {
															"id": 1843,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "1778:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1736_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1785:5:9",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1138,
														"src": "1778:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1778:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "1778:45:9"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "1431:152:9",
										"text": "Custom Transaction Context: https://remix-ide.readthedocs.io/en/latest/unittesting.html#customization\n #sender: account-1\n #value: 100"
									},
									"functionSelector": "9074416d",
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSenderAndValue",
									"nameLocation": "1597:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:2:9"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:0:9"
									},
									"scope": 1854,
									"src": "1588:242:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1855,
							"src": "511:1321:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1792:9"
				},
				"id": 9
			}
		}
	}
}