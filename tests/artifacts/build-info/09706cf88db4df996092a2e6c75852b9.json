{
	"id": "09706cf88db4df996092a2e6c75852b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"tests/WallyStaking_test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n        \npragma solidity >=0.4.22 <0.9.0;\n\n// This import is automatically injected by Remix\nimport \"remix_tests.sol\"; \n\n// This import is required to use custom transaction context\n// Although it may fail compilation in 'Solidity Compiler' plugin\n// But it will work fine in 'Solidity Unit Testing' plugin\nimport \"remix_accounts.sol\";\nimport \"../contracts/WallyStaking.sol\";\n\n// File name has to end with '_test.sol', this file can contain more than one testSuite contracts\ncontract testSuite {\n\n    /// 'beforeAll' runs before all other tests\n    /// More special functions are: 'beforeEach', 'beforeAll', 'afterEach' & 'afterAll'\n    function beforeAll() public {\n        // <instantiate contract>\n        Assert.equal(uint(1), uint(1), \"1 should be equal to 1\");\n    }\n\n    function checkSuccess() public {\n        // Use 'Assert' methods: https://remix-ide.readthedocs.io/en/latest/assert_library.html\n        Assert.ok(2 == 2, 'should be true');\n        Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\");\n        Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\");\n    }\n\n    function checkSuccess2() public pure returns (bool) {\n        // Use the return value (true or false) to test the contract\n        return true;\n    }\n    \n    function checkFailure() public {\n        Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\");\n    }\n\n    /// Custom Transaction Context: https://remix-ide.readthedocs.io/en/latest/unittesting.html#customization\n    /// #sender: account-1\n    /// #value: 100\n    function checkSenderAndValue() public payable {\n        // account index varies 0-9, value is in wei\n        Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\");\n        Assert.equal(msg.value, 100, \"Invalid value\");\n    }\n}\n    "
			},
			"contracts/WallyStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/* ---------------------------------\n * Custom Errors (saving gas vs. revert strings)\n * --------------------------------- */\nerror ZeroAmount();\nerror InvalidLockChoice();\nerror AlreadyWithdrawn();\nerror LockNotOver();\nerror InsufficientBalance();\nerror InvalidAddress();\n\n/**\n * @title WallyStaking\n * @dev Stake Wally Tokens for fixed durations (3, 6, or 12 months) to earn APY-based rewards.\n *\n * Must be funded with enough TWG to cover principal + rewards.\n * Addresses many audit items: M001 (fees?), M002 (array length check), M003 (checking transfer), etc.\n */\ncontract WallyStaking is AccessControl, ReentrancyGuard {\n    bytes32 internal constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    IERC20 internal immutable wallyToken;\n\n    // Lock durations (internal, pinned)\n    uint256 internal constant LOCK_3_MONTHS = 90 days;\n    uint256 internal constant LOCK_6_MONTHS = 180 days;\n    uint256 internal constant LOCK_12_MONTHS = 365 days;\n\n    // APYs in basis points, e.g. 500 = 5%\n    uint256 public apy3Months = 500;\n    uint256 public apy6Months = 1000;\n    uint256 public apy12Months = 1500;\n\n    struct StakeInfo {\n        uint256 amount;\n        uint256 startTimestamp;\n        uint256 lockDuration;\n        uint256 apy; // basis points\n        bool withdrawn;\n    }\n\n    // (I003) Named mapping parameter for >=0.8.18\n    mapping(address user => StakeInfo[]) internal _stakes;\n\n    event Staked(address indexed user, uint256 amount, uint256 lockDuration, uint256 apy);\n    event Withdrawn(address indexed user, uint256 stakeIndex, uint256 reward);\n\n    constructor(address _wallyToken, address _admin) payable { // (G008) constructor payable\n        if (_wallyToken == address(0)) revert InvalidAddress();\n        if (_admin == address(0)) revert InvalidAddress();\n\n        wallyToken = IERC20(_wallyToken);\n        _grantRole(ADMIN_ROLE, _admin);\n    }\n\n    /**\n     * @dev Stake a specific `amount` of TWG for one of the fixed durations (3, 6, 12 months).\n     */\n    function stake(uint256 amount, uint256 lockChoice) external nonReentrant {\n        // (G004) Use custom error vs revert string\n        if (amount == 0) revert ZeroAmount();\n\n        // Inline or call an internal function if used multiple times\n        (uint256 chosenLock, uint256 chosenAPY) = _getLockInfo(lockChoice);\n\n        // Transfer from user to contract (M003 => check bool)\n        bool success = wallyToken.transferFrom(msg.sender, address(this), amount);\n        if (!success) revert InsufficientBalance();\n\n        // (G001) Construct and push the struct\n        _stakes[msg.sender].push(StakeInfo({\n            amount: amount,\n            startTimestamp: block.timestamp, // (I002) approximate time\n            lockDuration: chosenLock,\n            apy: chosenAPY,\n            withdrawn: false\n        }));\n\n        emit Staked(msg.sender, amount, chosenLock, chosenAPY);\n    }\n\n    /**\n     * @dev Withdraw staked tokens + reward after lock period ends.\n     */\n    function withdraw(uint256 stakeIndex) external nonReentrant {\n        StakeInfo[] storage userStakes = _stakes[msg.sender];\n        // (M002) check array length\n        if (stakeIndex >= userStakes.length) revert InvalidLockChoice();\n\n        StakeInfo storage userStake = userStakes[stakeIndex];\n        if (userStake.withdrawn) revert AlreadyWithdrawn();\n\n        uint256 unlockTime = userStake.startTimestamp + userStake.lockDuration;\n        // (G003) cheaper if => block.timestamp >= unlockTime => but we keep clarity\n        if (block.timestamp < unlockTime) revert LockNotOver();\n\n        uint256 principal = userStake.amount;\n        uint256 timeStaked = userStake.lockDuration; \n        // (M004) potential large numbers if big apy? \n        uint256 reward = (principal * userStake.apy * timeStaked) / (365 days * 10000);\n\n        userStake.withdrawn = true;\n\n        uint256 totalPayment = principal + reward;\n        if (wallyToken.balanceOf(address(this)) < totalPayment) revert InsufficientBalance();\n\n        bool success = wallyToken.transfer(msg.sender, totalPayment);\n        if (!success) revert InsufficientBalance();\n\n        emit Withdrawn(msg.sender, stakeIndex, reward);\n    }\n\n    // (G009) If only used once, you can inline. We'll keep it separate for clarity.\n    function _getLockInfo(uint256 lockChoice)\n        internal\n        view\n        returns (uint256 chosenLock, uint256 chosenAPY)\n    {\n        if (lockChoice == 3) {\n            chosenLock = LOCK_3_MONTHS;\n            chosenAPY = apy3Months;\n        } else if (lockChoice == 6) {\n            chosenLock = LOCK_6_MONTHS;\n            chosenAPY = apy6Months;\n        } else if (lockChoice == 12) {\n            chosenLock = LOCK_12_MONTHS;\n            chosenAPY = apy12Months;\n        } else {\n            revert InvalidLockChoice();\n        }\n    }\n\n    /**\n     * @dev Admin can update APYs.\n     */\n    function setAPYs(uint256 _apy3, uint256 _apy6, uint256 _apy12)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        // (G002) Avoid re-storing if same\n        if (apy3Months != _apy3) {\n            apy3Months = _apy3;\n        }\n        if (apy6Months != _apy6) {\n            apy6Months = _apy6;\n        }\n        if (apy12Months != _apy12) {\n            apy12Months = _apy12;\n        }\n    }\n\n    /**\n     * @dev Rescue any leftover tokens.\n     */\n    function rescueTokens(address tokenAddress, uint256 amount, address to)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        if (to == address(0)) revert InvalidAddress();\n        bool success = IERC20(tokenAddress).transfer(to, amount);\n        if (!success) revert InsufficientBalance();\n    }\n\n    // (optional) public getter for a userâ€™s stake array\n    function getStakes(address user) external view returns (StakeInfo[] memory) {\n        return _stakes[user];\n    }\n}"
			},
			"remix_accounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.4.22 <0.9.0;\n\nlibrary TestsAccounts {\n    function getAccount(uint index) pure public returns (address) {\n        address[15] memory accounts;\n\t\taccounts[0] = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n\n\t\taccounts[1] = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;\n\n\t\taccounts[2] = 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db;\n\n\t\taccounts[3] = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB;\n\n\t\taccounts[4] = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2;\n\n\t\taccounts[5] = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372;\n\n\t\taccounts[6] = 0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678;\n\n\t\taccounts[7] = 0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7;\n\n\t\taccounts[8] = 0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C;\n\n\t\taccounts[9] = 0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC;\n\n\t\taccounts[10] = 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;\n\n\t\taccounts[11] = 0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C;\n\n\t\taccounts[12] = 0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB;\n\n\t\taccounts[13] = 0x583031D1113aD414F02576BD6afaBfb302140225;\n\n\t\taccounts[14] = 0xdD870fA1b7C4700F2BD7f44238821C26f7392148;\nreturn accounts[index];\n    }\n}\n"
			},
			"remix_tests.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.4.22 <0.9.0;\n\nlibrary Assert {\n\n  event AssertionEvent(\n    bool passed,\n    string message,\n    string methodName\n  );\n\n  event AssertionEventUint(\n    bool passed,\n    string message,\n    string methodName,\n    uint256 returned,\n    uint256 expected\n  );\n\n  event AssertionEventInt(\n    bool passed,\n    string message,\n    string methodName,\n    int256 returned,\n    int256 expected\n  );\n\n  event AssertionEventBool(\n    bool passed,\n    string message,\n    string methodName,\n    bool returned,\n    bool expected\n  );\n\n  event AssertionEventAddress(\n    bool passed,\n    string message,\n    string methodName,\n    address returned,\n    address expected\n  );\n\n  event AssertionEventBytes32(\n    bool passed,\n    string message,\n    string methodName,\n    bytes32 returned,\n    bytes32 expected\n  );\n\n  event AssertionEventString(\n    bool passed,\n    string message,\n    string methodName,\n    string returned,\n    string expected\n  );\n\n  event AssertionEventUintInt(\n    bool passed,\n    string message,\n    string methodName,\n    uint256 returned,\n    int256 expected\n  );\n\n  event AssertionEventIntUint(\n    bool passed,\n    string message,\n    string methodName,\n    int256 returned,\n    uint256 expected\n  );\n\n  function ok(bool a, string memory message) public returns (bool result) {\n    result = a;\n    emit AssertionEvent(result, message, \"ok\");\n  }\n\n  function equal(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventUint(result, message, \"equal\", a, b);\n  }\n\n  function equal(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventInt(result, message, \"equal\", a, b);\n  }\n\n  function equal(bool a, bool b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventBool(result, message, \"equal\", a, b);\n  }\n\n  // TODO: only for certain versions of solc\n  //function equal(fixed a, fixed b, string message) public returns (bool result) {\n  //  result = (a == b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  // TODO: only for certain versions of solc\n  //function equal(ufixed a, ufixed b, string message) public returns (bool result) {\n  //  result = (a == b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  function equal(address a, address b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventAddress(result, message, \"equal\", a, b);\n  }\n\n  function equal(bytes32 a, bytes32 b, string memory message) public returns (bool result) {\n    result = (a == b);\n    emit AssertionEventBytes32(result, message, \"equal\", a, b);\n  }\n\n  function equal(string memory a, string memory b, string memory message) public returns (bool result) {\n     result = (keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)));\n     emit AssertionEventString(result, message, \"equal\", a, b);\n  }\n\n  function notEqual(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventUint(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventInt(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(bool a, bool b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventBool(result, message, \"notEqual\", a, b);\n  }\n\n  // TODO: only for certain versions of solc\n  //function notEqual(fixed a, fixed b, string message) public returns (bool result) {\n  //  result = (a != b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  // TODO: only for certain versions of solc\n  //function notEqual(ufixed a, ufixed b, string message) public returns (bool result) {\n  //  result = (a != b);\n  //  emit AssertionEvent(result, message);\n  //}\n\n  function notEqual(address a, address b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventAddress(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(bytes32 a, bytes32 b, string memory message) public returns (bool result) {\n    result = (a != b);\n    emit AssertionEventBytes32(result, message, \"notEqual\", a, b);\n  }\n\n  function notEqual(string memory a, string memory b, string memory message) public returns (bool result) {\n    result = (keccak256(abi.encodePacked(a)) != keccak256(abi.encodePacked(b)));\n    emit AssertionEventString(result, message, \"notEqual\", a, b);\n  }\n\n  /*----------------- Greater than --------------------*/\n  function greaterThan(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a > b);\n    emit AssertionEventUint(result, message, \"greaterThan\", a, b);\n  }\n\n  function greaterThan(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a > b);\n    emit AssertionEventInt(result, message, \"greaterThan\", a, b);\n  }\n  // TODO: safely compare between uint and int\n  function greaterThan(uint256 a, int256 b, string memory message) public returns (bool result) {\n    if(b < int(0)) {\n      // int is negative uint \"a\" always greater\n      result = true;\n    } else {\n      result = (a > uint(b));\n    }\n    emit AssertionEventUintInt(result, message, \"greaterThan\", a, b);\n  }\n  function greaterThan(int256 a, uint256 b, string memory message) public returns (bool result) {\n    if(a < int(0)) {\n      // int is negative uint \"b\" always greater\n      result = false;\n    } else {\n      result = (uint(a) > b);\n    }\n    emit AssertionEventIntUint(result, message, \"greaterThan\", a, b);\n  }\n  /*----------------- Lesser than --------------------*/\n  function lesserThan(uint256 a, uint256 b, string memory message) public returns (bool result) {\n    result = (a < b);\n    emit AssertionEventUint(result, message, \"lesserThan\", a, b);\n  }\n\n  function lesserThan(int256 a, int256 b, string memory message) public returns (bool result) {\n    result = (a < b);\n    emit AssertionEventInt(result, message, \"lesserThan\", a, b);\n  }\n  // TODO: safely compare between uint and int\n  function lesserThan(uint256 a, int256 b, string memory message) public returns (bool result) {\n    if(b < int(0)) {\n      // int is negative int \"b\" always lesser\n      result = false;\n    } else {\n      result = (a < uint(b));\n    }\n    emit AssertionEventUintInt(result, message, \"lesserThan\", a, b);\n  }\n\n  function lesserThan(int256 a, uint256 b, string memory message) public returns (bool result) {\n    if(a < int(0)) {\n      // int is negative int \"a\" always lesser\n      result = true;\n    } else {\n      result = (uint(a) < b);\n    }\n    emit AssertionEventIntUint(result, message, \"lesserThan\", a, b);\n  }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyStaking.sol": {
				"WallyStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallyToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyWithdrawn",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLockChoice",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LockNotOver",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockDuration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apy12Months",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apy3Months",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apy6Months",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockDuration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "apy",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "withdrawn",
											"type": "bool"
										}
									],
									"internalType": "struct WallyStaking.StakeInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apy3",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_apy6",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_apy12",
									"type": "uint256"
								}
							],
							"name": "setAPYs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockChoice",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0xa0\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  0x20\n  tag_8\n  dup4\n  tag_1\n  jump\t// in\ntag_8:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n  sstore\n    /* \"contracts/WallyStaking.sol\":1262:1265  500 */\n  0x01f4\n  0x02\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyStaking.sol\":1299:1303  1000 */\n  0x03e8\n  0x03\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyStaking.sol\":1338:1342  1500 */\n  0x05dc\n  0x04\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/WallyStaking.sol\":1909:1934  _wallyToken == address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyStaking.sol\":1905:1959  if (_wallyToken == address(0)) revert InvalidAddress() */\n  tag_11\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyStaking.sol\":1973:1993  _admin == address(0) */\n  iszero\n    /* \"contracts/WallyStaking.sol\":1969:2018  if (_admin == address(0)) revert InvalidAddress() */\n  tag_11\n  jumpi\n    /* \"contracts/WallyStaking.sol\":2071:2101  _grantRole(ADMIN_ROLE, _admin) */\n  tag_13\n    /* \"contracts/WallyStaking.sol\":2029:2061  wallyToken = IERC20(_wallyToken) */\n  swap2\n  0x80\n  mstore\n    /* \"contracts/WallyStaking.sol\":2071:2101  _grantRole(ADMIN_ROLE, _admin) */\n  tag_2\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/WallyStaking.sol\":2029:2061  wallyToken = IERC20(_wallyToken) */\n  0x80\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0xae3f42c075651cd672386e7fa64476ebefa89324c3c225495e52b74374d0bc80\")\n  return\n    /* \"contracts/WallyStaking.sol\":1969:2018  if (_admin == address(0)) revert InvalidAddress() */\ntag_11:\n    /* \"contracts/WallyStaking.sol\":1943:1959  InvalidAddress() */\n  shl(0xe0, 0xe6c4247b)\n  0x00\n    /* \"contracts/WallyStaking.sol\":2002:2018  InvalidAddress() */\n  mstore\n    /* \"contracts/WallyStaking.sol\":1338:1342  1500 */\n  0x04\n  0x00\n    /* \"contracts/WallyStaking.sol\":2002:2018  InvalidAddress() */\n  revert\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_16\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n    /* \"contracts/WallyStaking.sol\":908:931  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\nstop\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\n\nsub_0: assembly {\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_16, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_16:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_18\n      jumpi\n      pop\n      dup1\n      0x248a9ca3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x5bf42fb4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x765ef4cc\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x7ba6f458\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xb37fd190\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf09823c3\n      eq\n      tag_44\n      jumpi\n      0xfbcacca7\n      eq\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x04)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_50:\n      0x00\n      dup1\n      revert\n    tag_44:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyStaking.sol\":1234:1265  uint256 public apy3Months = 500 */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_42:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_60\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_61\n      tag_1\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_62\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_63\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_13\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_15\n      jump\t// in\n    tag_60:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n    tag_40:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x60))\n      tag_68\n      tag_2\n      jump\t// in\n    tag_68:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup1\n      dup4\n      sub\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_71\n      tag_12\n      jump\t// in\n    tag_71:\n        /* \"contracts/WallyStaking.sol\":5693:5709  to == address(0) */\n      iszero\n        /* \"contracts/WallyStaking.sol\":5689:5734  if (to == address(0)) revert InvalidAddress() */\n      tag_72\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap3\n      dup4\n      and\n      0x04\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup1\n      calldataload\n      swap1\n      dup3\n      add\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n      swap2\n      tag_77\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_78:\n        /* \"contracts/WallyStaking.sol\":5814:5822  !success */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":5810:5852  if (!success) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n        /* \"contracts/WallyStaking.sol\":5810:5852  if (!success) revert InsufficientBalance() */\n    tag_79:\n        /* \"contracts/WallyStaking.sol\":4197:4218  InsufficientBalance() */\n      shl(0xe3, 0x1e9acf17)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5831:5852  InsufficientBalance() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":5831:5852  InsufficientBalance() */\n      revert\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n    tag_77:\n      tag_81\n      swap2\n      pop\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":5759:5800  IERC20(tokenAddress).transfer(to, amount) */\n      gt\n      tag_82\n      jumpi\n    tag_83:\n      tag_84\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_84:\n      dup2\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_81:\n      dup2\n      jump(tag_78)\n    tag_82:\n      pop\n      returndatasize\n      jump(tag_83)\n    tag_75:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/WallyStaking.sol\":5689:5734  if (to == address(0)) revert InvalidAddress() */\n    tag_72:\n        /* \"contracts/WallyStaking.sol\":5718:5734  InvalidAddress() */\n      shl(0xe0, 0xe6c4247b)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5718:5734  InvalidAddress() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":5718:5734  InvalidAddress() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_38:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_36:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n      tag_93\n      tag_1\n      jump\t// in\n    tag_93:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_98\n      tag_2\n      jump\t// in\n    tag_98:\n      and\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":6017:6024  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_99\n      jumpi\n      mload(0x40)\n      swap2\n      tag_101\n      0x20\n      dup3\n        /* \"contracts/WallyStaking.sol\":6017:6024  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      shl\n      add\n      dup5\n      tag_8\n      jump\t// in\n    tag_101:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      dup1\n      swap3\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x00\n      swap2\n    tag_102:\n      dup4\n      dup4\n      lt\n      tag_103\n      jumpi\n      dup5\n      dup7\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      0x20\n      dup5\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup4\n      add\n      swap2\n      swap1\n      0x00\n    tag_105:\n      dup2\n      dup2\n      lt\n      tag_106\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_106:\n      swap2\n      swap4\n      pop\n      swap2\n      0x20\n      0xa0\n      0x01\n      swap3\n      0x80\n      dup8\n      mload\n      dup1\n      mload\n      dup4\n      mstore\n      dup5\n      dup2\n      add\n      mload\n      dup6\n      dup5\n      add\n      mstore\n      0x40\n      dup2\n      add\n      mload\n      0x40\n      dup5\n      add\n      mstore\n      0x60\n      dup2\n      add\n      mload\n      0x60\n      dup5\n      add\n      mstore\n      add\n      mload\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      add\n      swap5\n      add\n      swap2\n      add\n      swap2\n      dup5\n      swap4\n      swap3\n      jump(tag_105)\n    tag_103:\n        /* \"contracts/WallyStaking.sol\":6017:6024  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      0x01\n      swap3\n      mload(0x40)\n      tag_108\n      dup2\n      tag_7\n      jump\t// in\n    tag_108:\n      dup6\n      sload\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      sload\n      dup4\n      dup3\n      add\n      mstore\n      0x02\n      dup7\n      add\n      sload\n      0x40\n      dup3\n      add\n      mstore\n      0x03\n      dup7\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0xff\n      0x04\n      dup8\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap3\n      add\n      swap2\n      swap1\n      jump(tag_102)\n    tag_99:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_32:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_113\n      tag_11\n      jump\t// in\n    tag_113:\n        /* \"contracts/WallyStaking.sol\":2364:2375  amount == 0 */\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":2360:2396  if (amount == 0) revert ZeroAmount() */\n      tag_114\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4656:4657  3 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":4642:4657  lockChoice == 3 */\n      dup2\n      sub\n        /* \"contracts/WallyStaking.sol\":4656:4657  3 */\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/WallyStaking.sol\":4725:4735  apy3Months */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":1064:1071  90 days */\n      0x76a700\n        /* \"contracts/WallyStaking.sol\":4638:5034  if (lockChoice == 3) {... */\n    tag_118:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":2656:2666  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":2676:2680  this */\n      address\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      0x64\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      0x00\n        /* \"contracts/WallyStaking.sol\":2632:2642  wallyToken */\n      immutable(\"0xae3f42c075651cd672386e7fa64476ebefa89324c3c225495e52b74374d0bc80\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      swap2\n      tag_121\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4638:5034  if (lockChoice == 3) {... */\n    tag_122:\n        /* \"contracts/WallyStaking.sol\":2704:2712  !success */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":2700:2742  if (!success) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":2656:2666  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":2801:2808  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      tag_125\n      dup2\n      tag_7\n      jump\t// in\n    tag_125:\n      dup5\n      dup2\n      mstore\n      0x20\n        /* \"contracts/WallyStaking.sol\":2826:3043  StakeInfo({... */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":2894:2909  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n      0x40\n        /* \"contracts/WallyStaking.sol\":2826:3043  StakeInfo({... */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      dup2\n      mstore\n      0x60\n        /* \"contracts/WallyStaking.sol\":2826:3043  StakeInfo({... */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup7\n      dup3\n      mstore\n        /* \"contracts/WallyStaking.sol\":2826:3043  StakeInfo({... */\n      0x80\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap5\n      0x00\n      dup7\n      mstore\n      dup1\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      tag_128\n      swap2\n      0x01\n      dup3\n      add\n      dup2\n      sstore\n      tag_4\n      jump\t// in\n    tag_128:\n      swap4\n      swap1\n      swap4\n      tag_129\n      jumpi\n      0x04\n      swap5\n      mload\n      dup5\n      sstore\n      mload\n      0x01\n      dup5\n      add\n      sstore\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      mload\n        /* \"contracts/WallyStaking.sol\":4656:4657  3 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      add\n      sstore\n      add\n      swap1\n      mload\n      iszero\n      iszero\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":3060:3109  Staked(msg.sender, amount, chosenLock, chosenAPY) */\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x60\n        /* \"contracts/WallyStaking.sol\":2656:2666  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":3060:3109  Staked(msg.sender, amount, chosenLock, chosenAPY) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n    tag_129:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x00)\n      revert(0x00, 0x24)\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n    tag_121:\n      tag_131\n      swap2\n      pop\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":2632:2690  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      gt\n      tag_82\n      jumpi\n      tag_84\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_131:\n      dup5\n      jump(tag_122)\n        /* \"contracts/WallyStaking.sol\":4638:5034  if (lockChoice == 3) {... */\n    tag_116:\n        /* \"contracts/WallyStaking.sol\":4770:4771  6 */\n      0x06\n        /* \"contracts/WallyStaking.sol\":4756:4771  lockChoice == 6 */\n      dup2\n      sub\n        /* \"contracts/WallyStaking.sol\":4770:4771  6 */\n      tag_135\n      jumpi\n      pop\n        /* \"contracts/WallyStaking.sol\":4656:4657  3 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":1119:1127  180 days */\n      0xed4e00\n        /* \"contracts/WallyStaking.sol\":4638:5034  if (lockChoice == 3) {... */\n      jump(tag_118)\n        /* \"contracts/WallyStaking.sol\":4752:5034  if (lockChoice == 6) {... */\n    tag_135:\n        /* \"contracts/WallyStaking.sol\":4884:4886  12 */\n      0x0c\n        /* \"contracts/WallyStaking.sol\":4870:4886  lockChoice == 12 */\n      sub\n        /* \"contracts/WallyStaking.sol\":4884:4886  12 */\n      tag_138\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":1176:1184  365 days */\n      0x01e13380\n        /* \"contracts/WallyStaking.sol\":4638:5034  if (lockChoice == 3) {... */\n      jump(tag_118)\n        /* \"contracts/WallyStaking.sol\":4866:5034  if (lockChoice == 12) {... */\n    tag_138:\n        /* \"contracts/WallyStaking.sol\":3419:3438  InvalidLockChoice() */\n      shl(0xe0, 0x506604d7)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5004:5023  InvalidLockChoice() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":5004:5023  InvalidLockChoice() */\n      revert\n        /* \"contracts/WallyStaking.sol\":2360:2396  if (amount == 0) revert ZeroAmount() */\n    tag_114:\n        /* \"contracts/WallyStaking.sol\":2384:2396  ZeroAmount() */\n      shl(0xe0, 0x1f2a2005)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":2384:2396  ZeroAmount() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":2384:2396  ZeroAmount() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_30:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x44)\n      calldataload(0x24)\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_144\n      tag_12\n      jump\t// in\n    tag_144:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"contracts/WallyStaking.sol\":5267:5277  apy3Months */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":5267:5286  apy3Months != _apy3 */\n      sub\n        /* \"contracts/WallyStaking.sol\":5263:5331  if (apy3Months != _apy3) {... */\n      tag_145\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_146:\n      pop\n      dup1\n        /* \"contracts/WallyStaking.sol\":5344:5354  apy6Months */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":5344:5363  apy6Months != _apy6 */\n      sub\n        /* \"contracts/WallyStaking.sol\":5340:5408  if (apy6Months != _apy6) {... */\n      tag_147\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_148:\n      pop\n      dup1\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":5421:5442  apy12Months != _apy12 */\n      sub\n        /* \"contracts/WallyStaking.sol\":5417:5489  if (apy12Months != _apy12) {... */\n      tag_149\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n        /* \"contracts/WallyStaking.sol\":5417:5489  if (apy12Months != _apy12) {... */\n    tag_149:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":5340:5408  if (apy6Months != _apy6) {... */\n    tag_147:\n        /* \"contracts/WallyStaking.sol\":5344:5354  apy6Months */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":5340:5408  if (apy6Months != _apy6) {... */\n      dup2\n      jump(tag_148)\n        /* \"contracts/WallyStaking.sol\":5263:5331  if (apy3Months != _apy3) {... */\n    tag_145:\n        /* \"contracts/WallyStaking.sol\":5267:5277  apy3Months */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":5263:5331  if (apy3Months != _apy3) {... */\n      dup3\n      jump(tag_146)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_28:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyStaking.sol\":1271:1303  uint256 public apy6Months = 1000 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_26:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n      tag_159\n      tag_1\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_60\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_24:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_60\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_168\n      tag_1\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_63\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_14\n      jump\t// in\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_22:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_175\n      tag_11\n      jump\t// in\n    tag_175:\n        /* \"contracts/WallyStaking.sol\":3317:3327  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":3309:3316  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"contracts/WallyStaking.sol\":3379:3410  stakeIndex >= userStakes.length */\n      dup3\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":3375:3438  if (stakeIndex >= userStakes.length) revert InvalidLockChoice() */\n      tag_138\n      jumpi\n        /* \"contracts/WallyStaking.sol\":3479:3501  userStakes[stakeIndex] */\n      dup2\n      tag_178\n      swap2\n      tag_4\n      jump\t// in\n    tag_178:\n        /* \"contracts/WallyStaking.sol\":3515:3534  userStake.withdrawn */\n      pop\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":3515:3534  userStake.withdrawn */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      sload\n      0xff\n      dup2\n      and\n        /* \"contracts/WallyStaking.sol\":3511:3561  if (userStake.withdrawn) revert AlreadyWithdrawn() */\n      tag_179\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"contracts/WallyStaking.sol\":3593:3617  userStake.startTimestamp */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3620:3642  userStake.lockDuration */\n      swap2\n        /* \"contracts/WallyStaking.sol\":3593:3642  userStake.startTimestamp + userStake.lockDuration */\n      tag_181\n        /* \"contracts/WallyStaking.sol\":3620:3642  userStake.lockDuration */\n      0x02\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3593:3642  userStake.startTimestamp + userStake.lockDuration */\n      dup1\n      swap5\n      tag_5\n      jump\t// in\n    tag_181:\n        /* \"contracts/WallyStaking.sol\":3741:3756  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":3741:3769  block.timestamp < unlockTime */\n      lt\n        /* \"contracts/WallyStaking.sol\":3737:3791  if (block.timestamp < unlockTime) revert LockNotOver() */\n      tag_182\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      swap4\n        /* \"contracts/WallyStaking.sol\":4018:4034  365 days * 10000 */\n      0x496cebb800\n        /* \"contracts/WallyStaking.sol\":3975:4013  principal * userStake.apy * timeStaked */\n      tag_184\n        /* \"contracts/WallyStaking.sol\":4106:4124  principal + reward */\n      tag_185\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap6\n        /* \"contracts/WallyStaking.sol\":3975:4000  principal * userStake.apy */\n      tag_186\n        /* \"contracts/WallyStaking.sol\":3987:4000  userStake.apy */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup7\n      sload\n        /* \"contracts/WallyStaking.sol\":3987:4000  userStake.apy */\n      swap7\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3975:4000  principal * userStake.apy */\n      dup7\n      tag_6\n      jump\t// in\n    tag_186:\n        /* \"contracts/WallyStaking.sol\":3975:4013  principal * userStake.apy * timeStaked */\n      tag_6\n      jump\t// in\n    tag_184:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      div\n      swap5\n      dup6\n      swap4\n      not(0xff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":4106:4124  principal + reward */\n      tag_5\n      jump\t// in\n    tag_185:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":4167:4171  this */\n      address\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":4138:4148  wallyToken */\n      immutable(\"0xae3f42c075651cd672386e7fa64476ebefa89324c3c225495e52b74374d0bc80\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n      swap1\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup6\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup4\n      swap2\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      swap2\n      tag_189\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_190:\n        /* \"contracts/WallyStaking.sol\":4138:4188  wallyToken.balanceOf(address(this)) < totalPayment */\n      pop\n      lt\n        /* \"contracts/WallyStaking.sol\":4134:4218  if (wallyToken.balanceOf(address(this)) < totalPayment) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":3317:3327  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x20\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n      swap2\n      tag_196\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_197:\n        /* \"contracts/WallyStaking.sol\":4303:4311  !success */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":4299:4341  if (!success) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":4357:4398  Withdrawn(msg.sender, stakeIndex, reward) */\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/WallyStaking.sol\":3317:3327  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":4357:4398  Withdrawn(msg.sender, stakeIndex, reward) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n    tag_196:\n      tag_200\n      swap2\n      pop\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":4244:4289  wallyToken.transfer(msg.sender, totalPayment) */\n      gt\n      tag_82\n      jumpi\n      tag_84\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_200:\n      dup4\n      jump(tag_197)\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      gt\n      tag_204\n      jumpi\n    tag_205:\n      dup2\n      tag_206\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_8\n      jump\t// in\n    tag_206:\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_50\n      jumpi\n      dup3\n      swap1\n      mload\n        /* \"contracts/WallyStaking.sol\":4138:4173  wallyToken.balanceOf(address(this)) */\n      dup7\n      jump(tag_190)\n    tag_204:\n      returndatasize\n      swap2\n      pop\n      jump(tag_205)\n        /* \"contracts/WallyStaking.sol\":3737:3791  if (block.timestamp < unlockTime) revert LockNotOver() */\n    tag_182:\n        /* \"contracts/WallyStaking.sol\":3778:3791  LockNotOver() */\n      shl(0xe0, 0xfea04557)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":3778:3791  LockNotOver() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":3778:3791  LockNotOver() */\n      revert\n        /* \"contracts/WallyStaking.sol\":3511:3561  if (userStake.withdrawn) revert AlreadyWithdrawn() */\n    tag_179:\n        /* \"contracts/WallyStaking.sol\":3543:3561  AlreadyWithdrawn() */\n      shl(0xe0, 0x6507689f)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":3543:3561  AlreadyWithdrawn() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":3543:3561  AlreadyWithdrawn() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_20:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_213\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_213:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_18:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_50\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_220\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_221:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_220:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_221)\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_50\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_50\n      jumpi\n      jump\t// out\n    tag_4:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_226\n      jumpi\n      0x00\n      mstore\n      0x05\n      keccak256(0x00, 0x20)\n      swap2\n      mul\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_226:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_5:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_228\n      jumpi\n      jump\t// out\n    tag_228:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_6:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_228\n      jumpi\n      jump\t// out\n    tag_7:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_99\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_8:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_99\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_9:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_50\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_50\n      jumpi\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_240\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_240:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":908:931  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_14:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_246\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyStaking.sol\":807:6039  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bdefdd67691d850adc9af2c7a69ae4d2070e488f3e7cce45ab909ce70d3ad3ba64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 235,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0601f610dd038819003918201601f19168301916001600160401b038311848410176100c35780849260409485528339810103126100bf5761004d6020610046836100d7565b92016100d7565b600180556101f46002556103e86003556105dc6004556001600160a01b039091169081156100b0576001600160a01b038116156100b057610090916080526100eb565b50604051610c199081610197823960805181818161042301526107490152f35b63e6c4247b60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100bf57565b6001600160a01b0381165f9081525f516020610db05f395f51905f52602052604090205460ff16610191576001600160a01b03165f8181525f516020610db05f395f51905f5260205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b505f9056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146108a857508063248a9ca3146108765780632e1a7d4d146106995780632f2ff15d1461065c57806336568abe146106185780635bf42fb4146105fb578063765ef4cc146105a15780637b0472f0146103c45780637ba6f4581461028357806391d148541461023b578063a217fddf14610221578063b37fd19014610143578063d547741f146100ff578063f09823c3146100e25763fbcacca7146100c1575f80fd5b346100de575f3660031901126100de576020600454604051908152f35b5f80fd5b346100de575f3660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761014160043561011e6108fb565b9061013c610137825f525f602052600160405f20015490565b610aa3565b610b63565b005b346100de5760603660031901126100de5761015c610911565b604435906001600160a01b0382168083036100de57610179610a34565b156102125760405163a9059cbb60e01b81526001600160a01b039283166004820152602480359082015291602091839160449183915f91165af1908115610207575f916101d8575b50156101c957005b631e9acf1760e31b5f5260045ffd5b6101fa915060203d602011610200575b6101f281836109a4565b8101906109c6565b816101c1565b503d6101e8565b6040513d5f823e3d90fd5b63e6c4247b60e01b5f5260045ffd5b346100de575f3660031901126100de5760206040515f8152f35b346100de5760403660031901126100de576102546108fb565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100de5760203660031901126100de576001600160a01b036102a4610911565b165f52600560205260405f2080549067ffffffffffffffff82116103b057604051916102d660208260051b01846109a4565b8083526020830180925f5260205f205f915b838310610360578486604051918291602083019060208452518091526040830191905f5b81811061031a575050500390f35b91935091602060a060019260808751805183528481015185840152604081015160408401526060810151606084015201511515608082015201940191019184939261030c565b6005602060019260405161037381610988565b855481528486015483820152600286015460408201526003860154606082015260ff600487015416151560808201528152019201920191906102e8565b634e487b7160e01b5f52604160045260245ffd5b346100de5760403660031901126100de576004356024356103e36109de565b8115610592576003810361055a57506002546276a7005b6040516323b872dd60e01b8152336004820152306024820152604481018490526020816064815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610207575f9161053b575b50156101c957335f52600560205260405f2060405161047981610988565b8481526020810142815260408201848152606083019086825260808401945f86528054680100000000000000008110156103b0576104bc91600182018155610927565b93909361052857600494518455516001840155516002830155516003820155019051151560ff80198354169116179055604051928352602083015260408201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a260018055005b634e487b7160e01b5f525f60045260245ffd5b610554915060203d602011610200576101f281836109a4565b8461045b565b6006810361056f575060035462ed4e006103fa565b600c03610583576004546301e133806103fa565b63506604d760e01b5f5260045ffd5b631f2a200560e01b5f5260045ffd5b346100de5760603660031901126100de576044356024356004356105c3610a34565b80600254036105f2575b5080600354036105e9575b5080600454036105e457005b600455005b600355816105d8565b600255826105cd565b346100de575f3660031901126100de576020600354604051908152f35b346100de5760403660031901126100de576106316108fb565b336001600160a01b0382160361064d5761014190600435610b63565b63334bd91960e11b5f5260045ffd5b346100de5760403660031901126100de5761014160043561067b6108fb565b90610694610137825f525f602052600160405f20015490565b610adb565b346100de5760203660031901126100de576004356106b56109de565b335f52600560205260405f20805482101561058357816106d491610927565b506004810190815460ff8116610867576001820154916106f960028201548094610954565b42106108585760019364496cebb8006107246107349561071f6003865496015486610975565b610975565b0494859360ff1916179055610954565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa80156102075783915f91610823575b50106101c95760405163a9059cbb60e01b81523360048201526024810192909252602090829060449082905f905af1908115610207575f91610804575b50156101c95760405191825260208201527f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc660403392a260018055005b61081d915060203d602011610200576101f281836109a4565b836107c7565b9150506020813d602011610850575b8161083f602093836109a4565b810103126100de578290518661078a565b3d9150610832565b63fea0455760e01b5f5260045ffd5b636507689f60e01b5f5260045ffd5b346100de5760203660031901126100de5760206108a06004355f525f602052600160405f20015490565b604051908152f35b346100de5760203660031901126100de576004359063ffffffff60e01b82168092036100de57602091637965db0b60e01b81149081156108ea575b5015158152f35b6301ffc9a760e01b149050836108e3565b602435906001600160a01b03821682036100de57565b600435906001600160a01b03821682036100de57565b8054821015610940575f52600560205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161096157565b634e487b7160e01b5f52601160045260245ffd5b8181029291811591840414171561096157565b60a0810190811067ffffffffffffffff8211176103b057604052565b90601f8019910116810190811067ffffffffffffffff8211176103b057604052565b908160209103126100de575180151581036100de5790565b6002600154146109ef576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615610a6c57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff1615610ac55750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220bdefdd67691d850adc9af2c7a69ae4d2070e488f3e7cce45ab909ce70d3ad3ba64736f6c634300081c00337d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
							"opcodes": "PUSH1 0xA0 PUSH1 0x1F PUSH2 0xDD0 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC3 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBF JUMPI PUSH2 0x4D PUSH1 0x20 PUSH2 0x46 DUP4 PUSH2 0xD7 JUMP JUMPDEST SWAP3 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH2 0x1F4 PUSH1 0x2 SSTORE PUSH2 0x3E8 PUSH1 0x3 SSTORE PUSH2 0x5DC PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB0 JUMPI PUSH2 0x90 SWAP2 PUSH1 0x80 MSTORE PUSH2 0xEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC19 SWAP1 DUP2 PUSH2 0x197 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x423 ADD MSTORE PUSH2 0x749 ADD MSTORE RETURN JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBF JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xDB0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x191 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xDB0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x8A8 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x5BF42FB4 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x765EF4CC EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7BA6F458 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF09823C3 EQ PUSH2 0xE2 JUMPI PUSH4 0xFBCACCA7 EQ PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x11E PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x13C PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x15C PUSH2 0x911 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0xDE JUMPI PUSH2 0x179 PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x1D8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI STOP JUMPDEST PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH2 0x1FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI JUMPDEST PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x9C6 JUMP JUMPDEST DUP2 PUSH2 0x1C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x254 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A4 PUSH2 0x911 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2D6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x9A4 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x360 JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x31A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x1 SWAP3 PUSH1 0x80 DUP8 MLOAD DUP1 MLOAD DUP4 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x373 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x3E3 PUSH2 0x9DE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x592 JUMPI PUSH1 0x3 DUP2 SUB PUSH2 0x55A JUMPI POP PUSH1 0x2 SLOAD PUSH3 0x76A700 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x479 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 DUP7 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP5 PUSH0 DUP7 MSTORE DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x4BC SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x927 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x528 JUMPI PUSH1 0x4 SWAP5 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP4 ADD SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x554 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP5 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x56F JUMPI POP PUSH1 0x3 SLOAD PUSH3 0xED4E00 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0xC SUB PUSH2 0x583 JUMPI PUSH1 0x4 SLOAD PUSH4 0x1E13380 PUSH2 0x3FA JUMP JUMPDEST PUSH4 0x506604D7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x5C3 PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH1 0x2 SLOAD SUB PUSH2 0x5F2 JUMPI JUMPDEST POP DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0x5E9 JUMPI JUMPDEST POP DUP1 PUSH1 0x4 SLOAD SUB PUSH2 0x5E4 JUMPI STOP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST PUSH1 0x3 SSTORE DUP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP3 PUSH2 0x5CD JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x631 PUSH2 0x8FB JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x64D JUMPI PUSH2 0x141 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xB63 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x67B PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x694 PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6B5 PUSH2 0x9DE JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x583 JUMPI DUP2 PUSH2 0x6D4 SWAP2 PUSH2 0x927 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x867 JUMPI PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x6F9 PUSH1 0x2 DUP3 ADD SLOAD DUP1 SWAP5 PUSH2 0x954 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x858 JUMPI PUSH1 0x1 SWAP4 PUSH5 0x496CEBB800 PUSH2 0x724 PUSH2 0x734 SWAP6 PUSH2 0x71F PUSH1 0x3 DUP7 SLOAD SWAP7 ADD SLOAD DUP7 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST DIV SWAP5 DUP6 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x207 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x823 JUMPI JUMPDEST POP LT PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x804 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x81D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP4 PUSH2 0x7C7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x850 JUMPI JUMPDEST DUP2 PUSH2 0x83F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDE JUMPI DUP3 SWAP1 MLOAD DUP7 PUSH2 0x78A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x832 JUMP JUMPDEST PUSH4 0xFEA04557 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x6507689F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH2 0x8A0 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xDE JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8EA JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x940 JUMPI PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xDE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xDE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x9EF JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC5 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xEF 0xDD PUSH8 0x691D850ADC9AF2C7 0xA6 SWAP11 0xE4 0xD2 SMOD 0xE BASEFEE DUP16 RETURNDATACOPY PUSH29 0xCE45AB909CE70D3AD3BA64736F6C634300081C00337D7FFB7A348E1C6A MUL DUP7 SWAP1 DUP2 LOG2 PUSH6 0x47B49160DD3D 0xF7 0x2D SAR PUSH22 0xA570EB9B698292EC0000000000000000000000000000 ",
							"sourceMap": "807:5232:7:-:0;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;-1:-1:-1;;;;;807:5232:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1716:1:2;807:5232:7;;1262:3;;807:5232;1299:4;;807:5232;1338:4;;807:5232;-1:-1:-1;;;;;807:5232:7;;;;1909:25;;1905:54;;-1:-1:-1;;;;;807:5232:7;;1973:20;1969:49;;2071:30;2029:32;;;2071:30;:::i;:::-;;807:5232;;;;;;;;2029:32;807:5232;;;;;;;;;;;1969:49;1943:16;;;-1:-1:-1;2002:16:7;1338:4;-1:-1:-1;2002:16:7;807:5232;-1:-1:-1;807:5232:7;;;;;;-1:-1:-1;807:5232:7;;;;;-1:-1:-1;807:5232:7;;;;-1:-1:-1;;;;;807:5232:7;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;807:5232:7;;;;;;-1:-1:-1;;;;;;;;;;;807:5232:7;;;;;;;;;;-1:-1:-1;;;;;807:5232:7;;;;;-1:-1:-1;;;;;;;;;;;807:5232:7;;;;;;;-1:-1:-1;;807:5232:7;;;;;735:10:4;;807:5232:7;908:23;;6370:40:0;;807:5232:7;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;807:5232:7;6466:12:0;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_9332": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_9335": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 2723,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_9334": {
									"entryPoint": 2612,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 2779,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 2526,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 2915,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_array_index_access_struct_StakeInfo__dyn_ptr": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"617": [
									{
										"length": 32,
										"start": 1059
									},
									{
										"length": 32,
										"start": 1865
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146108a857508063248a9ca3146108765780632e1a7d4d146106995780632f2ff15d1461065c57806336568abe146106185780635bf42fb4146105fb578063765ef4cc146105a15780637b0472f0146103c45780637ba6f4581461028357806391d148541461023b578063a217fddf14610221578063b37fd19014610143578063d547741f146100ff578063f09823c3146100e25763fbcacca7146100c1575f80fd5b346100de575f3660031901126100de576020600454604051908152f35b5f80fd5b346100de575f3660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761014160043561011e6108fb565b9061013c610137825f525f602052600160405f20015490565b610aa3565b610b63565b005b346100de5760603660031901126100de5761015c610911565b604435906001600160a01b0382168083036100de57610179610a34565b156102125760405163a9059cbb60e01b81526001600160a01b039283166004820152602480359082015291602091839160449183915f91165af1908115610207575f916101d8575b50156101c957005b631e9acf1760e31b5f5260045ffd5b6101fa915060203d602011610200575b6101f281836109a4565b8101906109c6565b816101c1565b503d6101e8565b6040513d5f823e3d90fd5b63e6c4247b60e01b5f5260045ffd5b346100de575f3660031901126100de5760206040515f8152f35b346100de5760403660031901126100de576102546108fb565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100de5760203660031901126100de576001600160a01b036102a4610911565b165f52600560205260405f2080549067ffffffffffffffff82116103b057604051916102d660208260051b01846109a4565b8083526020830180925f5260205f205f915b838310610360578486604051918291602083019060208452518091526040830191905f5b81811061031a575050500390f35b91935091602060a060019260808751805183528481015185840152604081015160408401526060810151606084015201511515608082015201940191019184939261030c565b6005602060019260405161037381610988565b855481528486015483820152600286015460408201526003860154606082015260ff600487015416151560808201528152019201920191906102e8565b634e487b7160e01b5f52604160045260245ffd5b346100de5760403660031901126100de576004356024356103e36109de565b8115610592576003810361055a57506002546276a7005b6040516323b872dd60e01b8152336004820152306024820152604481018490526020816064815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610207575f9161053b575b50156101c957335f52600560205260405f2060405161047981610988565b8481526020810142815260408201848152606083019086825260808401945f86528054680100000000000000008110156103b0576104bc91600182018155610927565b93909361052857600494518455516001840155516002830155516003820155019051151560ff80198354169116179055604051928352602083015260408201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a260018055005b634e487b7160e01b5f525f60045260245ffd5b610554915060203d602011610200576101f281836109a4565b8461045b565b6006810361056f575060035462ed4e006103fa565b600c03610583576004546301e133806103fa565b63506604d760e01b5f5260045ffd5b631f2a200560e01b5f5260045ffd5b346100de5760603660031901126100de576044356024356004356105c3610a34565b80600254036105f2575b5080600354036105e9575b5080600454036105e457005b600455005b600355816105d8565b600255826105cd565b346100de575f3660031901126100de576020600354604051908152f35b346100de5760403660031901126100de576106316108fb565b336001600160a01b0382160361064d5761014190600435610b63565b63334bd91960e11b5f5260045ffd5b346100de5760403660031901126100de5761014160043561067b6108fb565b90610694610137825f525f602052600160405f20015490565b610adb565b346100de5760203660031901126100de576004356106b56109de565b335f52600560205260405f20805482101561058357816106d491610927565b506004810190815460ff8116610867576001820154916106f960028201548094610954565b42106108585760019364496cebb8006107246107349561071f6003865496015486610975565b610975565b0494859360ff1916179055610954565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa80156102075783915f91610823575b50106101c95760405163a9059cbb60e01b81523360048201526024810192909252602090829060449082905f905af1908115610207575f91610804575b50156101c95760405191825260208201527f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc660403392a260018055005b61081d915060203d602011610200576101f281836109a4565b836107c7565b9150506020813d602011610850575b8161083f602093836109a4565b810103126100de578290518661078a565b3d9150610832565b63fea0455760e01b5f5260045ffd5b636507689f60e01b5f5260045ffd5b346100de5760203660031901126100de5760206108a06004355f525f602052600160405f20015490565b604051908152f35b346100de5760203660031901126100de576004359063ffffffff60e01b82168092036100de57602091637965db0b60e01b81149081156108ea575b5015158152f35b6301ffc9a760e01b149050836108e3565b602435906001600160a01b03821682036100de57565b600435906001600160a01b03821682036100de57565b8054821015610940575f52600560205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161096157565b634e487b7160e01b5f52601160045260245ffd5b8181029291811591840414171561096157565b60a0810190811067ffffffffffffffff8211176103b057604052565b90601f8019910116810190811067ffffffffffffffff8211176103b057604052565b908160209103126100de575180151581036100de5790565b6002600154146109ef576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615610a6c57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff1615610ac55750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220bdefdd67691d850adc9af2c7a69ae4d2070e488f3e7cce45ab909ce70d3ad3ba64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x8A8 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x5BF42FB4 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x765EF4CC EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7BA6F458 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF09823C3 EQ PUSH2 0xE2 JUMPI PUSH4 0xFBCACCA7 EQ PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x11E PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x13C PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x15C PUSH2 0x911 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0xDE JUMPI PUSH2 0x179 PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x1D8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI STOP JUMPDEST PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH2 0x1FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI JUMPDEST PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x9C6 JUMP JUMPDEST DUP2 PUSH2 0x1C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x254 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A4 PUSH2 0x911 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2D6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x9A4 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x360 JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x31A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x1 SWAP3 PUSH1 0x80 DUP8 MLOAD DUP1 MLOAD DUP4 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x373 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x3E3 PUSH2 0x9DE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x592 JUMPI PUSH1 0x3 DUP2 SUB PUSH2 0x55A JUMPI POP PUSH1 0x2 SLOAD PUSH3 0x76A700 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x479 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 DUP7 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP5 PUSH0 DUP7 MSTORE DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x4BC SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x927 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x528 JUMPI PUSH1 0x4 SWAP5 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP4 ADD SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x554 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP5 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x56F JUMPI POP PUSH1 0x3 SLOAD PUSH3 0xED4E00 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0xC SUB PUSH2 0x583 JUMPI PUSH1 0x4 SLOAD PUSH4 0x1E13380 PUSH2 0x3FA JUMP JUMPDEST PUSH4 0x506604D7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x5C3 PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH1 0x2 SLOAD SUB PUSH2 0x5F2 JUMPI JUMPDEST POP DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0x5E9 JUMPI JUMPDEST POP DUP1 PUSH1 0x4 SLOAD SUB PUSH2 0x5E4 JUMPI STOP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST PUSH1 0x3 SSTORE DUP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP3 PUSH2 0x5CD JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x631 PUSH2 0x8FB JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x64D JUMPI PUSH2 0x141 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xB63 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x67B PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x694 PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6B5 PUSH2 0x9DE JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x583 JUMPI DUP2 PUSH2 0x6D4 SWAP2 PUSH2 0x927 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x867 JUMPI PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x6F9 PUSH1 0x2 DUP3 ADD SLOAD DUP1 SWAP5 PUSH2 0x954 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x858 JUMPI PUSH1 0x1 SWAP4 PUSH5 0x496CEBB800 PUSH2 0x724 PUSH2 0x734 SWAP6 PUSH2 0x71F PUSH1 0x3 DUP7 SLOAD SWAP7 ADD SLOAD DUP7 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST DIV SWAP5 DUP6 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x207 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x823 JUMPI JUMPDEST POP LT PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x804 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x81D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP4 PUSH2 0x7C7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x850 JUMPI JUMPDEST DUP2 PUSH2 0x83F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDE JUMPI DUP3 SWAP1 MLOAD DUP7 PUSH2 0x78A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x832 JUMP JUMPDEST PUSH4 0xFEA04557 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x6507689F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH2 0x8A0 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xDE JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8EA JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x940 JUMPI PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xDE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xDE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x9EF JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC5 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xEF 0xDD PUSH8 0x691D850ADC9AF2C7 0xA6 SWAP11 0xE4 0xD2 SMOD 0xE BASEFEE DUP16 RETURNDATACOPY PUSH29 0xCE45AB909CE70D3AD3BA64736F6C634300081C00330000000000000000 ",
							"sourceMap": "807:5232:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;1234:31;807:5232;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;4747:26:0;807:5232:7;;;;:::i;:::-;4717:18:0;2475:4;4717:18;;3901:6;807:5232:7;3901:6:0;807:5232:7;;3901:22:0;807:5232:7;3901:6:0;807:5232:7;3901:22:0;807:5232:7;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;807:5232:7;;;;;;;-1:-1:-1;;807:5232:7;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;807:5232:7;;;;;;;2475:4:0;;:::i;:::-;5693:16:7;5689:45;;807:5232;;-1:-1:-1;;;5759:41:7;;-1:-1:-1;;;;;807:5232:7;;;;5759:41;;807:5232;;;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;5759:41;;;;;;;807:5232;5759:41;;;807:5232;5814:8;;5810:42;;807:5232;5810:42;4197:21;;;807:5232;5831:21;807:5232;;5831:21;5759:41;;;;807:5232;5759:41;807:5232;5759:41;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;807:5232;;;;;;;;;5689:45;5718:16;;;807:5232;5718:16;807:5232;;5718:16;807:5232;;;;;;-1:-1:-1;;807:5232:7;;;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;;:::i;:::-;;;;;;;;;;;2954:29:0;807:5232:7;;;;;;-1:-1:-1;807:5232:7;;;;;;-1:-1:-1;807:5232:7;;;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;-1:-1:-1;;;;;807:5232:7;;:::i;:::-;;;;6017:7;807:5232;;;;;;;;;;;;;;;;;;;6017:7;807:5232;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:7;807:5232;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;;;;2227:103:2;;:::i;:::-;2364:11:7;;2360:36;;4656:1;4642:15;;4656:1;;-1:-1:-1;4725:10:7;807:5232;1064:7;4638:396;807:5232;;-1:-1:-1;;;2632:58:7;;2656:10;807:5232;2632:58;;807:5232;2676:4;807:5232;;;;;;;;;;;;2632:58;807:5232;-1:-1:-1;2632:10:7;-1:-1:-1;;;;;807:5232:7;2632:58;;;;;;;807:5232;2632:58;;;4638:396;2704:8;;2700:42;;2656:10;807:5232;;2801:7;807:5232;;;;;;;;;;:::i;:::-;;;;;2826:217;;2894:15;807:5232;;;2826:217;;807:5232;;;;2826:217;;807:5232;;;;2826:217;;;807:5232;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4656:1;807:5232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3060:49;807:5232;2656:10;3060:49;;807:5232;;;;;;;;;;;;;;;;2632:58;;;;807:5232;2632:58;807:5232;2632:58;;;;;;;:::i;:::-;;;;4638:396;4770:1;4756:15;;4770:1;;-1:-1:-1;4656:1:7;807:5232;1119:8;4638:396;;4752:282;4884:2;4870:16;4884:2;;807:5232;;1176:8;4638:396;;4866:168;3419:19;;;807:5232;5004:19;807:5232;;5004:19;2360:36;2384:12;;;807:5232;2384:12;807:5232;;2384:12;807:5232;;;;;;-1:-1:-1;;807:5232:7;;;;;;;;;;2475:4:0;;:::i;:::-;807:5232:7;5267:10;807:5232;5267:19;5263:68;;807:5232;;;5344:10;807:5232;5344:19;5340:68;;807:5232;;;;;5421:21;5417:72;;807:5232;5417:72;807:5232;;;5340:68;5344:10;807:5232;5340:68;;;5263;5267:10;807:5232;5263:68;;;807:5232;;;;;;-1:-1:-1;;807:5232:7;;;;;1271:32;807:5232;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;;:::i;:::-;735:10:4;-1:-1:-1;;;;;807:5232:7;;5421:34:0;5417:102;;5529:37;807:5232:7;;;5529:37:0;:::i;5417:102::-;5478:30;;;807:5232:7;5478:30:0;807:5232:7;;5478:30:0;807:5232:7;;;;;;-1:-1:-1;;807:5232:7;;;;4330:25:0;807:5232:7;;;;:::i;:::-;4300:18:0;2475:4;4300:18;;3901:6;807:5232:7;3901:6:0;807:5232:7;;3901:22:0;807:5232:7;3901:6:0;807:5232:7;3901:22:0;807:5232:7;3810:120:0;;2475:4;4330:25;:::i;807:5232:7:-;;;;;;-1:-1:-1;;807:5232:7;;;;;;2227:103:2;;:::i;:::-;3317:10:7;807:5232;;3309:7;807:5232;;;;;;;3379:31;;;3375:63;;3479:22;;;;:::i;:::-;3515:19;807:5232;3515:19;;807:5232;;;;;;3511:50;;807:5232;3593:24;;807:5232;3620:22;3593:49;3620:22;;;807:5232;3593:49;;;:::i;:::-;3741:15;:28;3737:54;;807:5232;;4018:16;3975:38;4106:18;807:5232;3975:25;3987:13;807:5232;;3987:13;;807:5232;3975:25;;:::i;:::-;:38;:::i;:::-;807:5232;;;;;;;;;;4106:18;:::i;:::-;807:5232;;-1:-1:-1;;;4138:35:7;;4167:4;807:5232;4138:35;;807:5232;4138:10;-1:-1:-1;;;;;807:5232:7;;;;4138:35;807:5232;;4138:35;;;;;;;;807:5232;4138:35;;;807:5232;4138:50;;4134:84;;807:5232;;-1:-1:-1;;;4244:45:7;;3317:10;807:5232;4244:45;;807:5232;;;;;;;;;;;;;;;;-1:-1:-1;;4244:45:7;;;;;;;807:5232;4244:45;;;807:5232;4303:8;;4299:42;;807:5232;;;;;;;;;4357:41;807:5232;3317:10;4357:41;;807:5232;;;;4244:45;;;;807:5232;4244:45;807:5232;4244:45;;;;;;;:::i;:::-;;;;4138:35;;;;807:5232;4138:35;;807:5232;4138:35;;;;;;807:5232;4138:35;;;:::i;:::-;;;807:5232;;;;;;;4138:35;;;;;;-1:-1:-1;4138:35:7;;3737:54;3778:13;;;807:5232;3778:13;807:5232;;3778:13;3511:50;3543:18;;;807:5232;3543:18;807:5232;;3543:18;807:5232;;;;;;-1:-1:-1;;807:5232:7;;;;;;;;3901:6:0;807:5232:7;3901:6:0;807:5232:7;;3901:22:0;807:5232:7;3901:6:0;807:5232:7;3901:22:0;807:5232:7;3810:120:0;;807:5232:7;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;807:5232:7;;;;;;;2673:87:0;-1:-1:-1;;;862:40:5;;-1:-1:-1;2673:87:0;;;807:5232:7;;;;-1:-1:-1;;;;;807:5232:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;807:5232:7;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;807:5232:7;;;-1:-1:-1;807:5232:7;;;;;-1:-1:-1;807:5232:7;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;2336:287:2:-;1759:1;2468:7;807:5232:7;2468:19:2;1759:1;;;2468:7;807:5232:7;2336:287:2:o;1759:1::-;807:5232:7;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;807:5232:7;1759:1:2;807:5232:7;;;1759:1:2;;;;3199:103:0;735:10:4;2954:6:0;807:5232:7;;;;;;;;;;;;3519:23:0;3515:108;;3199:103::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:4;3565:47:0;807:5232:7;908:23;807:5232;;;2954:6:0;3565:47;3199:103;2954:6;807:5232:7;;;;;;;;;;;735:10:4;807:5232:7;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:4;3565:47:0;807:5232:7;;;;2954:6:0;3565:47;6179:316;807:5232:7;;;;;;;;;;;;-1:-1:-1;;;;;807:5232:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;807:5232:7;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;;;735:10:4;;807:5232:7;;6370:40:0;;807:5232:7;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;;807:5232:7;6466:12:0;:::o;6730:317::-;807:5232:7;;;;;;;;;;;;-1:-1:-1;;;;;807:5232:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;807:5232:7;;;;;;;;;;;;;;;-1:-1:-1;;807:5232:7;;;735:10:4;;807:5232:7;;6922:40:0;;807:5232:7;6922:40:0;807:5232:7;6976:11:0;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "619400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "372",
								"apy12Months()": "2561",
								"apy3Months()": "2542",
								"apy6Months()": "2366",
								"getRoleAdmin(bytes32)": "2363",
								"getStakes(address)": "infinite",
								"grantRole(bytes32,address)": "33333",
								"hasRole(bytes32,address)": "2682",
								"renounceRole(bytes32,address)": "28923",
								"rescueTokens(address,uint256,address)": "infinite",
								"revokeRole(bytes32,address)": "33528",
								"setAPYs(uint256,uint256,uint256)": "75208",
								"stake(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "270",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_getLockInfo(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 6039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 6039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1265,
									"name": "PUSH",
									"source": 7,
									"value": "1F4"
								},
								{
									"begin": 1262,
									"end": 1265,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "3E8"
								},
								{
									"begin": 1299,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1934,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1905,
									"end": 1959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1905,
									"end": 1959,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 1993,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2071,
									"end": 2101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "617"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1959,
									"name": "PUSH",
									"source": 7,
									"value": "E6C4247B"
								},
								{
									"begin": 1943,
									"end": 1959,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1943,
									"end": 1959,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2018,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2018,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 908,
									"end": 931,
									"name": "PUSH",
									"source": 7,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 908,
									"end": 931,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 807,
									"end": 6039,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdefdd67691d850adc9af2c7a69ae4d2070e488f3e7cce45ab909ce70d3ad3ba64736f6c634300081c0033",
									".code": [
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "5BF42FB4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "765EF4CC"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "7B0472F0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "7BA6F458"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "B37FD190"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "F09823C3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FBCACCA7"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5693,
											"end": 5709,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5689,
											"end": 5734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5822,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5810,
											"end": 5852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5810,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "1E9ACF17"
										},
										{
											"begin": 4197,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "E3"
										},
										{
											"begin": 4197,
											"end": 4218,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5852,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5759,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5759,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5759,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 5734,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5689,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "E6C4247B"
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6024,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6024,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6024,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2375,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2360,
											"end": 2396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4642,
											"end": 4657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4735,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "76A700"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2666,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2680,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2642,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2712,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2666,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "10000000000000000"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2656,
											"end": 2666,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2632,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2632,
											"end": 2690,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4771,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4756,
											"end": 4771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4771,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4770,
											"end": 4771,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "PUSH",
											"source": 7,
											"value": "ED4E00"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4752,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4870,
											"end": 4886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4638,
											"end": 5034,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4866,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4866,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3438,
											"name": "PUSH",
											"source": 7,
											"value": "506604D7"
										},
										{
											"begin": 3419,
											"end": 3438,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3419,
											"end": 3438,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5023,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2396,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2360,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "1F2A2005"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5277,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5286,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5344,
											"end": 5354,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5442,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5417,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5417,
											"end": 5489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5417,
											"end": 5489,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5417,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5344,
											"end": 5354,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5340,
											"end": 5408,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5277,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5263,
											"end": 5331,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3327,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3375,
											"end": 3438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3479,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3511,
											"end": 3561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3593,
											"end": 3617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3642,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3620,
											"end": 3642,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3593,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 3769,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3737,
											"end": 3791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "496CEBB800"
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3987,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4000,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 4000,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3975,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 4000,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3975,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3975,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4106,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4188,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4134,
											"end": 4218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3327,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4311,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4299,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4299,
											"end": 4341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4398,
											"name": "PUSH",
											"source": 7,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3317,
											"end": 3327,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4398,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4398,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4244,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4244,
											"end": 4289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4138,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4138,
											"end": 4173,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3791,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3737,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "FEA04557"
										},
										{
											"begin": 3778,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3778,
											"end": 3791,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3511,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "6507689F"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 931,
											"name": "PUSH",
											"source": 7,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 807,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								},
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyStaking_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"apy12Months()": "fbcacca7",
							"apy3Months()": "f09823c3",
							"apy6Months()": "5bf42fb4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getStakes(address)": "7ba6f458",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"rescueTokens(address,uint256,address)": "b37fd190",
							"revokeRole(bytes32,address)": "d547741f",
							"setAPYs(uint256,uint256,uint256)": "765ef4cc",
							"stake(uint256,uint256)": "7b0472f0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 389,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 629,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "apy3Months",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 632,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "apy6Months",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 635,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "apy12Months",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 652,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_stakes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_struct(StakeInfo)646_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakeInfo)646_storage)dyn_storage": {
								"base": "t_struct(StakeInfo)646_storage",
								"encoding": "dynamic_array",
								"label": "struct WallyStaking.StakeInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(StakeInfo)646_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WallyStaking.StakeInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(StakeInfo)646_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(StakeInfo)646_storage": {
								"encoding": "inplace",
								"label": "struct WallyStaking.StakeInfo",
								"members": [
									{
										"astId": 637,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 639,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "startTimestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 641,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "lockDuration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 643,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "apy",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 645,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "withdrawn",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"remix_accounts.sol": {
				"TestsAccounts": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_3, eq(0xce88b145, shr(0xe0, calldataload(0x00))))\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_5, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x01e0\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_7\n      jumpi\n      0x40\n      mstore\n      calldatasize\n      dup3\n      calldatacopy\n        /* \"remix_accounts.sol\":216:258  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      dup2\n      mstore\n        /* \"remix_accounts.sol\":277:319  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":338:380  0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db */\n      0x4b20993bc481177ec7e8f571cecae8a9e22c02db\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":399:441  0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n      0x78731d3ca6b7e34ac0f824c42a7cc18a495cabab\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":460:502  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n      0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x80\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":521:563  0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n      0x17f6ad8ef982297579c203069c1dbffe4348c372\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":582:624  0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678 */\n      0x5c6b0f7bf3e7ce046039bd8fabdfd3f9f5021678\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":643:685  0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7 */\n      0x03c6fced478cbbc9a4fab34ef9f40767739d1ff7\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0xe0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":704:746  0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C */\n      0x1ae0ea34a72d944a8c7603ffb3ec30a6669e454c\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0100\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":765:807  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n      0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0120\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":827:869  0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c */\n      0xca35b7d915458ef540ade6068dfe2f44e8fa733c\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0140\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":889:931  0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C */\n      0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0160\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":951:993  0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB */\n      0x4b0897b0513fdc7c541b6d9d7e929c4e5364d2db\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x0180\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":1013:1055  0x583031D1113aD414F02576BD6afaBfb302140225 */\n      0x583031d1113ad414f02576bd6afabfb302140225\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x01a0\n      dup3\n      add\n      mstore\n        /* \"remix_accounts.sol\":1075:1117  0xdD870fA1b7C4700F2BD7f44238821C26f7392148 */\n      0xdd870fa1b7c4700f2bd7f44238821c26f7392148\n        /* \"remix_accounts.sol\":71:1150  library TestsAccounts {... */\n      0x01c0\n      dup3\n      add\n      mstore\n      0x0f\n      dup3\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_9:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_7:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601957610264908161001e823930815050f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63ce88b14514610024575f80fd5b602036600319011261022a576004356101e06040519080820182811067ffffffffffffffff82111761021657604052368237735b38da6a701c568545dcfcb03fcb875f56beddc4815273ab8483f64d9c6d1ecf9b849ae677dd3315835cb26020820152734b20993bc481177ec7e8f571cecae8a9e22c02db60408201527378731d3ca6b7e34ac0f824c42a7cc18a495cabab606082015273617f2e2fd72fd9d5503197092ac168c91465e7f260808201527317f6ad8ef982297579c203069c1dbffe4348c37260a0820152735c6b0f7bf3e7ce046039bd8fabdfd3f9f502167860c08201527303c6fced478cbbc9a4fab34ef9f40767739d1ff760e0820152731ae0ea34a72d944a8c7603ffb3ec30a6669e454c610100820152730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc61012082015273ca35b7d915458ef540ade6068dfe2f44e8fa733c6101408201527314723a09acff6d2a60dcdf7aa4aff308fddc160c610160820152734b0897b0513fdc7c541b6d9d7e929c4e5364d2db61018082015273583031d1113ad414f02576bd6afabfb3021402256101a082015273dd870fa1b7c4700f2bd7f44238821c26f73921486101c0820152600f8210156102025760209160051b0160018060a01b03905116604051908152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f80fdfea26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH2 0x264 SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xCE88B145 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1E0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x216 JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP3 CALLDATACOPY PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 DUP2 MSTORE PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x5C6B0F7BF3E7CE046039BD8FABDFD3F9F5021678 PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0x3C6FCED478CBBC9A4FAB34EF9F40767739D1FF7 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x1AE0EA34A72D944A8C7603FFB3EC30A6669E454C PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x583031D1113AD414F02576BD6AFABFB302140225 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xF DUP3 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xCE SELFBALANCE OR 0xEA SHL MSIZE PUSH23 0xD7A34F434CC0D41853ECA9E4C45F56BD25CE74DA6780B6 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:1079:8:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c63ce88b14514610024575f80fd5b602036600319011261022a576004356101e06040519080820182811067ffffffffffffffff82111761021657604052368237735b38da6a701c568545dcfcb03fcb875f56beddc4815273ab8483f64d9c6d1ecf9b849ae677dd3315835cb26020820152734b20993bc481177ec7e8f571cecae8a9e22c02db60408201527378731d3ca6b7e34ac0f824c42a7cc18a495cabab606082015273617f2e2fd72fd9d5503197092ac168c91465e7f260808201527317f6ad8ef982297579c203069c1dbffe4348c37260a0820152735c6b0f7bf3e7ce046039bd8fabdfd3f9f502167860c08201527303c6fced478cbbc9a4fab34ef9f40767739d1ff760e0820152731ae0ea34a72d944a8c7603ffb3ec30a6669e454c610100820152730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc61012082015273ca35b7d915458ef540ade6068dfe2f44e8fa733c6101408201527314723a09acff6d2a60dcdf7aa4aff308fddc160c610160820152734b0897b0513fdc7c541b6d9d7e929c4e5364d2db61018082015273583031d1113ad414f02576bd6afabfb3021402256101a082015273dd870fa1b7c4700f2bd7f44238821c26f73921486101c0820152600f8210156102025760209160051b0160018060a01b03905116604051908152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f80fdfea26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xCE88B145 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1E0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x216 JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP3 CALLDATACOPY PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 DUP2 MSTORE PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x5C6B0F7BF3E7CE046039BD8FABDFD3F9F5021678 PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0x3C6FCED478CBBC9A4FAB34EF9F40767739D1FF7 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x1AE0EA34A72D944A8C7603FFB3EC30A6669E454C PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x583031D1113AD414F02576BD6AFABFB302140225 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xF DUP3 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xCE SELFBALANCE OR 0xEA SHL MSIZE PUSH23 0xD7A34F434CC0D41853ECA9E4C45F56BD25CE74DA6780B6 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:1079:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;71:1079:8;;;;;;;;;;;;;;;;;;;;;;;;;;;216:42;71:1079;;277:42;71:1079;;;;338:42;71:1079;;;;399:42;71:1079;;;;460:42;71:1079;;;;521:42;71:1079;;;;582:42;71:1079;;;;643:42;71:1079;;;;704:42;71:1079;;;;765:42;71:1079;;;;827:42;71:1079;;;;889:42;71:1079;;;;951:42;71:1079;;;;1013:42;71:1079;;;;1075:42;71:1079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getAccount(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 71,
									"end": 1150,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ece4717ea1b5976d7a34f434cc0d41853eca9e4c45f56bd25ce74da6780b6d564736f6c634300081c0033",
									".code": [
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "CE88B145"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 216,
											"end": 258,
											"name": "PUSH",
											"source": 8,
											"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 277,
											"end": 319,
											"name": "PUSH",
											"source": 8,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 338,
											"end": 380,
											"name": "PUSH",
											"source": 8,
											"value": "4B20993BC481177EC7E8F571CECAE8A9E22C02DB"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "78731D3CA6B7E34AC0F824C42A7CC18A495CABAB"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 460,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 521,
											"end": 563,
											"name": "PUSH",
											"source": 8,
											"value": "17F6AD8EF982297579C203069C1DBFFE4348C372"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 582,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "5C6B0F7BF3E7CE046039BD8FABDFD3F9F5021678"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 643,
											"end": 685,
											"name": "PUSH",
											"source": 8,
											"value": "3C6FCED478CBBC9A4FAB34EF9F40767739D1FF7"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 704,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "1AE0EA34A72D944A8C7603FFB3EC30A6669E454C"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 765,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 827,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "CA35B7D915458EF540ADE6068DFE2F44E8FA733C"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 889,
											"end": 931,
											"name": "PUSH",
											"source": 8,
											"value": "14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 951,
											"end": 993,
											"name": "PUSH",
											"source": 8,
											"value": "4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1055,
											"name": "PUSH",
											"source": 8,
											"value": "583031D1113AD414F02576BD6AFABFB302140225"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "1A0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1075,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "DD870FA1B7C4700F2BD7F44238821C26F7392148"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "1C0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 71,
											"end": 1150,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyStaking_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getAccount(uint256)": "ce88b145"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"remix_tests.sol": {
				"Assert": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								}
							],
							"name": "AssertionEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "returned",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "expected",
									"type": "address"
								}
							],
							"name": "AssertionEventAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "returned",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "expected",
									"type": "bool"
								}
							],
							"name": "AssertionEventBool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "returned",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "expected",
									"type": "bytes32"
								}
							],
							"name": "AssertionEventBytes32",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "returned",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "expected",
									"type": "int256"
								}
							],
							"name": "AssertionEventInt",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "returned",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								}
							],
							"name": "AssertionEventIntUint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "returned",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "expected",
									"type": "string"
								}
							],
							"name": "AssertionEventString",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "returned",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								}
							],
							"name": "AssertionEventUint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "methodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "returned",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "expected",
									"type": "int256"
								}
							],
							"name": "AssertionEventUintInt",
							"type": "event"
						}
					],
					"evm": {
						"assembly": "    /* \"remix_tests.sol\":71:6823  library Assert {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mstore(0x40, 0x80)\n      eq(immutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\"), address)\n      jumpi(tag_12, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_12:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0897e4c7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x18211bfb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x39df137f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x44781a00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x44b7f248\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x49f97939\n      eq\n      tag_24\n      jumpi\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      dup1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      0x4e3e4035\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      eq\n      tag_26\n      jumpi\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup1\n      0x556fe562\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x561015e2\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x767392b3\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x77c6d463\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x8c45cb97\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x9c0b4336\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xa079f1a3\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xabcd7960\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xaea88952\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xb8f28531\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xbfba5dd6\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xe8c2cb16\n      eq\n      tag_50\n      jumpi\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      dup1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      0xea79dd79\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      eq\n      tag_52\n      jumpi\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      0xf5bae6b6\n      eq\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      tag_56\n      jumpi\n      0x20\n      tag_58\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_59\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_59:\n        /* \"remix_tests.sol\":1707:1713  a == b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_58:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x05\n      dup2\n      mstore\n      shl(0xda, 0x195c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_60:\n      swap2\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      mstore\n        /* \"remix_tests.sol\":1725:1774  AssertionEventInt(result, message, \"equal\", a, b) */\n      sub\n      swap1\n      log1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_56:\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n        /* \"remix_tests.sol\":2679:2732  AssertionEventBytes32(result, message, \"equal\", a, b) */\n      0x80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd28\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_59\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_50:\n      pop\n      tag_56\n      jumpi\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      0x20\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_68\n        /* \"remix_tests.sol\":2936:2988  AssertionEventString(result, message, \"equal\", a, b) */\n      0x772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_69\n      tag_70\n      calldatasize\n      tag_5\n      jump\t// in\n    tag_70:\n      swap2\n      swap5\n      swap1\n      tag_71\n      mload(0x40)\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      dup9\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      tag_72\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup11\n      dup3\n      dup2\n      dup13\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      sub\n      add\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      not(0x1f)\n        /* \"remix_tests.sol\":2869:2888  abi.encodePacked(a) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_72:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":2859:2889  keccak256(abi.encodePacked(a)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      dup10\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      tag_73\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup12\n      dup3\n      dup8\n      mload\n      dup1\n      dup4\n      dup11\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      sub\n      add\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      not(0x1f)\n        /* \"remix_tests.sol\":2903:2922  abi.encodePacked(b) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_73:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":2893:2923  keccak256(abi.encodePacked(b)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":2859:2923  keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)) */\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap7\n      tag_74\n      mload(0x40)\n      swap7\n      dup8\n      swap7\n      dup11\n      dup9\n      mstore\n      0xa0\n      dup13\n      dup10\n      add\n      mstore\n      0xa0\n      dup9\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_69:\n      dup7\n      dup2\n      sub\n      0x40\n      dup9\n      add\n      mstore\n      0x05\n      dup2\n      mstore\n      shl(0xda, 0x195c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_74:\n      swap1\n      dup6\n      dup3\n      sub\n      0x60\n      dup8\n      add\n      mstore\n      tag_7\n      jump\t// in\n    tag_71:\n      swap1\n      dup4\n      dup3\n      sub\n      0x80\n      dup6\n      add\n      mstore\n      tag_7\n      jump\t// in\n    tag_68:\n        /* \"remix_tests.sol\":2936:2988  AssertionEventString(result, message, \"equal\", a, b) */\n      sub\n      swap1\n      log1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n        /* \"remix_tests.sol\":2494:2547  AssertionEventAddress(result, message, \"equal\", a, b) */\n      0xac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_78\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      swap1\n      swap3\n      and\n        /* \"remix_tests.sol\":2476:2482  a == b */\n      dup4\n      dup2\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup1\n      dup5\n      mstore\n      0xa0\n      dup9\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n        /* \"remix_tests.sol\":2476:2482  a == b */\n      swap1\n      swap7\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap4\n      swap5\n      dup6\n      swap5\n      swap1\n      swap4\n      tag_60\n      swap3\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_46:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n        /* \"remix_tests.sol\":4096:4152  AssertionEventAddress(result, message, \"notEqual\", a, b) */\n      0xac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_83\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      swap1\n      swap3\n      and\n        /* \"remix_tests.sol\":4078:4084  a != b */\n      dup4\n      dup2\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup1\n      dup5\n      mstore\n      0xa0\n      dup9\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n        /* \"remix_tests.sol\":4078:4084  a != b */\n      swap1\n      swap7\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap4\n      swap5\n      dup6\n      swap5\n      swap1\n      swap4\n      tag_60\n      swap3\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_82:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc2, 0x1b9bdd115c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_44:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_88\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_88:\n        /* \"remix_tests.sol\":5891:5896  a < b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      lt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_87:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x0a\n      dup2\n      mstore\n      shl(0xb1, 0x3632b9b9b2b92a3430b7)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_42:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_59\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_40:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_98\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_98:\n        /* \"remix_tests.sol\":4781:4786  a > b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      gt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_97:\n      dup5\n      dup2\n      sub\n      0x40\n      dup7\n      add\n      mstore\n      0x0b\n      dup2\n      mstore\n      shl(0xa9, 0x33b932b0ba32b92a3430b7)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_38:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_103\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_103:\n        /* \"remix_tests.sol\":4972:4977  a > b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      sgt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_36:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n        /* \"remix_tests.sol\":5344:5403  AssertionEventUintInt(result, message, \"greaterThan\", a, b) */\n      0x14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe8\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_108\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_108:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":5202:5212  b < int(0) */\n      dup3\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"remix_tests.sol\":5280:5284  true */\n      0x01\n        /* \"remix_tests.sol\":5199:5334  if(b < int(0)) {... */\n      swap2\n    tag_111:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n        /* \"remix_tests.sol\":5199:5334  if(b < int(0)) {... */\n    tag_109:\n        /* \"remix_tests.sol\":5315:5326  a > uint(b) */\n      dup2\n      dup2\n      gt\n        /* \"remix_tests.sol\":5199:5334  if(b < int(0)) {... */\n      swap2\n      jump(tag_111)\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n    tag_34:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n        /* \"remix_tests.sol\":6758:6816  AssertionEventIntUint(result, message, \"lesserThan\", a, b) */\n      0x1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_116\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_116:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":6618:6628  a < int(0) */\n      dup2\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"remix_tests.sol\":6694:6698  true */\n      0x01\n        /* \"remix_tests.sol\":6615:6748  if(a < int(0)) {... */\n      swap2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n        /* \"remix_tests.sol\":6615:6748  if(a < int(0)) {... */\n    tag_117:\n        /* \"remix_tests.sol\":6729:6740  uint(a) < b */\n      dup2\n      dup2\n      lt\n        /* \"remix_tests.sol\":6615:6748  if(a < int(0)) {... */\n      swap2\n      jump(tag_111)\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n    tag_32:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_58\n        /* \"remix_tests.sol\":1900:1950  AssertionEventBool(result, message, \"equal\", a, b) */\n      0xf7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea5\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_124\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_124:\n      swap1\n      swap4\n      swap2\n      swap4\n      iszero\n      iszero\n      swap4\n      iszero\n      iszero\n        /* \"remix_tests.sol\":1882:1888  a == b */\n      dup5\n      dup2\n      eq\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_30:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n      mload(0x00)\n      codecopy(0x00, data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_129\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_129:\n        /* \"remix_tests.sol\":3105:3111  a != b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_28:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n        /* \"remix_tests.sol\":4287:4343  AssertionEventBytes32(result, message, \"notEqual\", a, b) */\n      0x80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd28\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_129\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_26:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_129\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_24:\n      pop\n      tag_56\n      jumpi\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      0x20\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_68\n        /* \"remix_tests.sol\":4548:4603  AssertionEventString(result, message, \"notEqual\", a, b) */\n      0x772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_144\n      tag_145\n      calldatasize\n      tag_5\n      jump\t// in\n    tag_145:\n      swap2\n      swap5\n      swap1\n      tag_71\n      mload(0x40)\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      dup9\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      tag_147\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup11\n      dup3\n      dup2\n      dup13\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      sub\n      add\n      not(0x1f)\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_147:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":4472:4502  keccak256(abi.encodePacked(a)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      dup10\n      dup2\n      add\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap1\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      tag_148\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup12\n      dup3\n      dup8\n      mload\n      dup1\n      dup4\n      dup11\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      sub\n      add\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      not(0x1f)\n        /* \"remix_tests.sol\":4516:4535  abi.encodePacked(b) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_148:\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload\n        /* \"remix_tests.sol\":4506:4536  keccak256(abi.encodePacked(b)) */\n      swap1\n      keccak256\n        /* \"remix_tests.sol\":4472:4536  keccak256(abi.encodePacked(a)) != keccak256(abi.encodePacked(b)) */\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap7\n      tag_74\n      mload(0x40)\n      swap7\n      dup8\n      swap7\n      dup11\n      dup9\n      mstore\n      0xa0\n      dup13\n      dup10\n      add\n      mstore\n      0xa0\n      dup9\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_144:\n      dup7\n      dup2\n      sub\n      0x40\n      dup9\n      add\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc2, 0x1b9bdd115c5d585b)\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      add\n      swap1\n      jump\n    tag_22:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n      mload(0x00)\n      codecopy(0x00, data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      tag_153\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_153:\n        /* \"remix_tests.sol\":6080:6085  a < b */\n      swap1\n      swap4\n      swap2\n      dup5\n      dup2\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_20:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_82\n        /* \"remix_tests.sol\":3490:3543  AssertionEventBool(result, message, \"notEqual\", a, b) */\n      0xf7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea5\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_158\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_158:\n      swap1\n      swap4\n      swap2\n      swap4\n      iszero\n      iszero\n      swap4\n      iszero\n      iszero\n        /* \"remix_tests.sol\":3472:3478  a != b */\n      dup5\n      dup2\n      eq\n      iszero\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap5\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_18:\n      pop\n      tag_56\n      jumpi\n      jumpi(tag_56, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_56\n      jumpi\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n        /* \"remix_tests.sol\":1376:1413  AssertionEvent(result, message, \"ok\") */\n      0xbbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_168\n      0x20\n      swap4\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_168:\n      0x40\n      tag_169\n      dup2\n      mload\n      swap3\n      dup6\n      dup5\n      mstore\n      0x60\n      dup8\n      dup6\n      add\n      mstore\n      0x60\n      dup5\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_169:\n      shl(0xf0, 0x6f6b)\n      dup7\n      dup5\n      dup4\n      sub\n      swap3\n      dup4\n      dup6\n      dup8\n      add\n      mstore\n      0x02\n      dup2\n      mstore\n      add\n      mstore\n        /* \"remix_tests.sol\":1376:1413  AssertionEvent(result, message, \"ok\") */\n      add\n      swap1\n      log1\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_16:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_87\n        /* \"remix_tests.sol\":6449:6507  AssertionEventUintInt(result, message, \"lesserThan\", a, b) */\n      0x14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe8\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_173\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_173:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":6308:6318  b < int(0) */\n      dup3\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_117\n      jumpi\n      0x00\n        /* \"remix_tests.sol\":6305:6439  if(b < int(0)) {... */\n      swap2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_14:\n      pop\n      tag_56\n      jumpi\n      0x20\n      tag_97\n        /* \"remix_tests.sol\":5657:5716  AssertionEventIntUint(result, message, \"greaterThan\", a, b) */\n      0x1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_181\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_181:\n      swap4\n      swap2\n      0x00\n        /* \"remix_tests.sol\":5514:5524  a < int(0) */\n      dup2\n      slt\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      iszero\n      tag_109\n      jumpi\n      0x00\n        /* \"remix_tests.sol\":5511:5647  if(a < int(0)) {... */\n      swap2\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      tag_60\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      iszero\n      iszero\n      swap8\n      dup9\n      dup7\n      mstore\n      0xa0\n      dup11\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_1:\n      swap1\n      0x1f\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      dup1\n      not\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_186\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_186:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_56\n      jumpi\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_186\n      jumpi\n      mload(0x40)\n      swap3\n      tag_192\n        /* \"remix_tests.sol\":4482:4501  abi.encodePacked(a) */\n      0x1f\n        /* \"remix_tests.sol\":71:6823  library Assert {... */\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_1\n      jump\t// in\n    tag_192:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_56\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_3:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      swap2\n      calldataload(0x24)\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_199:\n      swap1\n      jump\t// out\n    tag_4:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x24)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_5:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_56\n      jumpi\n      dup2\n      tag_213\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_213:\n      swap2\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_56\n      jumpi\n      dup3\n      tag_216\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_216:\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_6:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_56\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_56\n      jumpi\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_56\n      jumpi\n      tag_199\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_7:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    stop\n    data_05d1875a4b2144aa064d64cc6831013a560b60cc15b3d1a5f05a418df8f3a0b5 06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151\n    data_cdfa9c80a279736fa0bd12a49d463eefcfcbef1dd9d54fc2225095fc0a165ce2 968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1a\n\n    auxdata: 0xa2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601b57610c0090816100208239308160070152f35b5f80fdfe6080604052307f0000000000000000000000000000000000000000000000000000000000000000146004361015610034575f80fd5b5f3560e01c80630897e4c71461094257806318211bfb146108e357806339df137f1461084557806344781a00146107e757806344b7f248146107a357806349f97939146106c85780634e3e4035146106a7578063556fe56214610673578063561015e21461062e578063767392b3146105d157806377c6d463146105685780638c45cb97146104fe5780639c0b4336146104ba578063a079f1a314610450578063abcd79601461042f578063aea88952146103c6578063b8f285311461033a578063bfba5dd6146102d2578063e8c2cb16146101d4578063ea79dd79146101a05763f5bae6b614610123575f80fd5b61019c5760206101665f516020610b8b5f395f51905f5261014336610a2d565b9093918481149461018660405194859488865260a08a87015260a0860190610b66565b84810360408601526005815264195c5d585b60da1b602082015260400190565b91606084015260808301520390a1604051908152f35b5f80fd5b5061019c5760206101667f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861014336610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f61028b61020b36610aa8565b9194906102b96040518881019061023d8a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061026a8b82875180838a01875e81015f838201520301601f1981018352826109a1565b51902014966102ab6040519687968a885260a08c89015260a0880190610b66565b86810360408801526005815264195c5d585b60da1b602082015260400190565b908582036060870152610b66565b908382036080850152610b66565b0390a1604051908152f35b5061019c5760206101667fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61030636610b13565b6040516001600160a01b039384169390921683811480845260a0888501819052909693948594909361018692860190610b66565b5061019c5760206103a37fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61036e36610b13565b6040516001600160a01b03938416939092168381141580845260a0888501819052909693948594909361018692860190610b66565b848103604086015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610bab5f395f51905f526103e736610a2d565b9093918481109461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600a8152693632b9b9b2b92a3430b760b11b602082015260400190565b5061019c5760206101665f516020610bab5f395f51905f5261014336610a2d565b5061019c5760206104945f516020610bab5f395f51905f5261047136610a2d565b9093918481119461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600b81526a33b932b0ba32b92a3430b760a91b602082015260400190565b5061019c5760206104945f516020610b8b5f395f51905f526104db36610a2d565b9093918481139461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206104947f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861053236610a2d565b93915f82121561055f576001915b61018660405194859415159788865260a08a87015260a0860190610b66565b81811191610540565b5061019c57602061040a7f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261059c36610a2d565b93915f8112156105c85760019161018660405194859415159788865260a08a87015260a0860190610b66565b81811091610540565b5061019c5760206101667ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561060536610a63565b9093919315159315158481149461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a35f516020610bab5f395f51905f5261064f36610a2d565b909391848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861064f36610a2d565b5061019c5760206103a35f516020610b8b5f395f51905f5261064f36610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f6107806106ff36610aa8565b9194906102b9604051888101906107318a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061075e8b82875180838a01875e81015f838201520301601f1981018352826109a1565b5190201415966102ab6040519687968a885260a08c89015260a0880190610b66565b868103604088015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610b8b5f395f51905f526107c436610a2d565b9093918481129461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561081b36610a63565b909391931515931515848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c57604036600319011261019c5760043580151580910361019c576024359067ffffffffffffffff821161019c577fbbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f16108a760209336906004016109d7565b60406108c28151928584526060878501526060840190610b66565b616f6b60f01b868483039283858701526002815201520190a1604051908152f35b5061019c57602061040a7f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861091736610a2d565b93915f8212156105c8575f9161018660405194859415159788865260a08a87015260a0860190610b66565b5061019c5760206104947f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261097636610a2d565b93915f81121561055f575f9161018660405194859415159788865260a08a87015260a0860190610b66565b90601f8019910116810190811067ffffffffffffffff8211176109c357604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561019c5780359067ffffffffffffffff82116109c35760405192610a0c601f8401601f1916602001856109a1565b8284526020838301011161019c57815f926020809301838601378301015290565b606060031982011261019c5760043591602435916044359067ffffffffffffffff821161019c57610a60916004016109d7565b90565b606060031982011261019c57600435801515810361019c5791602435801515810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c5760043567ffffffffffffffff811161019c5781610ad3916004016109d7565b9160243567ffffffffffffffff811161019c5782610af3916004016109d7565b916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c576004356001600160a01b038116810361019c57916024356001600160a01b038116810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b805180835260209291819084018484015e5f828201840152601f01601f191601019056fe06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1aa2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI PUSH2 0xC00 SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY ADDRESS DUP2 PUSH1 0x7 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE ADDRESS PUSH32 0x0 EQ PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x34 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x897E4C7 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0x18211BFB EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x39DF137F EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0x44781A00 EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0x44B7F248 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0x49F97939 EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0x4E3E4035 EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x556FE562 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x561015E2 EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x767392B3 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x77C6D463 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x8C45CB97 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9C0B4336 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xA079F1A3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xABCD7960 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xAEA88952 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xB8F28531 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xBFBA5DD6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE8C2CB16 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xEA79DD79 EQ PUSH2 0x1A0 JUMPI PUSH4 0xF5BAE6B6 EQ PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x28B PUSH2 0x20B CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x23D DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x26A DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x306 CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x36E CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ ISZERO DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x3E7 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 LT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x3632B9B9B2B92A3430B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x471 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 GT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x33B932B0BA32B92A3430B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x4DB CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SGT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x532 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x55F JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 GT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x59C CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x1 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 LT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x605 CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x780 PUSH2 0x6FF CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x731 DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x75E DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ ISZERO SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x7C4 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SLT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x81B CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x19C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH32 0xBBF85D637D70CCACC5B8EDB602351BA3DEC7BC069D69235C3529EF3F453D01F1 PUSH2 0x8A7 PUSH1 0x20 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x8C2 DUP2 MLOAD SWAP3 DUP6 DUP5 MSTORE PUSH1 0x60 DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x6F6B PUSH1 0xF0 SHL DUP7 DUP5 DUP4 SUB SWAP3 DUP4 DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP2 MSTORE ADD MSTORE ADD SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x917 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x976 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x55F JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x19C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA0C PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x19C JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP2 PUSH2 0xAD3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP3 PUSH2 0xAF3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP INVALID MOD 0xC5 REVERT SGT PUSH7 0x1D229189D43A6A CODESIZE 0xE8 PUSH8 0x21AF51ED7065A4B6 DELEGATECALL RETURNDATASIZE LOG4 0xBD DUP13 0xD1 0xB1 DUP2 MLOAD SWAP7 DUP12 PUSH27 0x5D7C5BCC2E8F9F583456A62C310B1B4E509906C1C1BB1A5AFF86CC 0x1E BYTE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x6DC2 0xD9 SWAP2 JUMPDEST INVALID PUSH24 0x8101A0FE62FE39B195D6BEE4F239FF9246FDDD87C1BC3073 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:6752:9:-:0;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_addresst_addresst_string": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_boolt_boolt_string": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_int256t_uint256t_string": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_string": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_stringt_stringt_string": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_encode_string": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_stringliteral": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_50a9": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_6eac": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_9221": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"library_deploy_address": [
									{
										"length": 32,
										"start": 7
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052307f0000000000000000000000000000000000000000000000000000000000000000146004361015610034575f80fd5b5f3560e01c80630897e4c71461094257806318211bfb146108e357806339df137f1461084557806344781a00146107e757806344b7f248146107a357806349f97939146106c85780634e3e4035146106a7578063556fe56214610673578063561015e21461062e578063767392b3146105d157806377c6d463146105685780638c45cb97146104fe5780639c0b4336146104ba578063a079f1a314610450578063abcd79601461042f578063aea88952146103c6578063b8f285311461033a578063bfba5dd6146102d2578063e8c2cb16146101d4578063ea79dd79146101a05763f5bae6b614610123575f80fd5b61019c5760206101665f516020610b8b5f395f51905f5261014336610a2d565b9093918481149461018660405194859488865260a08a87015260a0860190610b66565b84810360408601526005815264195c5d585b60da1b602082015260400190565b91606084015260808301520390a1604051908152f35b5f80fd5b5061019c5760206101667f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861014336610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f61028b61020b36610aa8565b9194906102b96040518881019061023d8a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061026a8b82875180838a01875e81015f838201520301601f1981018352826109a1565b51902014966102ab6040519687968a885260a08c89015260a0880190610b66565b86810360408801526005815264195c5d585b60da1b602082015260400190565b908582036060870152610b66565b908382036080850152610b66565b0390a1604051908152f35b5061019c5760206101667fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61030636610b13565b6040516001600160a01b039384169390921683811480845260a0888501819052909693948594909361018692860190610b66565b5061019c5760206103a37fac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b61036e36610b13565b6040516001600160a01b03938416939092168381141580845260a0888501819052909693948594909361018692860190610b66565b848103604086015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610bab5f395f51905f526103e736610a2d565b9093918481109461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600a8152693632b9b9b2b92a3430b760b11b602082015260400190565b5061019c5760206101665f516020610bab5f395f51905f5261014336610a2d565b5061019c5760206104945f516020610bab5f395f51905f5261047136610a2d565b9093918481119461018660405194859488865260a08a87015260a0860190610b66565b8481036040860152600b81526a33b932b0ba32b92a3430b760a91b602082015260400190565b5061019c5760206104945f516020610b8b5f395f51905f526104db36610a2d565b9093918481139461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206104947f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861053236610a2d565b93915f82121561055f576001915b61018660405194859415159788865260a08a87015260a0860190610b66565b81811191610540565b5061019c57602061040a7f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261059c36610a2d565b93915f8112156105c85760019161018660405194859415159788865260a08a87015260a0860190610b66565b81811091610540565b5061019c5760206101667ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561060536610a63565b9093919315159315158481149461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a35f516020610bab5f395f51905f5261064f36610a2d565b909391848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37f80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd2861064f36610a2d565b5061019c5760206103a35f516020610b8b5f395f51905f5261064f36610a2d565b5061019c5760206102c77f772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f6107806106ff36610aa8565b9194906102b9604051888101906107318a82818c805191829101875e81015f838201520301601f1981018352826109a1565b5190206040518981019061075e8b82875180838a01875e81015f838201520301601f1981018352826109a1565b5190201415966102ab6040519687968a885260a08c89015260a0880190610b66565b868103604088015260088152671b9bdd115c5d585b60c21b602082015260400190565b5061019c57602061040a5f516020610b8b5f395f51905f526107c436610a2d565b9093918481129461018660405194859488865260a08a87015260a0860190610b66565b5061019c5760206103a37ff7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea561081b36610a63565b909391931515931515848114159461018660405194859488865260a08a87015260a0860190610b66565b5061019c57604036600319011261019c5760043580151580910361019c576024359067ffffffffffffffff821161019c577fbbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f16108a760209336906004016109d7565b60406108c28151928584526060878501526060840190610b66565b616f6b60f01b868483039283858701526002815201520190a1604051908152f35b5061019c57602061040a7f14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe861091736610a2d565b93915f8212156105c8575f9161018660405194859415159788865260a08a87015260a0860190610b66565b5061019c5760206104947f1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e261097636610a2d565b93915f81121561055f575f9161018660405194859415159788865260a08a87015260a0860190610b66565b90601f8019910116810190811067ffffffffffffffff8211176109c357604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561019c5780359067ffffffffffffffff82116109c35760405192610a0c601f8401601f1916602001856109a1565b8284526020838301011161019c57815f926020809301838601378301015290565b606060031982011261019c5760043591602435916044359067ffffffffffffffff821161019c57610a60916004016109d7565b90565b606060031982011261019c57600435801515810361019c5791602435801515810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c5760043567ffffffffffffffff811161019c5781610ad3916004016109d7565b9160243567ffffffffffffffff811161019c5782610af3916004016109d7565b916044359067ffffffffffffffff821161019c57610a60916004016109d7565b606060031982011261019c576004356001600160a01b038116810361019c57916024356001600160a01b038116810361019c57916044359067ffffffffffffffff821161019c57610a60916004016109d7565b805180835260209291819084018484015e5f828201840152601f01601f191601019056fe06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1aa2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE ADDRESS PUSH32 0x0 EQ PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x34 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x897E4C7 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0x18211BFB EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x39DF137F EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0x44781A00 EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0x44B7F248 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0x49F97939 EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0x4E3E4035 EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x556FE562 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x561015E2 EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x767392B3 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x77C6D463 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x8C45CB97 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9C0B4336 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xA079F1A3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xABCD7960 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xAEA88952 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xB8F28531 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xBFBA5DD6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE8C2CB16 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xEA79DD79 EQ PUSH2 0x1A0 JUMPI PUSH4 0xF5BAE6B6 EQ PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x28B PUSH2 0x20B CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x23D DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x26A DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x195C5D585B PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0xB66 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x306 CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xAC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B PUSH2 0x36E CALLDATASIZE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND DUP4 DUP2 EQ ISZERO DUP1 DUP5 MSTORE PUSH1 0xA0 DUP9 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP7 SWAP4 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH2 0x186 SWAP3 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x3E7 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 LT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x3632B9B9B2B92A3430B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x143 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x471 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 GT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x33B932B0BA32B92A3430B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x4DB CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SGT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x532 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x55F JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 GT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x59C CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x1 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP2 DUP2 LT SWAP2 PUSH2 0x540 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x166 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x605 CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xBAB PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0x80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28 PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64F CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x2C7 PUSH32 0x772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F PUSH2 0x780 PUSH2 0x6FF CALLDATASIZE PUSH2 0xAA8 JUMP JUMPDEST SWAP2 SWAP5 SWAP1 PUSH2 0x2B9 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH2 0x731 DUP11 DUP3 DUP2 DUP13 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP1 PUSH2 0x75E DUP12 DUP3 DUP8 MLOAD DUP1 DUP4 DUP11 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x9A1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ ISZERO SWAP7 PUSH2 0x2AB PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP9 MSTORE PUSH1 0xA0 DUP13 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x1B9BDD115C5D585B PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH0 MLOAD PUSH1 0x20 PUSH2 0xB8B PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x7C4 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 DUP5 DUP2 SLT SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x3A3 PUSH32 0xF7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5 PUSH2 0x81B CALLDATASIZE PUSH2 0xA63 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 ISZERO ISZERO SWAP4 ISZERO ISZERO DUP5 DUP2 EQ ISZERO SWAP5 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x19C JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH32 0xBBF85D637D70CCACC5B8EDB602351BA3DEC7BC069D69235C3529EF3F453D01F1 PUSH2 0x8A7 PUSH1 0x20 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x8C2 DUP2 MLOAD SWAP3 DUP6 DUP5 MSTORE PUSH1 0x60 DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x6F6B PUSH1 0xF0 SHL DUP7 DUP5 DUP4 SUB SWAP3 DUP4 DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP2 MSTORE ADD MSTORE ADD SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x40A PUSH32 0x14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8 PUSH2 0x917 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP3 SLT ISZERO PUSH2 0x5C8 JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP PUSH2 0x19C JUMPI PUSH1 0x20 PUSH2 0x494 PUSH32 0x1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2 PUSH2 0x976 CALLDATASIZE PUSH2 0xA2D JUMP JUMPDEST SWAP4 SWAP2 PUSH0 DUP2 SLT ISZERO PUSH2 0x55F JUMPI PUSH0 SWAP2 PUSH2 0x186 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO SWAP8 DUP9 DUP7 MSTORE PUSH1 0xA0 DUP11 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x19C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA0C PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x19C JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP2 PUSH2 0xAD3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19C JUMPI DUP3 PUSH2 0xAF3 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x19C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x19C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19C JUMPI PUSH2 0xA60 SWAP2 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP INVALID MOD 0xC5 REVERT SGT PUSH7 0x1D229189D43A6A CODESIZE 0xE8 PUSH8 0x21AF51ED7065A4B6 DELEGATECALL RETURNDATASIZE LOG4 0xBD DUP13 0xD1 0xB1 DUP2 MLOAD SWAP7 DUP12 PUSH27 0x5D7C5BCC2E8F9F583456A62C310B1B4E509906C1C1BB1A5AFF86CC 0x1E BYTE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x6DC2 0xD9 SWAP2 JUMPDEST INVALID PUSH24 0x8101A0FE62FE39B195D6BEE4F239FF9246FDDD87C1BC3073 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "71:6752:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4482:19;71:6752;4482:19;;;71:6752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2869:19;71:6752;2869:19;;;71:6752;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;1707:6;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;;;;;1725:49;;;71:6752;;;;;;;;;;;;;;;;2679:53;71:6752;;;:::i;:::-;;;;2869:19;71:6752;2936:52;71:6752;;;;:::i;:::-;;;;;;;2869:19;;;71:6752;2869:19;71:6752;;;;;;;;;;;;;;;;;;;2869:19;;4482;;2869;;;;;;:::i;:::-;71:6752;2859:30;;71:6752;;2903:19;;;71:6752;2903:19;71:6752;;;;;;;;;;;;;;;;;2903:19;;4482;;2903;;;;;;:::i;:::-;71:6752;2893:30;;2859:64;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2936:52;;;71:6752;;;;;;;;;;;;2494:53;71:6752;;;:::i;:::-;;;-1:-1:-1;;;;;71:6752:9;;;;;;;2476:6;;;71:6752;;;;;;;;;;2476:6;;71:6752;;;;;;;;;;;;:::i;:::-;;;;;;4096:56;71:6752;;;:::i;:::-;;;-1:-1:-1;;;;;71:6752:9;;;;;;;4078:6;;;;71:6752;;;;;;;;;;4078:6;;71:6752;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;5891:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;4781:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;4972:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5344:59;71:6752;;;:::i;:::-;;;;5202:10;;71:6752;;;5280:4;5199:135;;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;5199:135::-;5315:11;;;5199:135;;;71:6752;;;;;;6758:58;71:6752;;;:::i;:::-;;;;6618:10;;71:6752;;;6694:4;6615:133;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;6615:133::-;6729:11;;;6615:133;;;71:6752;;;;;;1900:50;71:6752;;;:::i;:::-;;;;;;;;;;1882:6;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;3105:6;;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;4287:56;71:6752;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;;;;4482:19;71:6752;4548:55;71:6752;;;;:::i;:::-;;;;;;;4482:19;;;71:6752;4482:19;71:6752;;;;;;;;;;;;;;;;;;;4482:19;;;;;;;;;;:::i;:::-;71:6752;4472:30;;71:6752;;4516:19;;;71:6752;4516:19;71:6752;;;;;;;;;;;;;;;;;4516:19;;4482;;4516;;;;;;:::i;:::-;71:6752;4506:30;;4472:64;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;71:6752:9;;;:::i;:::-;6080:5;;;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3490:53;71:6752;;;:::i;:::-;;;;;;;;;;3472:6;;;;71:6752;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;71:6752:9;;;;;;;;;;;;;;;;;;;;;;1376:37;71:6752;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;71:6752:9;;;;;;;;;;;;;;;1376:37;;;71:6752;;;;;;;;;;;;6449:58;71:6752;;;:::i;:::-;;;;6308:10;;71:6752;;;;6305:134;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5657:59;71:6752;;;:::i;:::-;;;;5514:10;;71:6752;;;;5511:136;71:6752;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4482:19;;71:6752;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;71:6752:9;;;;;-1:-1:-1;71:6752:9;;;;;;;;;;;;;;;;;;;;;;4482:19;71:6752;;-1:-1:-1;;71:6752:9;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;71:6752:9;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;71:6752:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;-1:-1:-1;;71:6752:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;71:6752:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;71:6752:9;;;;;;;-1:-1:-1;;;;;71:6752:9;;;;;;;;;-1:-1:-1;;;;;71:6752:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;71:6752:9;;;;;;;;-1:-1:-1;;71:6752:9;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "614400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"equal(address,address,string)": "infinite",
								"equal(bool,bool,string)": "infinite",
								"equal(bytes32,bytes32,string)": "infinite",
								"equal(int256,int256,string)": "infinite",
								"equal(string,string,string)": "infinite",
								"equal(uint256,uint256,string)": "infinite",
								"greaterThan(int256,int256,string)": "infinite",
								"greaterThan(int256,uint256,string)": "infinite",
								"greaterThan(uint256,int256,string)": "infinite",
								"greaterThan(uint256,uint256,string)": "infinite",
								"lesserThan(int256,int256,string)": "infinite",
								"lesserThan(int256,uint256,string)": "infinite",
								"lesserThan(uint256,int256,string)": "infinite",
								"lesserThan(uint256,uint256,string)": "infinite",
								"notEqual(address,address,string)": "infinite",
								"notEqual(bool,bool,string)": "infinite",
								"notEqual(bytes32,bytes32,string)": "infinite",
								"notEqual(int256,int256,string)": "infinite",
								"notEqual(string,string,string)": "infinite",
								"notEqual(uint256,uint256,string)": "infinite",
								"ok(bool,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "library_deploy_address"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 71,
									"end": 6823,
									"name": "REVERT",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220616dc2d9915bfe778101a0fe62fe39b195d6bee4f239ff9246fddd87c1bc307364736f6c634300081c0033",
									".code": [
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "library_deploy_address"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "897E4C7"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "18211BFB"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "39DF137F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "44781A00"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "44B7F248"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "49F97939"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4E3E4035"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "556FE562"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "561015E2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "767392B3"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "77C6D463"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "8C45CB97"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "9C0B4336"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A079F1A3"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "ABCD7960"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "AEA88952"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "B8F28531"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "BFBA5DD6"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "E8C2CB16"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "EA79DD79"
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "F5BAE6B6"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1774,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1774,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "PUSH",
											"source": 9,
											"value": "80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "PUSH",
											"source": 9,
											"value": "772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2869,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2889,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2903,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2923,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2923,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2988,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2494,
											"end": 2547,
											"name": "PUSH",
											"source": 9,
											"value": "AC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4096,
											"end": 4152,
											"name": "PUSH",
											"source": 9,
											"value": "AC36FADFA7A97083276A489F3E00CB5D4FCD13BBFDB3A78A0014FD48D4B46D9B"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD115C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3632B9B9B2B92A3430B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33B932B0BA32B92A3430B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5344,
											"end": 5403,
											"name": "PUSH",
											"source": 9,
											"value": "14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5202,
											"end": 5212,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5199,
											"end": 5334,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6758,
											"end": 6816,
											"name": "PUSH",
											"source": 9,
											"value": "1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6615,
											"end": 6748,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1900,
											"end": 1950,
											"name": "PUSH",
											"source": 9,
											"value": "F7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4287,
											"end": 4343,
											"name": "PUSH",
											"source": 9,
											"value": "80CCAFF7F7D9B95AB49DDD43778EE01CFDA842A6269BED42E4E37929BC57FD28"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4548,
											"end": 4603,
											"name": "PUSH",
											"source": 9,
											"value": "772EB34CC47D8C18199F27C5BFDB20838544F0058EF8AFDD2DEBEC5F6EDB455F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4482,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4502,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4516,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4516,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4536,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4536,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4536,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD115C5D585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3490,
											"end": 3543,
											"name": "PUSH",
											"source": 9,
											"value": "F7B49AA0711CEEC1DED951E7E1E0F5068E1B494431E8AAFD4AFD3C5FCE1BCEA5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "PUSH",
											"source": 9,
											"value": "BBF85D637D70CCACC5B8EDB602351BA3DEC7BC069D69235C3529EF3F453D01F1"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1413,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6449,
											"end": 6507,
											"name": "PUSH",
											"source": 9,
											"value": "14BC841BF51D20C0DC7CAA87B92CC8FFFF7A0427AB3F16C1800F89F1CD14AFE8"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6318,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5657,
											"end": 5716,
											"name": "PUSH",
											"source": 9,
											"value": "1AEE88E0B11C6F778EE0BE69B5A108735A20E3D68F5729C851F81E10FB0357E2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5524,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5524,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 71,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									],
									".data": {
										"05D1875A4B2144AA064D64CC6831013A560B60CC15B3D1A5F05A418DF8F3A0B5": "06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151",
										"CDFA9C80A279736FA0BD12A49D463EEFCFCBEF1DD9D54FC2225095FC0A165CE2": "968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1a"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyStaking_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"equal(address,address,string)": "bfba5dd6",
							"equal(bool,bool,string)": "767392b3",
							"equal(bytes32,bytes32,string)": "ea79dd79",
							"equal(int256,int256,string)": "f5bae6b6",
							"equal(string,string,string)": "e8c2cb16",
							"equal(uint256,uint256,string)": "abcd7960",
							"greaterThan(int256,int256,string)": "9c0b4336",
							"greaterThan(int256,uint256,string)": "0897e4c7",
							"greaterThan(uint256,int256,string)": "8c45cb97",
							"greaterThan(uint256,uint256,string)": "a079f1a3",
							"lesserThan(int256,int256,string)": "44b7f248",
							"lesserThan(int256,uint256,string)": "77c6d463",
							"lesserThan(uint256,int256,string)": "18211bfb",
							"lesserThan(uint256,uint256,string)": "aea88952",
							"notEqual(address,address,string)": "b8f28531",
							"notEqual(bool,bool,string)": "44781a00",
							"notEqual(bytes32,bytes32,string)": "556fe562",
							"notEqual(int256,int256,string)": "4e3e4035",
							"notEqual(string,string,string)": "49f97939",
							"notEqual(uint256,uint256,string)": "561015e2",
							"ok(bool,string)": "39df137f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tests/WallyStaking_test.sol": {
				"testSuite": {
					"abi": [
						{
							"inputs": [],
							"name": "beforeAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkFailure",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSenderAndValue",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSuccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSuccess2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_3, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_3:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x011e6492\n      eq\n      tag_5\n      jumpi\n      pop\n      dup1\n      0x12d487ea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36c00656\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7fea0d4b\n      eq\n      tag_11\n      jumpi\n      0x9074416d\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      shl(0xe0, 0xce88b145)\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1747:1748  1 */\n      0x01\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1697:1703  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n      dup3\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      0x24\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyStaking_test.sol\":1722:1735  TestsAccounts */\n      linkerSymbol(\"1068a87eb54ed04c4e435de35b2ebf536f41f3ff436b4a9bd78b8044f97a1889\")\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      gas\n      delegatecall\n      swap2\n      dup3\n      iszero\n      tag_25\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x00\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      swap3\n      tag_19\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_20:\n      pop\n      mload(0x40)\n      shl(0xe1, 0x5fdd2eeb)\n        /* \"tests/WallyStaking_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1710:1720  msg.sender */\n      caller\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      0x24\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup4\n      add\n      mstore\n      0x60\n      0x44\n      dup4\n      add\n      mstore\n      0x0e\n      0x64\n      dup4\n      add\n      mstore\n      shl(0x91, 0x24b73b30b634b21039b2b73232b9)\n      0x84\n      dup4\n      add\n      mstore\n      0x20\n      dup3\n        /* \"tests/WallyStaking_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      0xa4\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyStaking_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      dup5\n      gas\n      delegatecall\n      swap1\n      dup2\n      iszero\n      tag_25\n      jumpi\n      0xa4\n      swap3\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n      swap3\n      tag_23\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_24:\n      pop\n      mload(0x40)\n      swap3\n      dup4\n      dup1\n      swap3\n      shl(0xe5, 0x055e6bcb)\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      dup3\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1791:1800  msg.value */\n      callvalue\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      dup4\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mstore\n      0x64\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      0x24\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup4\n      add\n      mstore\n      0x60\n      0x44\n      dup4\n      add\n      mstore\n      0x0d\n      0x64\n      dup4\n      add\n      mstore\n      shl(0x98, 0x496e76616c69642076616c7565)\n      0x84\n      dup4\n      add\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      stop\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n    tag_27:\n      tag_29\n      swap1\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      returndatasize\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n      gt\n      tag_30\n      jumpi\n    tag_31:\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_32:\n      dup2\n      add\n      swap1\n      tag_2\n      jump\t// in\n    tag_29:\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      stop\n        /* \"tests/WallyStaking_test.sol\":1778:1823  Assert.equal(msg.value, 100, \"Invalid value\") */\n    tag_30:\n      pop\n      returndatasize\n      jump(tag_31)\n    tag_25:\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"tests/WallyStaking_test.sol\":1697:1768  Assert.equal(msg.sender, TestsAccounts.getAccount(1), \"Invalid sender\") */\n    tag_23:\n      tag_33\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_30\n      jumpi\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_33:\n      jump(tag_24)\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n    tag_19:\n      swap1\n      swap2\n      pop\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      dup2\n      returndatasize\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      gt\n      tag_37\n      jumpi\n    tag_38:\n      dup2\n      tag_39\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      swap4\n      dup4\n      tag_1\n      jump\t// in\n    tag_39:\n      dup2\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      sub\n      slt\n      tag_42\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_42\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n      swap1\n      0x00\n      jump(tag_20)\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_42:\n      0x00\n      dup1\n      revert\n        /* \"tests/WallyStaking_test.sol\":1722:1749  TestsAccounts.getAccount(1) */\n    tag_37:\n      returndatasize\n      swap2\n      pop\n      jump(tag_38)\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_11:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      shl(0xe5, 0x055e6bcb)\n        /* \"tests/WallyStaking_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":763:764  1 */\n      0x01\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x16\n      0x64\n      dup3\n      add\n      mstore\n      shl(0x50, 0x312073686f756c6420626520657175616c20746f2031)\n      0x84\n      dup3\n      add\n      mstore\n      0x20\n      dup2\n        /* \"tests/WallyStaking_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      0xa4\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyStaking_test.sol\":745:751  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n        /* \"tests/WallyStaking_test.sol\":745:801  Assert.equal(uint(1), uint(1), \"1 should be equal to 1\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      stop\n    tag_9:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      shl(0xe1, 0x2b080af1)\n        /* \"tests/WallyStaking_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1376:1377  1 */\n      0x01\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x1a\n      0x64\n      dup3\n      add\n      mstore\n      0x312073686f756c64206e6f7420626520657175616c20746f2031000000000000\n      0x84\n      dup3\n      add\n      mstore\n      0x20\n      dup2\n        /* \"tests/WallyStaking_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      0xa4\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyStaking_test.sol\":1355:1361  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n        /* \"tests/WallyStaking_test.sol\":1355:1418  Assert.notEqual(uint(1), uint(1), \"1 should not be equal to 1\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      stop\n    tag_7:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"tests/WallyStaking_test.sol\":1293:1297  true */\n      0x01\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_42, callvalue)\n      jumpi(tag_42, slt(add(not(0x03), calldatasize), 0x00))\n      shl(0xe0, 0x39df137f)\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":961:967  2 == 2 */\n      0x01\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mstore\n      0x40\n      0x24\n      dup3\n      add\n      mstore\n      0x0e\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x90, 0x73686f756c642062652074727565)\n      0x64\n      dup3\n      add\n      mstore\n        /* \"tests/WallyStaking_test.sol\":951:957  Assert */\n      linkerSymbol(\"acbfb1c35000d78352310b16a054a6b1066124b9c6f054b10c085f549bff80c6\")\n      swap1\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n      dup2\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      0x84\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n        /* \"tests/WallyStaking_test.sol\":951:957  Assert */\n      dup6\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_78\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_79:\n      pop\n      mload(0x40)\n      shl(0xe0, 0xa079f1a3)\n        /* \"tests/WallyStaking_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":961:962  2 */\n      0x02\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mstore\n        /* \"tests/WallyStaking_test.sol\":961:967  2 == 2 */\n      0x01\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x1d\n      0x64\n      dup3\n      add\n      mstore\n      0x322073686f756c642062652067726561746572207468616e20746f2031000000\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      0x84\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup3\n      add\n      mstore\n      swap1\n      0x20\n      dup3\n        /* \"tests/WallyStaking_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      0xa4\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup2\n      dup5\n        /* \"tests/WallyStaking_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      gas\n      delegatecall\n      swap1\n      dup2\n      iszero\n      tag_25\n      jumpi\n      0xa4\n      swap3\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n      swap3\n      tag_82\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_83:\n      pop\n      mload(0x40)\n      shl(0xe1, 0x575444a9)\n        /* \"tests/WallyStaking_test.sol\":1075:1142  Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\") */\n      dup2\n      mstore\n        /* \"tests/WallyStaking_test.sol\":961:962  2 */\n      0x02\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x04\n        /* \"tests/WallyStaking_test.sol\":1075:1142  Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\") */\n      dup3\n      add\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      mstore\n        /* \"tests/WallyStaking_test.sol\":1107:1108  3 */\n      0x03\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x60\n      0x44\n      dup3\n      add\n      mstore\n      0x1c\n      0x64\n      dup3\n      add\n      mstore\n      0x322073686f756c64206265206c6573736572207468616e20746f203300000000\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      0x84\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      dup3\n      add\n      mstore\n      swap3\n      dup4\n      swap2\n      dup3\n      swap1\n        /* \"tests/WallyStaking_test.sol\":1075:1142  Assert.lesserThan(uint(2), uint(3), \"2 should be lesser than to 3\") */\n      gas\n      delegatecall\n      dup1\n      iszero\n      tag_25\n      jumpi\n      tag_27\n      jumpi\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      stop\n        /* \"tests/WallyStaking_test.sol\":996:1065  Assert.greaterThan(uint(2), uint(1), \"2 should be greater than to 1\") */\n    tag_82:\n      tag_92\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_30\n      jumpi\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_92:\n      jump(tag_83)\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n    tag_78:\n      tag_96\n      swap1\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      returndatasize\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n      0x20\n        /* \"tests/WallyStaking_test.sol\":951:986  Assert.ok(2 == 2, 'should be true') */\n      gt\n      tag_30\n      jumpi\n      tag_32\n      dup2\n      dup4\n      tag_1\n      jump\t// in\n    tag_96:\n      jump(tag_79)\n        /* \"tests/WallyStaking_test.sol\":511:1832  contract testSuite {... */\n    tag_1:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_100\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_100:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_42\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_42\n      jumpi\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202d5f674480d1856ac7b63e0cb5ca978be7f4366f0c7619a169307f613953169664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {
								"remix_accounts.sol": {
									"TestsAccounts": [
										{
											"length": 20,
											"start": 169
										}
									]
								},
								"remix_tests.sol": {
									"Assert": [
										{
											"length": 20,
											"start": 142
										},
										{
											"length": 20,
											"start": 633
										},
										{
											"length": 20,
											"start": 769
										},
										{
											"length": 20,
											"start": 901
										}
									]
								}
							},
							"object": "6080806040523460155761051e908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c908163011e6492146103235750806312d487ea1461030857806336c00656146102805780637fea0d4b146101ff57639074416d14610053575f80fd5b5f3660031901126101f35760405163ce88b14560e01b81526001600482015273__$acbfb1c35000d78352310b16a054a6b106$__60208260248173__$1068a87eb54ed04c4e435de35b2ebf536f$__5af4918215610191575f926101b7575b50604051635fdd2eeb60e11b81523360048201526001600160a01b03909216602483015260606044830152600e60648301526d24b73b30b634b21039b2b73232b960911b608483015260208260a481845af49081156101915760a49260209261019c575b506040519283809263055e6bcb60e51b82523460048301526064602483015260606044830152600d60648301526c496e76616c69642076616c756560981b60848301525af480156101915761016757005b6101889060203d60201161018a575b610180818361049a565b8101906104d0565b005b503d610176565b6040513d5f823e3d90fd5b6101b290833d851161018a57610180818361049a565b610116565b9091506020813d6020116101f7575b816101d36020938361049a565b810103126101f357516001600160a01b03811681036101f357905f6100b2565b5f80fd5b3d91506101c6565b346101f3575f3660031901126101f35760405163055e6bcb60e51b81526001600482018190526024820152606060448201526016606482015275312073686f756c6420626520657175616c20746f203160501b608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357604051632b080af160e11b8152600160048201819052602482015260606044820152601a60648201527f312073686f756c64206e6f7420626520657175616c20746f2031000000000000608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357602060405160018152f35b346101f3575f3660031901126101f3576339df137f60e01b81526001600482015260406024820152600e60448201526d73686f756c64206265207472756560901b606482015273__$acbfb1c35000d78352310b16a054a6b106$__90602081608481855af480156101915761047d575b5060405163a079f1a360e01b8152600260048201526001602482015260606044820152601d60648201527f322073686f756c642062652067726561746572207468616e20746f203100000060848201529060208260a481845af49081156101915760a492602092610462575b5060405163575444a960e11b8152600260048201526003602482015260606044820152601c60648201527f322073686f756c64206265206c6573736572207468616e20746f203300000000608482015292839182905af480156101915761016757005b61047890833d851161018a57610180818361049a565b6103ff565b6104959060203d60201161018a57610180818361049a565b610393565b90601f8019910116810190811067ffffffffffffffff8211176104bc57604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126101f3575180151581036101f3579056fea26469706673582212202d5f674480d1856ac7b63e0cb5ca978be7f4366f0c7619a169307f613953169664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x51E SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11E6492 EQ PUSH2 0x323 JUMPI POP DUP1 PUSH4 0x12D487EA EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x36C00656 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x7FEA0D4B EQ PUSH2 0x1FF JUMPI PUSH4 0x9074416D EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCE88B145 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x191 JUMPI PUSH0 SWAP3 PUSH2 0x1B7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x5FDD2EEB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xE PUSH1 0x64 DUP4 ADD MSTORE PUSH14 0x24B73B30B634B21039B2B73232B9 PUSH1 0x91 SHL PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x19C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP3 MSTORE CALLVALUE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP4 ADD MSTORE PUSH13 0x496E76616C69642076616C7565 PUSH1 0x98 SHL PUSH1 0x84 DUP4 ADD MSTORE GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x188 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI JUMPDEST PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1B2 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F7 JUMPI JUMPDEST DUP2 PUSH2 0x1D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 PUSH0 PUSH2 0xB2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x312073686F756C6420626520657175616C20746F2031 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B080AF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x312073686F756C64206E6F7420626520657175616C20746F2031000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH4 0x39DF137F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x73686F756C642062652074727565 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x84 DUP2 DUP6 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x47D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA079F1A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C642062652067726561746572207468616E20746F2031000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x462 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x575444A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C64206265206C6573736572207468616E20746F203300000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x478 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x495 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH0 PUSH8 0x4480D1856AC7B63E 0xC 0xB5 0xCA SWAP8 DUP12 0xE7 DELEGATECALL CALLDATASIZE PUSH16 0xC7619A169307F613953169664736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "511:1321:10:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bool_fromMemory": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {
								"remix_accounts.sol": {
									"TestsAccounts": [
										{
											"length": 20,
											"start": 143
										}
									]
								},
								"remix_tests.sol": {
									"Assert": [
										{
											"length": 20,
											"start": 116
										},
										{
											"length": 20,
											"start": 607
										},
										{
											"length": 20,
											"start": 743
										},
										{
											"length": 20,
											"start": 875
										}
									]
								}
							},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c908163011e6492146103235750806312d487ea1461030857806336c00656146102805780637fea0d4b146101ff57639074416d14610053575f80fd5b5f3660031901126101f35760405163ce88b14560e01b81526001600482015273__$acbfb1c35000d78352310b16a054a6b106$__60208260248173__$1068a87eb54ed04c4e435de35b2ebf536f$__5af4918215610191575f926101b7575b50604051635fdd2eeb60e11b81523360048201526001600160a01b03909216602483015260606044830152600e60648301526d24b73b30b634b21039b2b73232b960911b608483015260208260a481845af49081156101915760a49260209261019c575b506040519283809263055e6bcb60e51b82523460048301526064602483015260606044830152600d60648301526c496e76616c69642076616c756560981b60848301525af480156101915761016757005b6101889060203d60201161018a575b610180818361049a565b8101906104d0565b005b503d610176565b6040513d5f823e3d90fd5b6101b290833d851161018a57610180818361049a565b610116565b9091506020813d6020116101f7575b816101d36020938361049a565b810103126101f357516001600160a01b03811681036101f357905f6100b2565b5f80fd5b3d91506101c6565b346101f3575f3660031901126101f35760405163055e6bcb60e51b81526001600482018190526024820152606060448201526016606482015275312073686f756c6420626520657175616c20746f203160501b608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357604051632b080af160e11b8152600160048201819052602482015260606044820152601a60648201527f312073686f756c64206e6f7420626520657175616c20746f2031000000000000608482015260208160a48173__$acbfb1c35000d78352310b16a054a6b106$__5af480156101915761016757005b346101f3575f3660031901126101f357602060405160018152f35b346101f3575f3660031901126101f3576339df137f60e01b81526001600482015260406024820152600e60448201526d73686f756c64206265207472756560901b606482015273__$acbfb1c35000d78352310b16a054a6b106$__90602081608481855af480156101915761047d575b5060405163a079f1a360e01b8152600260048201526001602482015260606044820152601d60648201527f322073686f756c642062652067726561746572207468616e20746f203100000060848201529060208260a481845af49081156101915760a492602092610462575b5060405163575444a960e11b8152600260048201526003602482015260606044820152601c60648201527f322073686f756c64206265206c6573736572207468616e20746f203300000000608482015292839182905af480156101915761016757005b61047890833d851161018a57610180818361049a565b6103ff565b6104959060203d60201161018a57610180818361049a565b610393565b90601f8019910116810190811067ffffffffffffffff8211176104bc57604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126101f3575180151581036101f3579056fea26469706673582212202d5f674480d1856ac7b63e0cb5ca978be7f4366f0c7619a169307f613953169664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11E6492 EQ PUSH2 0x323 JUMPI POP DUP1 PUSH4 0x12D487EA EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x36C00656 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x7FEA0D4B EQ PUSH2 0x1FF JUMPI PUSH4 0x9074416D EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCE88B145 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x191 JUMPI PUSH0 SWAP3 PUSH2 0x1B7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x5FDD2EEB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xE PUSH1 0x64 DUP4 ADD MSTORE PUSH14 0x24B73B30B634B21039B2B73232B9 PUSH1 0x91 SHL PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x19C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP3 MSTORE CALLVALUE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP4 ADD MSTORE PUSH13 0x496E76616C69642076616C7565 PUSH1 0x98 SHL PUSH1 0x84 DUP4 ADD MSTORE GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x188 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI JUMPDEST PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1B2 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F7 JUMPI JUMPDEST DUP2 PUSH2 0x1D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 PUSH0 PUSH2 0xB2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x55E6BCB PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x312073686F756C6420626520657175616C20746F2031 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B080AF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x312073686F756C64206E6F7420626520657175616C20746F2031000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xA4 DUP2 PUSH20 0x0 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F3 JUMPI PUSH4 0x39DF137F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x73686F756C642062652074727565 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x84 DUP2 DUP6 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x47D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA079F1A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C642062652067726561746572207468616E20746F2031000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0xA4 DUP2 DUP5 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x191 JUMPI PUSH1 0xA4 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x462 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x575444A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x322073686F756C64206265206C6573736572207468616E20746F203300000000 PUSH1 0x84 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x191 JUMPI PUSH2 0x167 JUMPI STOP JUMPDEST PUSH2 0x478 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x495 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18A JUMPI PUSH2 0x180 DUP2 DUP4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4BC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1F3 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH0 PUSH8 0x4480D1856AC7B63E 0xC 0xB5 0xCA SWAP8 DUP12 0xE7 DELEGATECALL CALLDATASIZE PUSH16 0xC7619A169307F613953169664736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "511:1321:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;511:1321:10;;;;;;-1:-1:-1;;;1722:27:10;;1747:1;511:1321;1722:27;;511:1321;1697:6;511:1321;;1722:27;511:1321;1722:13;:27;;;;;;;511:1321;1722:27;;;511:1321;-1:-1:-1;511:1321:10;;-1:-1:-1;;;1697:71:10;;1710:10;511:1321;1697:71;;511:1321;-1:-1:-1;;;;;511:1321:10;;;1722:27;511:1321;;;;;;;;;;;;;-1:-1:-1;;;511:1321:10;;;;;;1697:71;511:1321;1697:71;;;;;;;;;;511:1321;1697:71;;;511:1321;;;;;;;;;;;1778:45;;1791:9;511:1321;1778:45;;511:1321;;1722:27;511:1321;;;;;;;;;;;;;-1:-1:-1;;;511:1321:10;;;;1778:45;;;;;;;;511:1321;1778:45;;;511:1321;1778:45;511:1321;1778:45;;;;;;;;:::i;:::-;;;;;:::i;:::-;511:1321;1778:45;;;;;;511:1321;;;;;;;;;1697:71;;;;;;;;;;;;;:::i;:::-;;;1722:27;;;;511:1321;1722:27;;511:1321;1722:27;;;;;;511:1321;1722:27;;;:::i;:::-;;;511:1321;;;;;-1:-1:-1;;;;;511:1321:10;;;;;;1722:27;;;;511:1321;;;;1722:27;;;-1:-1:-1;1722:27:10;;511:1321;;;;;;-1:-1:-1;;511:1321:10;;;;;;-1:-1:-1;;;745:56:10;;763:1;511:1321;745:56;;511:1321;;;;;;;;;;;;;;;;;-1:-1:-1;;;511:1321:10;;;;;;745:56;511:1321;745:6;:56;;;;;;;;511:1321;;;;;;;-1:-1:-1;;511:1321:10;;;;;;-1:-1:-1;;;1355:63:10;;1376:1;511:1321;1355:63;;511:1321;;;;;;;;;;;;;;;;;;;;;;;;1355:63;511:1321;1355:6;:63;;;;;;;;511:1321;;;;;;;-1:-1:-1;;511:1321:10;;;;;;;1293:4;511:1321;;;;;;;;;-1:-1:-1;;511:1321:10;;;;-1:-1:-1;;;951:35:10;;961:6;511:1321;951:35;;511:1321;;;;;;;;;;;-1:-1:-1;;;511:1321:10;;;;951:6;;511:1321;;951:35;511:1321;951:6;:35;;;;;;;;511:1321;-1:-1:-1;511:1321:10;;-1:-1:-1;;;996:69:10;;961:1;511:1321;996:69;;511:1321;961:6;511:1321;;;;;;;;;;;;;;;951:35;511:1321;;;;;;996:69;511:1321;;996:69;;;;;;;;;511:1321;996:69;;;511:1321;-1:-1:-1;511:1321:10;;-1:-1:-1;;;1075:67:10;;961:1;511:1321;1075:67;;511:1321;1107:1;511:1321;;;;;;;;;;;;;;;951:35;511:1321;;;;;;;;1075:67;;;;;;;;511:1321;996:69;;;;;;;;;;;;;:::i;:::-;;;951:35;;;511:1321;951:35;511:1321;951:35;;;;;;;:::i;:::-;;;511:1321;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;511:1321:10;;;;;-1:-1:-1;511:1321:10;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "262000",
								"executionCost": "306",
								"totalCost": "262306"
							},
							"external": {
								"beforeAll()": "infinite",
								"checkFailure()": "infinite",
								"checkSenderAndValue()": "infinite",
								"checkSuccess()": "infinite",
								"checkSuccess2()": "175"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "RETURN",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 511,
									"end": 1832,
									"name": "REVERT",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d5f674480d1856ac7b63e0cb5ca978be7f4366f0c7619a169307f613953169664736f6c634300081c0033",
									".code": [
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "11E6492"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "12D487EA"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "36C00656"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "7FEA0D4B"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "9074416D"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CE88B145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSHLIB",
											"source": 10,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1735,
											"name": "PUSHLIB",
											"source": 10,
											"value": "remix_accounts.sol:TestsAccounts"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5FDD2EEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21039B2B73232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "55E6BCB"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "E5"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1778,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1778,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1697,
											"end": 1768,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55E6BCB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "312073686F756C6420626520657175616C20746F2031"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSHLIB",
											"source": 10,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 745,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B080AF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "312073686F756C64206E6F7420626520657175616C20746F2031000000000000"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "PUSHLIB",
											"source": 10,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1355,
											"end": 1418,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39DF137F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73686F756C642062652074727565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 951,
											"end": 957,
											"name": "PUSHLIB",
											"source": 10,
											"value": "remix_tests.sol:Assert"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A079F1A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "322073686F756C642062652067726561746572207468616E20746F2031000000"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "575444A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "322073686F756C64206265206C6573736572207468616E20746F203300000000"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1075,
											"end": 1142,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 996,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 996,
											"end": 1065,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 951,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 951,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 951,
											"end": 986,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"remix_accounts.sol",
								"remix_tests.sol",
								"tests/WallyStaking_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beforeAll()": "7fea0d4b",
							"checkFailure()": "36c00656",
							"checkSenderAndValue()": "9074416d",
							"checkSuccess()": "011e6492",
							"checkSuccess2()": "12d487ea"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"beforeAll()": {
								"notice": "'beforeAll' runs before all other tests More special functions are: 'beforeEach', 'beforeAll', 'afterEach' & 'afterAll'"
							},
							"checkSenderAndValue()": {
								"notice": "Custom Transaction Context: https://remix-ide.readthedocs.io/en/latest/unittesting.html#customization #sender: account-1 #value: 100"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							551
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 552,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 551,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 576,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 575,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 575,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								575,
								587,
								378,
								551
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										574
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 574,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							443
						]
					},
					"id": 444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 387,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 443,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 400,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 403,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 408,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 413,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 419,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 443,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 443,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 438,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 443,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 444,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							521
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 446,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 455,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 464,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 521,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 521,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 521,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 521,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 521,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 521,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 522,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								455,
								464
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 524,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 529,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 528,
												"id": 531,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 551,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 538,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 537,
												"id": 540,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 551,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 546,
												"id": 548,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 551,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 552,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							575
						],
						"IERC165": [
							587
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 576,
							"sourceUnit": 588,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 554,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 587,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 557,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "688:7:5"
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 556,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575,
								587
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										586
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "845:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 566,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "862:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 568,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "882:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$587_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$587_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 567,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$587",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 565,
												"id": 572,
												"nodeType": "Return",
												"src": "855:47:5"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "790:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "839:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:5"
									},
									"scope": 575,
									"src": "763:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 576,
							"src": "660:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							587
						]
					},
					"id": 588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 578,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 580,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 587,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 588,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"contracts/WallyStaking.sol": {
				"ast": {
					"absolutePath": "contracts/WallyStaking.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"AlreadyWithdrawn": [
							598
						],
						"Context": [
							551
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							521
						],
						"InsufficientBalance": [
							602
						],
						"InvalidAddress": [
							604
						],
						"InvalidLockChoice": [
							596
						],
						"LockNotOver": [
							600
						],
						"ReentrancyGuard": [
							443
						],
						"WallyStaking": [
							1054
						],
						"ZeroAmount": [
							594
						]
					},
					"id": 1055,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1055,
							"sourceUnit": 296,
							"src": "57:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1055,
							"sourceUnit": 444,
							"src": "116:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1055,
							"sourceUnit": 522,
							"src": "179:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "1f2a2005",
							"id": 594,
							"name": "ZeroAmount",
							"nameLocation": "369:10:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 593,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "379:2:7"
							},
							"src": "363:19:7"
						},
						{
							"errorSelector": "506604d7",
							"id": 596,
							"name": "InvalidLockChoice",
							"nameLocation": "389:17:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 595,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "406:2:7"
							},
							"src": "383:26:7"
						},
						{
							"errorSelector": "6507689f",
							"id": 598,
							"name": "AlreadyWithdrawn",
							"nameLocation": "416:16:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 597,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "432:2:7"
							},
							"src": "410:25:7"
						},
						{
							"errorSelector": "fea04557",
							"id": 600,
							"name": "LockNotOver",
							"nameLocation": "442:11:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 599,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "453:2:7"
							},
							"src": "436:20:7"
						},
						{
							"errorSelector": "f4d678b8",
							"id": 602,
							"name": "InsufficientBalance",
							"nameLocation": "463:19:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 601,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "482:2:7"
							},
							"src": "457:28:7"
						},
						{
							"errorSelector": "e6c4247b",
							"id": 604,
							"name": "InvalidAddress",
							"nameLocation": "492:14:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 603,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "506:2:7"
							},
							"src": "486:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 606,
										"name": "AccessControl",
										"nameLocations": [
											"832:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "832:13:7"
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "832:13:7"
								},
								{
									"baseName": {
										"id": 608,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"847:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "847:15:7"
									},
									"id": 609,
									"nodeType": "InheritanceSpecifier",
									"src": "847:15:7"
								}
							],
							"canonicalName": "WallyStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 605,
								"nodeType": "StructuredDocumentation",
								"src": "511:295:7",
								"text": " @title WallyStaking\n @dev Stake Wally Tokens for fixed durations (3, 6, or 12 months) to earn APY-based rewards.\n Must be funded with enough TWG to cover principal + rewards.\n Addresses many audit items: M001 (fees?), M002 (array length check), M003 (checking transfer), etc."
							},
							"fullyImplemented": true,
							"id": 1054,
							"linearizedBaseContracts": [
								1054,
								443,
								295,
								575,
								587,
								378,
								551
							],
							"name": "WallyStaking",
							"nameLocation": "816:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 614,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "895:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "869:62:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 610,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "869:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 612,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "918:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 611,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "908:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "908:23:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 617,
									"mutability": "immutable",
									"name": "wallyToken",
									"nameLocation": "964:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "938:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$521",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 616,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 615,
											"name": "IERC20",
											"nameLocations": [
												"938:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 521,
											"src": "938:6:7"
										},
										"referencedDeclaration": 521,
										"src": "938:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$521",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 620,
									"mutability": "constant",
									"name": "LOCK_3_MONTHS",
									"nameLocation": "1048:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1022:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 618,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1022:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1064:7:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "90"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 623,
									"mutability": "constant",
									"name": "LOCK_6_MONTHS",
									"nameLocation": "1103:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1077:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1077:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 622,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 626,
									"mutability": "constant",
									"name": "LOCK_12_MONTHS",
									"nameLocation": "1159:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1133:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 624,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1133:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 625,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1176:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f09823c3",
									"id": 629,
									"mutability": "mutable",
									"name": "apy3Months",
									"nameLocation": "1249:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1234:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1234:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1262:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5bf42fb4",
									"id": 632,
									"mutability": "mutable",
									"name": "apy6Months",
									"nameLocation": "1286:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1271:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1299:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbcacca7",
									"id": 635,
									"mutability": "mutable",
									"name": "apy12Months",
									"nameLocation": "1324:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1309:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1309:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31353030",
										"id": 634,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1338:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1500_by_1",
											"typeString": "int_const 1500"
										},
										"value": "1500"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "WallyStaking.StakeInfo",
									"id": 646,
									"members": [
										{
											"constant": false,
											"id": 637,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1384:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1376:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 636,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1376:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1408:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1400:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 638,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1400:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 641,
											"mutability": "mutable",
											"name": "lockDuration",
											"nameLocation": "1440:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1432:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 640,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1432:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 643,
											"mutability": "mutable",
											"name": "apy",
											"nameLocation": "1470:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1462:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 642,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 645,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "1504:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1499:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 644,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1499:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "1356:9:7",
									"nodeType": "StructDefinition",
									"scope": 1054,
									"src": "1349:171:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_stakes",
									"nameLocation": "1623:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1577:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct WallyStaking.StakeInfo[])"
									},
									"typeName": {
										"id": 651,
										"keyName": "user",
										"keyNameLocation": "1593:4:7",
										"keyType": {
											"id": 647,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1585:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1577:36:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct WallyStaking.StakeInfo[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 649,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 648,
													"name": "StakeInfo",
													"nameLocations": [
														"1601:9:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 646,
													"src": "1601:9:7"
												},
												"referencedDeclaration": 646,
												"src": "1601:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
													"typeString": "struct WallyStaking.StakeInfo"
												}
											},
											"id": 650,
											"nodeType": "ArrayTypeName",
											"src": "1601:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
												"typeString": "struct WallyStaking.StakeInfo[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
									"id": 662,
									"name": "Staked",
									"nameLocation": "1643:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1650:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1680:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1672:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockDuration",
												"nameLocation": "1696:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1688:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": false,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1718:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1710:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:73:7"
									},
									"src": "1637:86:7"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 670,
									"name": "Withdrawn",
									"nameLocation": "1734:9:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1760:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1744:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1774:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1766:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1794:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1786:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:58:7"
									},
									"src": "1728:74:7"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "1865:243:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "_wallyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1909:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1932:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1924:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 678,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1924:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1924:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1909:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "1905:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 683,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1943:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1943:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 685,
													"nodeType": "RevertStatement",
													"src": "1936:23:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1973:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1991:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1983:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 688,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1983:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1983:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1973:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 696,
												"nodeType": "IfStatement",
												"src": "1969:49:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 693,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "2002:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2002:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 695,
													"nodeType": "RevertStatement",
													"src": "1995:23:7"
												}
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 697,
														"name": "wallyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2029:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$521",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 699,
																"name": "_wallyToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2049:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 698,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "2042:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2042:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$521",
															"typeString": "contract IERC20"
														}
													},
													"src": "2029:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$521",
														"typeString": "contract IERC20"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "2029:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2082:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 705,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "2094:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 703,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2071:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2071:30:7"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_wallyToken",
												"nameLocation": "1828:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1820:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "1849:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1841:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:37:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:0:7"
									},
									"scope": 1054,
									"src": "1808:300:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "2298:818:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 719,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "2364:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2374:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2364:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "2360:36:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 722,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "2384:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2384:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 724,
													"nodeType": "RevertStatement",
													"src": "2377:19:7"
												}
											},
											{
												"assignments": [
													727,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "chosenLock",
														"nameLocation": "2486:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2478:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "chosenAPY",
														"nameLocation": "2506:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2498:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2498:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "lockChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2532:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_getLockInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2519:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2477:66:7"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2622:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2617:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 734,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2617:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 738,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2656:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2660:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2656:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 742,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2676:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyStaking_$1054",
																		"typeString": "contract WallyStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyStaking_$1054",
																		"typeString": "contract WallyStaking"
																	}
																],
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2668:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 740,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2668:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "2683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 736,
															"name": "wallyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2632:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2643:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 520,
														"src": "2632:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2617:73:7"
											},
											{
												"condition": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2704:8:7",
													"subExpression": {
														"id": 747,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "2705:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "2700:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 749,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "2721:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2721:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 751,
													"nodeType": "RevertStatement",
													"src": "2714:28:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 759,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "2858:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 760,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2894:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2900:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2894:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 762,
																	"name": "chosenLock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "2964:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 763,
																	"name": "chosenAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2993:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3027:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 758,
																"name": "StakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "2826:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_StakeInfo_$646_storage_ptr_$",
																	"typeString": "type(struct WallyStaking.StakeInfo storage pointer)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"2850:6:7",
																"2878:14:7",
																"2950:12:7",
																"2988:3:7",
																"3016:9:7"
															],
															"names": [
																"amount",
																"startTimestamp",
																"lockDuration",
																"apy",
																"withdrawn"
															],
															"nodeType": "FunctionCall",
															"src": "2826:217:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_memory_ptr",
																"typeString": "struct WallyStaking.StakeInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakeInfo_$646_memory_ptr",
																"typeString": "struct WallyStaking.StakeInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 753,
																"name": "_stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2801:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct WallyStaking.StakeInfo storage ref[] storage ref)"
																}
															},
															"id": 756,
															"indexExpression": {
																"expression": {
																	"id": 754,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2809:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2813:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2809:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2801:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage",
																"typeString": "struct WallyStaking.StakeInfo storage ref[] storage ref"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2821:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2801:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr_$_t_struct$_StakeInfo_$646_storage_$returns$__$attached_to$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WallyStaking.StakeInfo storage ref[] storage pointer,struct WallyStaking.StakeInfo storage ref)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2801:243:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "2801:243:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3067:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3071:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3067:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "3079:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 772,
															"name": "chosenLock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3087:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 773,
															"name": "chosenAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3099:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3060:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "3055:54:7"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2114:106:7",
										"text": " @dev Stake a specific `amount` of TWG for one of the fixed durations (3, 6, 12 months)."
									},
									"functionSelector": "7b0472f0",
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 717,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 716,
												"name": "nonReentrant",
												"nameLocations": [
													"2285:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "2285:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2285:12:7"
										}
									],
									"name": "stake",
									"nameLocation": "2234:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2248:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2240:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "lockChoice",
												"nameLocation": "2264:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2256:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:36:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:0:7"
									},
									"scope": 1054,
									"src": "2225:891:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "3266:1139:7",
										"statements": [
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "userStakes",
														"nameLocation": "3296:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3276:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 787,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 786,
																	"name": "StakeInfo",
																	"nameLocations": [
																		"3276:9:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 646,
																	"src": "3276:9:7"
																},
																"referencedDeclaration": 646,
																"src": "3276:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																	"typeString": "struct WallyStaking.StakeInfo"
																}
															},
															"id": 788,
															"nodeType": "ArrayTypeName",
															"src": "3276:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"baseExpression": {
														"id": 790,
														"name": "_stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "3309:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct WallyStaking.StakeInfo storage ref[] storage ref)"
														}
													},
													"id": 793,
													"indexExpression": {
														"expression": {
															"id": 791,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3317:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3317:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3309:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage",
														"typeString": "struct WallyStaking.StakeInfo storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3379:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 796,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3393:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage ref[] storage pointer"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3404:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3393:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3379:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "3375:63:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 799,
															"name": "InvalidLockChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3419:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3419:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 801,
													"nodeType": "RevertStatement",
													"src": "3412:26:7"
												}
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3467:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3449:27:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo"
														},
														"typeName": {
															"id": 804,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 803,
																"name": "StakeInfo",
																"nameLocations": [
																	"3449:9:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 646,
																"src": "3449:9:7"
															},
															"referencedDeclaration": 646,
															"src": "3449:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"baseExpression": {
														"id": 806,
														"name": "userStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3479:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage ref[] storage pointer"
														}
													},
													"id": 808,
													"indexExpression": {
														"id": 807,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3490:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3479:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$646_storage",
														"typeString": "struct WallyStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3449:52:7"
											},
											{
												"condition": {
													"expression": {
														"id": 810,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3515:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage pointer"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3525:9:7",
													"memberName": "withdrawn",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 645,
													"src": "3515:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "3511:50:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 812,
															"name": "AlreadyWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "3543:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3543:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 814,
													"nodeType": "RevertStatement",
													"src": "3536:25:7"
												}
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "3580:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3572:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3572:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 818,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3593:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage pointer"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3603:14:7",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 639,
														"src": "3593:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 820,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3620:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage pointer"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3630:12:7",
														"memberName": "lockDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "3620:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3593:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3572:70:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 824,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3741:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3747:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3741:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 826,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "3759:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3741:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "3737:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 828,
															"name": "LockNotOver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3778:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3778:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 830,
													"nodeType": "RevertStatement",
													"src": "3771:20:7"
												}
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "principal",
														"nameLocation": "3810:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3802:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3802:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"expression": {
														"id": 834,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3822:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage pointer"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3832:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 637,
													"src": "3822:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3802:36:7"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "3856:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3848:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3848:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"expression": {
														"id": 839,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3869:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage pointer"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3879:12:7",
													"memberName": "lockDuration",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 641,
													"src": "3869:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3848:43:7"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3965:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3957:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3957:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 844,
																		"name": "principal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "3975:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 845,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "3987:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																				"typeString": "struct WallyStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3997:3:7",
																		"memberName": "apy",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 643,
																		"src": "3987:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3975:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 848,
																	"name": "timeStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "4003:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3975:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 850,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3974:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_315360000000_by_1",
																	"typeString": "int_const 315360000000"
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "333635",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4018:8:7",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4029:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "4018:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_315360000000_by_1",
																	"typeString": "int_const 315360000000"
																}
															}
														],
														"id": 854,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4017:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_315360000000_by_1",
															"typeString": "int_const 315360000000"
														}
													},
													"src": "3974:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3957:78:7"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 857,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "4046:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage pointer"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4056:9:7",
														"memberName": "withdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 645,
														"src": "4046:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4068:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4046:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "4046:26:7"
											},
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "totalPayment",
														"nameLocation": "4091:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "4083:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "principal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "4106:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 866,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "4118:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4106:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4083:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 873,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4167:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WallyStaking_$1054",
																			"typeString": "contract WallyStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WallyStaking_$1054",
																			"typeString": "contract WallyStaking"
																		}
																	],
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4159:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 871,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4159:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4159:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 869,
																"name": "wallyToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "4138:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$521",
																	"typeString": "contract IERC20"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4149:9:7",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 478,
															"src": "4138:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4138:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 876,
														"name": "totalPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "4176:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4138:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "4134:84:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 878,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4197:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4197:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 880,
													"nodeType": "RevertStatement",
													"src": "4190:28:7"
												}
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4234:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "4229:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 882,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4229:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 886,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4264:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4268:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4264:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "totalPayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "4276:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 884,
															"name": "wallyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4244:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4255:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "4244:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4244:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4229:60:7"
											},
											{
												"condition": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4303:8:7",
													"subExpression": {
														"id": 891,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "4304:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "4299:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 893,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4320:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4320:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 895,
													"nodeType": "RevertStatement",
													"src": "4313:28:7"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 898,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4367:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4371:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4367:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4379:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 901,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4391:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "4357:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4357:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "EmitStatement",
												"src": "4352:46:7"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "3122:79:7",
										"text": " @dev Withdraw staked tokens + reward after lock period ends."
									},
									"functionSelector": "2e1a7d4d",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 783,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 782,
												"name": "nonReentrant",
												"nameLocations": [
													"3253:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "3253:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3253:12:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "3215:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3232:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3224:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:20:7"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:7"
									},
									"scope": 1054,
									"src": "3206:1199:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "4628:412:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 914,
														"name": "lockChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4642:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4656:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "4642:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 926,
															"name": "lockChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "36",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "4756:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "lockChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4870:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3132",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4884:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "4870:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 953,
															"nodeType": "Block",
															"src": "4983:51:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 950,
																			"name": "InvalidLockChoice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "5004:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5004:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 952,
																	"nodeType": "RevertStatement",
																	"src": "4997:26:7"
																}
															]
														},
														"id": 954,
														"nodeType": "IfStatement",
														"src": "4866:168:7",
														"trueBody": {
															"id": 949,
															"nodeType": "Block",
															"src": "4888:89:7",
															"statements": [
																{
																	"expression": {
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 941,
																			"name": "chosenLock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "4902:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 942,
																			"name": "LOCK_12_MONTHS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4915:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4902:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"nodeType": "ExpressionStatement",
																	"src": "4902:27:7"
																},
																{
																	"expression": {
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 945,
																			"name": "chosenAPY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 912,
																			"src": "4943:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 946,
																			"name": "apy12Months",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "4955:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4943:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 948,
																	"nodeType": "ExpressionStatement",
																	"src": "4943:23:7"
																}
															]
														}
													},
													"id": 955,
													"nodeType": "IfStatement",
													"src": "4752:282:7",
													"trueBody": {
														"id": 937,
														"nodeType": "Block",
														"src": "4773:87:7",
														"statements": [
															{
																"expression": {
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 929,
																		"name": "chosenLock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "4787:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 930,
																		"name": "LOCK_6_MONTHS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4800:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4787:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 932,
																"nodeType": "ExpressionStatement",
																"src": "4787:26:7"
															},
															{
																"expression": {
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 933,
																		"name": "chosenAPY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "4827:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 934,
																		"name": "apy6Months",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "4839:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4827:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 936,
																"nodeType": "ExpressionStatement",
																"src": "4827:22:7"
															}
														]
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "4638:396:7",
												"trueBody": {
													"id": 925,
													"nodeType": "Block",
													"src": "4659:87:7",
													"statements": [
														{
															"expression": {
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 917,
																	"name": "chosenLock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "4673:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 918,
																	"name": "LOCK_3_MONTHS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "4686:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4673:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "4673:26:7"
														},
														{
															"expression": {
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 921,
																	"name": "chosenAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "4713:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 922,
																	"name": "apy3Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "4725:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4713:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"nodeType": "ExpressionStatement",
															"src": "4713:22:7"
														}
													]
												}
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getLockInfo",
									"nameLocation": "4505:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "lockChoice",
												"nameLocation": "4526:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4518:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4517:20:7"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "chosenLock",
												"nameLocation": "4593:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4585:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4585:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "chosenAPY",
												"nameLocation": "4613:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4605:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4605:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4584:39:7"
									},
									"scope": 1054,
									"src": "4496:544:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "5210:285:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 971,
														"name": "apy3Months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "5267:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 972,
														"name": "_apy3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5281:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5267:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "5263:68:7",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "5288:43:7",
													"statements": [
														{
															"expression": {
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 974,
																	"name": "apy3Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "5302:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 975,
																	"name": "_apy3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "5315:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5302:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "5302:18:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "apy6Months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "5344:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 981,
														"name": "_apy6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5358:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5344:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "5340:68:7",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "5365:43:7",
													"statements": [
														{
															"expression": {
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 983,
																	"name": "apy6Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "5379:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 984,
																	"name": "_apy6",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "5392:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5379:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "5379:18:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "apy12Months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "5421:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 990,
														"name": "_apy12",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "5436:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5421:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "IfStatement",
												"src": "5417:72:7",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "5444:45:7",
													"statements": [
														{
															"expression": {
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 992,
																	"name": "apy12Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "5458:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 993,
																	"name": "_apy12",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "5472:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5458:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "5458:20:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "5046:46:7",
										"text": " @dev Admin can update APYs."
									},
									"functionSelector": "765ef4cc",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 968,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "5194:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 967,
												"name": "onlyRole",
												"nameLocations": [
													"5185:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5185:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5185:20:7"
										}
									],
									"name": "setAPYs",
									"nameLocation": "5106:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_apy3",
												"nameLocation": "5122:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5114:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_apy6",
												"nameLocation": "5137:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5129:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_apy12",
												"nameLocation": "5152:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5144:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5113:46:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5210:0:7"
									},
									"scope": 1054,
									"src": "5097:398:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "5679:180:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5693:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5707:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5699:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1013,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5699:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5699:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5693:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "5689:45:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1018,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5718:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5718:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1020,
													"nodeType": "RevertStatement",
													"src": "5711:23:7"
												}
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5749:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "5744:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1022,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5744:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"arguments": [
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "5789:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "5793:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1025,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "5766:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1024,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "5759:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5759:20:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5780:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "5759:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5759:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5744:56:7"
											},
											{
												"condition": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5814:8:7",
													"subExpression": {
														"id": 1032,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5815:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "5810:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1034,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "5831:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5831:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1036,
													"nodeType": "RevertStatement",
													"src": "5824:28:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "5501:51:7",
										"text": " @dev Rescue any leftover tokens."
									},
									"functionSelector": "b37fd190",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1009,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "5663:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1008,
												"name": "onlyRole",
												"nameLocations": [
													"5654:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5654:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5654:20:7"
										}
									],
									"name": "rescueTokens",
									"nameLocation": "5566:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5587:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5579:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5579:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5609:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5601:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5625:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5617:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5578:50:7"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5679:0:7"
									},
									"scope": 1054,
									"src": "5557:302:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "6000:37:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1048,
														"name": "_stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "6017:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct WallyStaking.StakeInfo storage ref[] storage ref)"
														}
													},
													"id": 1050,
													"indexExpression": {
														"id": 1049,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "6025:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6017:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage",
														"typeString": "struct WallyStaking.StakeInfo storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1051,
												"nodeType": "Return",
												"src": "6010:20:7"
											}
										]
									},
									"functionSelector": "7ba6f458",
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakes",
									"nameLocation": "5933:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5951:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5943:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:14:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5980:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct WallyStaking.StakeInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1044,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1043,
															"name": "StakeInfo",
															"nameLocations": [
																"5980:9:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 646,
															"src": "5980:9:7"
														},
														"referencedDeclaration": 646,
														"src": "5980:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo"
														}
													},
													"id": 1045,
													"nodeType": "ArrayTypeName",
													"src": "5980:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
														"typeString": "struct WallyStaking.StakeInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5979:20:7"
									},
									"scope": 1054,
									"src": "5924:113:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1055,
							"src": "807:5232:7",
							"usedErrors": [
								305,
								308,
								594,
								596,
								598,
								600,
								602,
								604
							],
							"usedEvents": [
								317,
								326,
								335,
								662,
								670
							]
						}
					],
					"src": "32:6007:7"
				},
				"id": 7
			},
			"remix_accounts.sol": {
				"ast": {
					"absolutePath": "remix_accounts.sol",
					"exportedSymbols": {
						"TestsAccounts": [
							1166
						]
					},
					"id": 1167,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1056,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestsAccounts",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1166,
							"linearizedBaseContracts": [
								1166
							],
							"name": "TestsAccounts",
							"nameLocation": "79:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "161:987:8",
										"statements": [
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "accounts",
														"nameLocation": "190:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1164,
														"src": "171:27:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
															"typeString": "address[15]"
														},
														"typeName": {
															"baseType": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "171:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1067,
															"length": {
																"hexValue": "3135",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "179:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"nodeType": "ArrayTypeName",
															"src": "171:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_storage_ptr",
																"typeString": "address[15]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"nodeType": "VariableDeclarationStatement",
												"src": "171:27:8"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1070,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "202:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1072,
														"indexExpression": {
															"hexValue": "30",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "211:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "202:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "216:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
													},
													"src": "202:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "202:56:8"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1076,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "263:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1078,
														"indexExpression": {
															"hexValue": "31",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "272:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "263:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "277:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
													},
													"src": "263:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "263:56:8"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1082,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "324:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1084,
														"indexExpression": {
															"hexValue": "32",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "333:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "324:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "338:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
													},
													"src": "324:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "324:56:8"
											},
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1088,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "385:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1090,
														"indexExpression": {
															"hexValue": "33",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "394:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "385:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837383733314433436136623745333461433046383234633432613763433138413439356361626142",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "399:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB"
													},
													"src": "385:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "385:56:8"
											},
											{
												"expression": {
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1094,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "446:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1096,
														"indexExpression": {
															"hexValue": "34",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "455:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "446:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "460:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
													},
													"src": "446:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "446:56:8"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1100,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "507:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1102,
														"indexExpression": {
															"hexValue": "35",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "516:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "507:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831374636414438456639383232393735373943323033303639433144626646453433343863333732",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "521:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x17F6AD8Ef982297579C203069C1DbfFE4348c372"
													},
													"src": "507:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "507:56:8"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1106,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "568:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1108,
														"indexExpression": {
															"hexValue": "36",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "577:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "568:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835633642306637426633453763653034363033394264384641426466443366394635303231363738",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "582:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678"
													},
													"src": "568:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "568:56:8"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1112,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "629:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1114,
														"indexExpression": {
															"hexValue": "37",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "638:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "629:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830334336466345443437386342624339613446414233346546396634303736373733394431466637",
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "643:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7"
													},
													"src": "629:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "629:56:8"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1118,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "690:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1120,
														"indexExpression": {
															"hexValue": "38",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "699:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "690:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831614530454133346137324439343461384337363033466642336543333061363636394534353443",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "704:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C"
													},
													"src": "690:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "690:56:8"
											},
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1124,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "751:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1126,
														"indexExpression": {
															"hexValue": "39",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "760:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "751:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830413039384564613031436539326666344134434362374134664646623541343345424337304443",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "765:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC"
													},
													"src": "751:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "751:56:8"
											},
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1130,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "812:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1132,
														"indexExpression": {
															"hexValue": "3130",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "821:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "812:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307843413335623764393135343538454635343061446536303638644665324634344538666137333363",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "827:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c"
													},
													"src": "812:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "812:57:8"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1136,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "874:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1138,
														"indexExpression": {
															"hexValue": "3131",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "883:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "874:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831343732334130394143666636443241363044636446376141344146663330384644444331363043",
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "889:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C"
													},
													"src": "874:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "874:57:8"
											},
											{
												"expression": {
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1142,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "936:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1144,
														"indexExpression": {
															"hexValue": "3132",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "936:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834423038393762303531336664433743353431423664394437453932394334653533363444326442",
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "951:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB"
													},
													"src": "936:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "936:57:8"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1148,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "998:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1150,
														"indexExpression": {
															"hexValue": "3133",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1007:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_13_by_1",
																"typeString": "int_const 13"
															},
															"value": "13"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "998:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835383330333144313131336144343134463032353736424436616661426662333032313430323235",
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1013:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x583031D1113aD414F02576BD6afaBfb302140225"
													},
													"src": "998:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "998:57:8"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1154,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "1060:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
																"typeString": "address[15] memory"
															}
														},
														"id": 1156,
														"indexExpression": {
															"hexValue": "3134",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															},
															"value": "14"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1060:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307864443837306641316237433437303046324244376634343233383832314332366637333932313438",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xdD870fA1b7C4700F2BD7f44238821C26f7392148"
													},
													"src": "1060:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "1060:57:8"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1160,
														"name": "accounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1126:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$15_memory_ptr",
															"typeString": "address[15] memory"
														}
													},
													"id": 1162,
													"indexExpression": {
														"id": 1161,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1135:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1126:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1163,
												"nodeType": "Return",
												"src": "1119:22:8"
											}
										]
									},
									"functionSelector": "ce88b145",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccount",
									"nameLocation": "108:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "124:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "119:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:12:8"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "152:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:9:8"
									},
									"scope": 1166,
									"src": "99:1049:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1167,
							"src": "71:1079:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1114:8"
				},
				"id": 8
			},
			"remix_tests.sol": {
				"ast": {
					"absolutePath": "remix_tests.sol",
					"exportedSymbols": {
						"Assert": [
							1917
						]
					},
					"id": 1918,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1168,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Assert",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1917,
							"linearizedBaseContracts": [
								1917
							],
							"name": "Assert",
							"nameLocation": "79:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "bbf85d637d70ccacc5b8edb602351ba3dec7bc069d69235c3529ef3f453d01f1",
									"id": 1176,
									"name": "AssertionEvent",
									"nameLocation": "97:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "122:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "117:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "117:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "141:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "134:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "134:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "161:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "154:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "154:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:64:9"
									},
									"src": "91:85:9"
								},
								{
									"anonymous": false,
									"eventSelector": "968b7a5d7c5bcc2e8f9f583456a62c310b1b4e509906c1c1bb1a5aff86cc1e1a",
									"id": 1188,
									"name": "AssertionEventUint",
									"nameLocation": "186:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "215:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "210:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "210:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "234:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "227:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "227:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "254:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "247:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "247:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "278:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "270:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "300:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "292:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:108:9"
									},
									"src": "180:133:9"
								},
								{
									"anonymous": false,
									"eventSelector": "06c5fd13661d229189d43a6a38e86721af51ed7065a4b6f43da4bd8cd1b18151",
									"id": 1200,
									"name": "AssertionEventInt",
									"nameLocation": "323:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "351:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "346:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "370:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "363:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "390:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "383:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "383:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "413:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "406:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1195,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "434:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "427:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1197,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "427:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:106:9"
									},
									"src": "317:130:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f7b49aa0711ceec1ded951e7e1e0f5068e1b494431e8aafd4afd3c5fce1bcea5",
									"id": 1212,
									"name": "AssertionEventBool",
									"nameLocation": "457:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "486:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "481:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "505:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "498:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1203,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "518:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "518:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "546:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "541:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "541:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "565:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "560:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:102:9"
									},
									"src": "451:127:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ac36fadfa7a97083276a489f3e00cb5d4fcd13bbfdb3a78a0014fd48d4b46d9b",
									"id": 1224,
									"name": "AssertionEventAddress",
									"nameLocation": "588:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "620:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "615:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "639:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "632:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "632:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "659:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "652:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "683:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "675:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "705:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "697:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:108:9"
									},
									"src": "582:136:9"
								},
								{
									"anonymous": false,
									"eventSelector": "80ccaff7f7d9b95ab49ddd43778ee01cfda842a6269bed42e4e37929bc57fd28",
									"id": 1236,
									"name": "AssertionEventBytes32",
									"nameLocation": "728:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "760:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "755:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "779:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "772:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "799:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "792:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "792:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "823:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "815:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "845:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "837:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:108:9"
									},
									"src": "722:136:9"
								},
								{
									"anonymous": false,
									"eventSelector": "772eb34cc47d8c18199f27c5bfdb20838544f0058ef8afdd2debec5f6edb455f",
									"id": 1248,
									"name": "AssertionEventString",
									"nameLocation": "868:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "899:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "894:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "918:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "911:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "911:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "938:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "931:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "931:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "961:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "954:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "954:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "982:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "975:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1245,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "975:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:106:9"
									},
									"src": "862:133:9"
								},
								{
									"anonymous": false,
									"eventSelector": "14bc841bf51d20c0dc7caa87b92cc8ffff7a0427ab3f16c1800f89f1cd14afe8",
									"id": 1260,
									"name": "AssertionEventUintInt",
									"nameLocation": "1005:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "1037:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1032:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1032:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1056:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1049:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "1076:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1069:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1069:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "1100:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1092:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "1121:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1114:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:107:9"
									},
									"src": "999:135:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1aee88e0b11c6f778ee0be69b5a108735a20e3d68f5729c851f81e10fb0357e2",
									"id": 1272,
									"name": "AssertionEventIntUint",
									"nameLocation": "1144:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"indexed": false,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "1176:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1171:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1195:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1188:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1188:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": false,
												"mutability": "mutable",
												"name": "methodName",
												"nameLocation": "1215:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1208:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1208:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "returned",
												"nameLocation": "1238:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1231:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1267,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": false,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "1260:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1252:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:107:9"
									},
									"src": "1138:135:9"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "1349:69:9",
										"statements": [
											{
												"expression": {
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1281,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "1355:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1282,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "1364:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1355:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "1355:10:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1286,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "1391:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1287,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "1399:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6f6b",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1408:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14502d3ab34ae28d404da8f6ec0501c6f295f66caa41e122cfa9b1291bc0f9e8",
																"typeString": "literal_string \"ok\""
															},
															"value": "ok"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_14502d3ab34ae28d404da8f6ec0501c6f295f66caa41e122cfa9b1291bc0f9e8",
																"typeString": "literal_string \"ok\""
															}
														],
														"id": 1285,
														"name": "AssertionEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1376:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory,string memory)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "EmitStatement",
												"src": "1371:42:9"
											}
										]
									},
									"functionSelector": "39df137f",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ok",
									"nameLocation": "1286:2:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1294:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1289:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1289:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1311:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1297:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:31:9"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1341:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1336:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1336:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:13:9"
									},
									"scope": 1917,
									"src": "1277:141:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "1511:89:9",
										"statements": [
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1303,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "1517:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1304,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "1527:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1305,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "1532:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1527:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1307,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1526:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "1517:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1311,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "1564:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1312,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "1572:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1314,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1590:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1315,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "1593:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1545:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1545:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "EmitStatement",
												"src": "1540:55:9"
											}
										]
									},
									"functionSelector": "abcd7960",
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "1431:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1456:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1448:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1473:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1459:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1436:45:9"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1503:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1498:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1498:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:13:9"
									},
									"scope": 1917,
									"src": "1422:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "1691:88:9",
										"statements": [
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1330,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "1697:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1331,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "1707:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1332,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "1712:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1707:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1334,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1706:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "1697:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1338,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "1743:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1339,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1760:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1341,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "1769:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1342,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "1772:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1337,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "1725:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "EmitStatement",
												"src": "1720:54:9"
											}
										]
									},
									"functionSelector": "f5bae6b6",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "1613:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1626:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1619:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1320,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1619:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1636:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1629:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1322,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1653:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1639:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1639:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:43:9"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1683:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1678:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1678:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:13:9"
									},
									"scope": 1917,
									"src": "1604:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "1866:89:9",
										"statements": [
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1357,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "1872:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1358,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "1882:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1359,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "1887:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1882:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1361,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1881:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1872:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "1872:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1365,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "1919:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1366,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "1927:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1936:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1368,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "1945:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1369,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "1948:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1364,
														"name": "AssertionEventBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "1900:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bool,bool)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1900:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "EmitStatement",
												"src": "1895:55:9"
											}
										]
									},
									"functionSelector": "767392b3",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "1792:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1803:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1798:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1798:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1811:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1806:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1806:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1828:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1814:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1814:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1797:39:9"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1858:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1853:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1853:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:13:9"
									},
									"scope": 1917,
									"src": "1783:172:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "2460:92:9",
										"statements": [
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1384,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "2466:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1385,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "2476:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1386,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "2481:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2476:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1388,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2475:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2466:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "2466:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1392,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1393,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "2524:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2533:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1395,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "2542:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "2545:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1391,
														"name": "AssertionEventAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "2494:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bool,string memory,string memory,address,address)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2494:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "EmitStatement",
												"src": "2489:58:9"
											}
										]
									},
									"functionSelector": "bfba5dd6",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2380:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2394:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2386:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2405:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2397:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2422:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2408:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1378,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2385:45:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2452:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2447:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2447:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:13:9"
									},
									"scope": 1917,
									"src": "2371:181:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2645:92:9",
										"statements": [
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1411,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "2651:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1412,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "2661:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1413,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "2666:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2661:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1415,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2660:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2651:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "2651:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1419,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "2701:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1420,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "2709:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2718:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1422,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "2727:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1423,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "2730:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1418,
														"name": "AssertionEventBytes32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "2679:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bytes32,bytes32)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "EmitStatement",
												"src": "2674:58:9"
											}
										]
									},
									"functionSelector": "ea79dd79",
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2565:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2579:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2571:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2590:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2582:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2607:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2593:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2593:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:45:9"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2637:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2632:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2632:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:13:9"
									},
									"scope": 1917,
									"src": "2556:181:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "2842:151:9",
										"statements": [
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1438,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2849:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1442,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1429,
																					"src": "2886:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1440,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2869:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2873:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2869:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2869:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1439,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2859:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2859:30:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1448,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "2920:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1446,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2903:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2907:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2903:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2903:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1445,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2893:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2893:30:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2859:64:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1452,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2858:66:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2849:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "2849:75:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1456,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "2957:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1457,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "2965:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "657175616c",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2974:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															"value": "equal"
														},
														{
															"id": 1459,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "2983:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1460,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2986:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_2602ee1ebf372b25bffbd066c8358edb7f611f67d29a83d531f51d21a4ab2e89",
																"typeString": "literal_string \"equal\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1455,
														"name": "AssertionEventString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2936:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory,string memory,string memory,string memory)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2936:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "EmitStatement",
												"src": "2931:57:9"
											}
										]
									},
									"functionSelector": "e8c2cb16",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2750:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2770:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2756:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2773:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2773:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2804:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2790:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:57:9"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2834:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2829:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:13:9"
									},
									"scope": 1917,
									"src": "2741:252:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "3089:92:9",
										"statements": [
											{
												"expression": {
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1475,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "3095:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1476,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "3105:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1477,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "3110:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3105:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1479,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3104:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3095:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "3095:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1483,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "3142:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1484,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "3150:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3159:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1486,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "3171:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1487,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "3174:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1482,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3123:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "EmitStatement",
												"src": "3118:58:9"
											}
										]
									},
									"functionSelector": "561015e2",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3006:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3023:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3015:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3034:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3026:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3051:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3037:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3037:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:45:9"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3081:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3076:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:13:9"
									},
									"scope": 1917,
									"src": "2997:184:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "3275:91:9",
										"statements": [
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1502,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "3281:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1503,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "3291:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1504,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "3296:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3291:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1506,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3290:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3281:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "3281:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1510,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "3327:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1511,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "3335:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3344:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1513,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3356:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1514,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3359:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1509,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "3309:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3309:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "EmitStatement",
												"src": "3304:57:9"
											}
										]
									},
									"functionSelector": "4e3e4035",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3194:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "3203:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1492,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3203:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3220:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "3213:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1494,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3237:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "3223:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3223:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:43:9"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3267:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "3262:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3262:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:13:9"
									},
									"scope": 1917,
									"src": "3185:181:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "3456:92:9",
										"statements": [
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1529,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "3462:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1530,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "3472:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1531,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "3477:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3472:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1533,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3471:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3462:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "3462:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1537,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "3509:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1538,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "3517:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3526:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1540,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3538:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1541,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "3541:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1536,
														"name": "AssertionEventBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "3490:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bool,bool)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "EmitStatement",
												"src": "3485:58:9"
											}
										]
									},
									"functionSelector": "44781a00",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3379:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3393:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3388:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3388:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3401:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3396:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3396:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3418:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3404:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3404:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:39:9"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3448:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3443:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3443:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3442:13:9"
									},
									"scope": 1917,
									"src": "3370:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "4062:95:9",
										"statements": [
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1556,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "4068:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1557,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "4078:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1558,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "4083:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4078:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1560,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4077:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4068:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "4068:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1564,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1565,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1567,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "4147:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "4150:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1563,
														"name": "AssertionEventAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4096:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bool,string memory,string memory,address,address)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "EmitStatement",
												"src": "4091:61:9"
											}
										]
									},
									"functionSelector": "b8f28531",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "3979:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3996:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3988:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4007:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3999:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4010:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4010:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3987:45:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4054:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4049:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4049:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:13:9"
									},
									"scope": 1917,
									"src": "3970:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "4253:95:9",
										"statements": [
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1583,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "4259:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1584,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "4269:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1585,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "4274:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4268:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4259:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "4259:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1591,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "4309:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1592,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "4317:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4326:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1594,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "4338:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1595,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "4341:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1590,
														"name": "AssertionEventBytes32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "4287:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bool,string memory,string memory,bytes32,bytes32)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "EmitStatement",
												"src": "4282:61:9"
											}
										]
									},
									"functionSelector": "556fe562",
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "4170:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4187:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "4179:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4198:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "4190:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4215:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "4201:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4178:45:9"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "4240:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1580,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4240:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:13:9"
									},
									"scope": 1917,
									"src": "4161:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "4456:152:9",
										"statements": [
											{
												"expression": {
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1610,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "4462:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1614,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1601,
																					"src": "4499:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1612,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4482:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4486:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4482:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4482:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1611,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4472:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4472:30:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1620,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1603,
																					"src": "4533:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1618,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4516:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4520:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4516:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4516:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1617,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4506:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4506:30:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4472:64:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1624,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4471:66:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4462:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "4462:75:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1628,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "4569:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1629,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "4577:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6e6f74457175616c",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4586:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															"value": "notEqual"
														},
														{
															"id": 1631,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "4598:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1632,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "4601:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9221cc5593ebbd03a3c08e5d1bf5bfda46e44ce5d969a4cf46cd32ca4bbd45ce",
																"typeString": "literal_string \"notEqual\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1627,
														"name": "AssertionEventString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "4548:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory,string memory,string memory,string memory)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "EmitStatement",
												"src": "4543:60:9"
											}
										]
									},
									"functionSelector": "49f97939",
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notEqual",
									"nameLocation": "4361:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4384:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "4370:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4370:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4401:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "4387:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4387:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4418:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "4404:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4404:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4369:57:9"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4448:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "4443:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4443:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:13:9"
									},
									"scope": 1917,
									"src": "4352:256:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "4765:94:9",
										"statements": [
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1647,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "4771:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1648,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "4781:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1649,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "4785:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4781:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1651,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4780:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4771:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "4771:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1655,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "4817:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1656,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "4825:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4834:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1658,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "4849:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1659,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "4852:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1654,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "4798:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "EmitStatement",
												"src": "4793:61:9"
											}
										]
									},
									"functionSelector": "a079f1a3",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "4679:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4699:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "4691:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4710:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "4702:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4727:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "4713:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4713:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:45:9"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "4752:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4752:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4751:13:9"
									},
									"scope": 1917,
									"src": "4670:189:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "4956:93:9",
										"statements": [
											{
												"expression": {
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1674,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "4962:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1675,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "4972:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1676,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "4976:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4972:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1678,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4971:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4962:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "4962:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1682,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "5007:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1683,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "5015:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5024:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1685,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "5039:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1686,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "5042:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1681,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "4989:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "EmitStatement",
												"src": "4984:60:9"
											}
										]
									},
									"functionSelector": "9c0b4336",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "4872:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4891:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "4884:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1664,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4884:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4901:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "4894:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1666,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4894:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "4918:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "4904:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4904:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4883:43:9"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4948:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "4943:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4943:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:13:9"
									},
									"scope": 1917,
									"src": "4863:186:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "5193:215:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "5202:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5210:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5206:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1702,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "5206:3:9",
																"typeDescriptions": {}
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5206:6:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5202:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "5297:37:9",
													"statements": [
														{
															"expression": {
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1712,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "5305:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1713,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1692,
																				"src": "5315:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1716,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1694,
																						"src": "5324:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5319:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1714,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "5319:4:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5319:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5315:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1719,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5314:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5305:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1721,
															"nodeType": "ExpressionStatement",
															"src": "5305:22:9"
														}
													]
												},
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "5199:135:9",
												"trueBody": {
													"id": 1711,
													"nodeType": "Block",
													"src": "5214:77:9",
													"statements": [
														{
															"expression": {
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1707,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "5271:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5280:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5271:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1710,
															"nodeType": "ExpressionStatement",
															"src": "5271:13:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1725,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "5366:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1726,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "5374:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1728,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "5398:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1729,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "5401:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1724,
														"name": "AssertionEventUintInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "5344:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,int256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5344:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "EmitStatement",
												"src": "5339:64:9"
											}
										]
									},
									"functionSelector": "8c45cb97",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "5108:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5128:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5120:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5138:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5131:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5131:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "5155:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5141:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5141:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:44:9"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5185:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5180:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5180:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:13:9"
									},
									"scope": 1917,
									"src": "5099:309:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "5505:216:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1744,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "5514:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5522:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5518:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1745,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "5518:3:9",
																"typeDescriptions": {}
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5518:6:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5514:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1765,
													"nodeType": "Block",
													"src": "5610:37:9",
													"statements": [
														{
															"expression": {
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1755,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "5618:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1758,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "5633:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5628:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1756,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "5628:4:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5628:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 1760,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1737,
																				"src": "5638:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5628:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1762,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5627:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5618:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1764,
															"nodeType": "ExpressionStatement",
															"src": "5618:22:9"
														}
													]
												},
												"id": 1766,
												"nodeType": "IfStatement",
												"src": "5511:136:9",
												"trueBody": {
													"id": 1754,
													"nodeType": "Block",
													"src": "5526:78:9",
													"statements": [
														{
															"expression": {
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1750,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "5583:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5592:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5583:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1753,
															"nodeType": "ExpressionStatement",
															"src": "5583:14:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1768,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "5679:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1769,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "5687:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "677265617465725468616e",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5696:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															"value": "greaterThan"
														},
														{
															"id": 1771,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "5711:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1772,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "5714:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_50a97f23c5119bdada150dd747dad0c52d0fcca899436a501c98e865f82ff03f",
																"typeString": "literal_string \"greaterThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1767,
														"name": "AssertionEventIntUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "5657:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,uint256)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5657:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1774,
												"nodeType": "EmitStatement",
												"src": "5652:64:9"
											}
										]
									},
									"functionSelector": "0897e4c7",
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "greaterThan",
									"nameLocation": "5420:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5439:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "5432:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1734,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5450:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "5442:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "5467:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "5453:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5453:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5431:44:9"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5497:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "5492:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5492:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5491:13:9"
									},
									"scope": 1917,
									"src": "5411:310:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "5875:93:9",
										"statements": [
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1787,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "5881:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1788,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "5891:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1789,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "5895:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5891:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1791,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5890:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5881:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "5881:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1795,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "5927:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1796,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "5935:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5944:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1798,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "5958:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1799,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "5961:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1794,
														"name": "AssertionEventUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "5908:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,uint256)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5908:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1801,
												"nodeType": "EmitStatement",
												"src": "5903:60:9"
											}
										]
									},
									"functionSelector": "aea88952",
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "5790:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5809:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "5801:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5820:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "5812:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "5837:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "5823:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5823:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:45:9"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5867:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "5862:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5861:13:9"
									},
									"scope": 1917,
									"src": "5781:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "6064:92:9",
										"statements": [
											{
												"expression": {
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1814,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "6070:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1815,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "6080:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1816,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "6084:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "6080:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1818,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6079:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6070:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "6070:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1822,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "6115:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1823,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6123:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6132:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1825,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "6146:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1826,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "6149:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1821,
														"name": "AssertionEventInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "6097:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,int256)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6097:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1828,
												"nodeType": "EmitStatement",
												"src": "6092:59:9"
											}
										]
									},
									"functionSelector": "44b7f248",
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "5981:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5999:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "5992:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1804,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6009:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6002:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1806,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6002:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "6026:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6012:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6012:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:43:9"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6056:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6051:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6051:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6050:13:9"
									},
									"scope": 1917,
									"src": "5972:184:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "6299:213:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1841,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "6308:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6316:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6312:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1842,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "6312:3:9",
																"typeDescriptions": {}
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6312:6:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6308:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1862,
													"nodeType": "Block",
													"src": "6402:37:9",
													"statements": [
														{
															"expression": {
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1852,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "6410:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1853,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1832,
																				"src": "6420:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1856,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1834,
																						"src": "6429:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1855,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6424:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1854,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "6424:4:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6424:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6420:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1859,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6419:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6410:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1861,
															"nodeType": "ExpressionStatement",
															"src": "6410:22:9"
														}
													]
												},
												"id": 1863,
												"nodeType": "IfStatement",
												"src": "6305:134:9",
												"trueBody": {
													"id": 1851,
													"nodeType": "Block",
													"src": "6320:76:9",
													"statements": [
														{
															"expression": {
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1847,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "6375:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6384:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6375:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1850,
															"nodeType": "ExpressionStatement",
															"src": "6375:14:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1865,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "6471:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1866,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "6479:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6488:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1868,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "6502:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1869,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "6505:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1864,
														"name": "AssertionEventUintInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "6449:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_int256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,uint256,int256)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6449:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "EmitStatement",
												"src": "6444:63:9"
											}
										]
									},
									"functionSelector": "18211bfb",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "6215:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6234:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "6226:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6244:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "6237:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1833,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6237:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "6261:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "6247:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1835,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6247:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:44:9"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6291:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "6286:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6286:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6285:13:9"
									},
									"scope": 1917,
									"src": "6206:306:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "6609:212:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1884,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "6618:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6626:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6622:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1885,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "6622:3:9",
																"typeDescriptions": {}
															}
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6622:6:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6618:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "6711:37:9",
													"statements": [
														{
															"expression": {
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1895,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "6719:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1898,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1875,
																						"src": "6734:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6729:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1896,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "6729:4:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6729:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1900,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1877,
																				"src": "6739:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6729:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1902,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6728:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6719:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1904,
															"nodeType": "ExpressionStatement",
															"src": "6719:22:9"
														}
													]
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "6615:133:9",
												"trueBody": {
													"id": 1894,
													"nodeType": "Block",
													"src": "6630:75:9",
													"statements": [
														{
															"expression": {
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1890,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "6685:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6694:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6685:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1893,
															"nodeType": "ExpressionStatement",
															"src": "6685:13:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1908,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "6780:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1909,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "6788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "6c65737365725468616e",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6797:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															"value": "lesserThan"
														},
														{
															"id": 1911,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "6811:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1912,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "6814:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_6eacbbc162a376a1056ee46defb5ad8c0513de0d938dbfce38c05fc663a8556d",
																"typeString": "literal_string \"lesserThan\""
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1907,
														"name": "AssertionEventIntUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "6758:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (bool,string memory,string memory,int256,uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6758:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "EmitStatement",
												"src": "6753:63:9"
											}
										]
									},
									"functionSelector": "77c6d463",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lesserThan",
									"nameLocation": "6525:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6543:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "6536:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6536:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6554:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "6546:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6546:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "6571:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "6557:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6557:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6535:44:9"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6601:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "6596:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6596:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6595:13:9"
									},
									"scope": 1917,
									"src": "6516:305:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1918,
							"src": "71:6752:9",
							"usedErrors": [],
							"usedEvents": [
								1176,
								1188,
								1200,
								1212,
								1224,
								1236,
								1248,
								1260,
								1272
							]
						}
					],
					"src": "37:6787:9"
				},
				"id": 9
			},
			"tests/WallyStaking_test.sol": {
				"ast": {
					"absolutePath": "tests/WallyStaking_test.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"AlreadyWithdrawn": [
							598
						],
						"Assert": [
							1917
						],
						"Context": [
							551
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							521
						],
						"InsufficientBalance": [
							602
						],
						"InvalidAddress": [
							604
						],
						"InvalidLockChoice": [
							596
						],
						"LockNotOver": [
							600
						],
						"ReentrancyGuard": [
							443
						],
						"TestsAccounts": [
							1166
						],
						"WallyStaking": [
							1054
						],
						"ZeroAmount": [
							594
						],
						"testSuite": [
							2035
						]
					},
					"id": 2036,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1919,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:32:10"
						},
						{
							"absolutePath": "remix_tests.sol",
							"file": "remix_tests.sol",
							"id": 1920,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 1918,
							"src": "129:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "remix_accounts.sol",
							"file": "remix_accounts.sol",
							"id": 1921,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 1167,
							"src": "343:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/WallyStaking.sol",
							"file": "../contracts/WallyStaking.sol",
							"id": 1922,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 1055,
							"src": "372:39:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "testSuite",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "testSuite",
							"nameLocation": "520:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "701:107:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "763:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "758:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1929,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "758:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "758:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "772:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "767:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1933,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "767:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "312073686f756c6420626520657175616c20746f2031",
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "776:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce5b66e712fd209701b261bab5d02d6006f943c117c975776d7bc101e6ea1c86",
																"typeString": "literal_string \"1 should be equal to 1\""
															},
															"value": "1 should be equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_ce5b66e712fd209701b261bab5d02d6006f943c117c975776d7bc101e6ea1c86",
																"typeString": "literal_string \"1 should be equal to 1\""
															}
														],
														"expression": {
															"id": 1926,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "745:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "752:5:10",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1319,
														"src": "745:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "745:56:10"
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "537:131:10",
										"text": "'beforeAll' runs before all other tests\n More special functions are: 'beforeEach', 'beforeAll', 'afterEach' & 'afterAll'"
									},
									"functionSelector": "7fea0d4b",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAll",
									"nameLocation": "682:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:10"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:10"
									},
									"scope": 2035,
									"src": "673:135:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "845:304:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "961:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "966:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "961:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73686f756c642062652074727565",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "969:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b12f9c5bc4a82ca1ad7ddb67124872006aff2994f603ddbee11475a3ecd79c21",
																"typeString": "literal_string \"should be true\""
															},
															"value": "should be true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b12f9c5bc4a82ca1ad7ddb67124872006aff2994f603ddbee11475a3ecd79c21",
																"typeString": "literal_string \"should be true\""
															}
														],
														"expression": {
															"id": 1944,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "951:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "958:2:10",
														"memberName": "ok",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1292,
														"src": "951:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bool,string memory) returns (bool)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "951:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1015:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1956,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1015:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1015:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1029:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1024:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1960,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1024:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1024:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "322073686f756c642062652067726561746572207468616e20746f2031",
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1033:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4aa1f787db3fcfa9f54b0253d689d521f7ac16850a0d189839b4a572076119bc",
																"typeString": "literal_string \"2 should be greater than to 1\""
															},
															"value": "2 should be greater than to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_4aa1f787db3fcfa9f54b0253d689d521f7ac16850a0d189839b4a572076119bc",
																"typeString": "literal_string \"2 should be greater than to 1\""
															}
														],
														"expression": {
															"id": 1953,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "996:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1003:11:10",
														"memberName": "greaterThan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1663,
														"src": "996:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "996:69:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1098:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1093:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1970,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1093:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1093:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1107:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1102:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1974,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1102:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1102:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "322073686f756c64206265206c6573736572207468616e20746f2033",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1111:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afb127f3091a592e4442d3cc2f229397fb413d593c528e8b3f7fb127b3c43be8",
																"typeString": "literal_string \"2 should be lesser than to 3\""
															},
															"value": "2 should be lesser than to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_afb127f3091a592e4442d3cc2f229397fb413d593c528e8b3f7fb127b3c43be8",
																"typeString": "literal_string \"2 should be lesser than to 3\""
															}
														],
														"expression": {
															"id": 1967,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "1075:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1082:10:10",
														"memberName": "lesserThan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "1075:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "1075:67:10"
											}
										]
									},
									"functionSelector": "011e6492",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSuccess",
									"nameLocation": "823:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:2:10"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:10"
									},
									"scope": 2035,
									"src": "814:335:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "1207:97:10",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1293:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1986,
												"id": 1988,
												"nodeType": "Return",
												"src": "1286:11:10"
											}
										]
									},
									"functionSelector": "12d487ea",
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSuccess2",
									"nameLocation": "1164:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:2:10"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "1201:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1201:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:6:10"
									},
									"scope": 2035,
									"src": "1155:149:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1345:80:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1371:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1996,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1371:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1385:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1380:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2000,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1380:4:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "312073686f756c64206e6f7420626520657175616c20746f2031",
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1907b6a5d0bd9cd45a052fa707f99df6b74f937edef780db8347b7cf4acb592",
																"typeString": "literal_string \"1 should not be equal to 1\""
															},
															"value": "1 should not be equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_d1907b6a5d0bd9cd45a052fa707f99df6b74f937edef780db8347b7cf4acb592",
																"typeString": "literal_string \"1 should not be equal to 1\""
															}
														],
														"expression": {
															"id": 1993,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "1355:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1362:8:10",
														"memberName": "notEqual",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1491,
														"src": "1355:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2006,
												"nodeType": "ExpressionStatement",
												"src": "1355:63:10"
											}
										]
									},
									"functionSelector": "36c00656",
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkFailure",
									"nameLocation": "1323:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:2:10"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:0:10"
									},
									"scope": 2035,
									"src": "1314:111:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "1634:196:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1710:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1714:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1710:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"id": 2017,
																	"name": "TestsAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "1722:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_TestsAccounts_$1166_$",
																		"typeString": "type(library TestsAccounts)"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1736:10:10",
																"memberName": "getAccount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1165,
																"src": "1722:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) pure returns (address)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:27:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "496e76616c69642073656e646572",
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1751:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0",
																"typeString": "literal_string \"Invalid sender\""
															},
															"value": "Invalid sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0",
																"typeString": "literal_string \"Invalid sender\""
															}
														],
														"expression": {
															"id": 2012,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "1697:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1704:5:10",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1400,
														"src": "1697:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,address,string memory) returns (bool)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1697:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "1697:71:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2027,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1791:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1795:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1791:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1802:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1807:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"expression": {
															"id": 2024,
															"name": "Assert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "1778:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Assert_$1917_$",
																"typeString": "type(library Assert)"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1785:5:10",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1319,
														"src": "1778:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,string memory) returns (bool)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1778:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "1778:45:10"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "1431:152:10",
										"text": "Custom Transaction Context: https://remix-ide.readthedocs.io/en/latest/unittesting.html#customization\n #sender: account-1\n #value: 100"
									},
									"functionSelector": "9074416d",
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSenderAndValue",
									"nameLocation": "1597:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:2:10"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:0:10"
									},
									"scope": 2035,
									"src": "1588:242:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2036,
							"src": "511:1321:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1792:10"
				},
				"id": 10
			}
		}
	}
}