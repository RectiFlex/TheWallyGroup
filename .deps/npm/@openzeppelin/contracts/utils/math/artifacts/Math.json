{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220956f04121746896e117266789ab7865331ca44b7a8fd956c8bdc4e3527c8126064736f6c634300081c0033",
			"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH16 0x4121746896E117266789AB7865331CA PREVRANDAO 0xB7 0xA8 REVERT SWAP6 PUSH13 0x8BDC4E3527C8126064736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
			"sourceMap": "281:28026:1:-:0;;;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "5f80fdfea2646970667358221220956f04121746896e117266789ab7865331ca44b7a8fd956c8bdc4e3527c8126064736f6c634300081c0033",
			"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH16 0x4121746896E117266789AB7865331CA PREVRANDAO 0xB7 0xA8 REVERT SWAP6 PUSH13 0x8BDC4E3527C8126064736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
			"sourceMap": "281:28026:1:-:0;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "11400",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"internal": {
				"_zeroBytes(bytes memory)": "infinite",
				"average(uint256,uint256)": "infinite",
				"ceilDiv(uint256,uint256)": "infinite",
				"invMod(uint256,uint256)": "infinite",
				"invModPrime(uint256,uint256)": "infinite",
				"log10(uint256)": "infinite",
				"log10(uint256,enum Math.Rounding)": "infinite",
				"log2(uint256)": "infinite",
				"log2(uint256,enum Math.Rounding)": "infinite",
				"log256(uint256)": "infinite",
				"log256(uint256,enum Math.Rounding)": "infinite",
				"max(uint256,uint256)": "infinite",
				"min(uint256,uint256)": "infinite",
				"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
				"modExp(uint256,uint256,uint256)": "infinite",
				"mulDiv(uint256,uint256,uint256)": "infinite",
				"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
				"sqrt(uint256)": "infinite",
				"sqrt(uint256,enum Math.Rounding)": "infinite",
				"ternary(bool,uint256,uint256)": "infinite",
				"tryAdd(uint256,uint256)": "infinite",
				"tryDiv(uint256,uint256)": "infinite",
				"tryMod(uint256,uint256)": "infinite",
				"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
				"tryModExp(uint256,uint256,uint256)": "infinite",
				"tryMul(uint256,uint256)": "infinite",
				"trySub(uint256,uint256)": "infinite",
				"unsignedRoundsUp(enum Math.Rounding)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}