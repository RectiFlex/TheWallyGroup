{
	"id": "bfe4688768ecef7af5db7e02b25673db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/WallyStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\";\n\n/* -----------------------------------------------------\n * Custom Errors\n * ---------------------------------------------------- */\nerror InvalidAmount();\nerror InvalidDuration();\nerror StakingNotActive();\nerror StakingStillLocked();\nerror NoRewardsAvailable();\nerror InsufficientRewardsPool();\nerror InvalidZeroAddress();\nerror NoActiveStake();\nerror TransferFailed();\nerror DurationAlreadyExists();\nerror InsufficientBalance();\nerror CannotRecoverStakedTokens();\nerror MaxDurationsLimitReached();\nerror DurationTooLong(uint256 maxAllowedDuration);\nerror InvalidStakingPlan();\nerror UnauthorizedCaller(address caller);\n\n/**\n * @title WallyStaking\n * @dev Allows users to stake WallyToken for a predetermined duration\n * to earn rewards at a fixed APY. Features multiple staking durations\n * with corresponding APY rates.\n */\ncontract WallyStaking is AccessControl, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Roles\n    bytes32 private constant _ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 private constant _REWARDS_MANAGER_ROLE = keccak256(\"REWARDS_MANAGER_ROLE\");\n\n    // Events\n    event Staked(address indexed user, uint256 amount, uint256 indexed duration);\n    event Unstaked(address indexed user, uint256 stakedAmount, uint256 rewardAmount);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event StakingPlanAdded(uint256 indexed duration, uint256 indexed apy);\n    event StakingPlanUpdated(uint256 indexed duration, uint256 indexed apy);\n    event RewardsAdded(uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 amount);\n    event StakingPaused(bool indexed isPaused);\n    event ERC20Recovered(address indexed token, uint256 amount, address indexed to);\n\n    // Staking plans\n    struct StakingPlan {\n        bool isActive;\n        uint256 apr; // Annual percentage rate in basis points (1% = 100)\n    }\n\n    // User staking data - packed for storage efficiency\n    struct UserStakingData {\n        uint256 stakedAmount;\n        uint256 stakingStartTime;\n        uint256 lastClaimTime;\n        uint256 stakingEndTime;\n        uint256 duration;\n        uint256 apr;\n        bool isActive;\n    }\n\n    // State variables\n    IERC20 private immutable _token;\n    mapping(uint256 duration => StakingPlan plan) private _stakingPlans; // Named mapping parameters\n    mapping(address user => UserStakingData data) private _userStakingData; // Named mapping parameters\n    uint256 private _totalStaked;\n    uint256 private _rewardsPool;\n    bool private _stakingPaused;\n    uint256[] private _availableDurations; // Array to track available durations\n\n    // Constants\n    uint256 private constant _BASIS_POINTS = 10000; // 100% = 10000\n    uint256 private constant _ONE_YEAR = 365 days;\n    uint256 private constant _MAX_DURATIONS = 20; // Limit the number of staking durations to prevent DoS\n    uint256 private constant _MAX_DURATION_LENGTH = 5 * 365 days; // 5 years maximum staking period\n\n    /**\n     * @dev Constructor sets up the initial contract state\n     * @param tokenAddress Address of the WallyToken contract\n     * @param adminAddress Address of the admin who will manage the contract\n     * Note: Constructor is marked as payable for gas optimization\n     */\n    constructor(address tokenAddress, address adminAddress) payable {\n        if (tokenAddress == address(0)) revert InvalidZeroAddress();\n        if (adminAddress == address(0)) revert InvalidZeroAddress();\n\n        _token = IERC20(tokenAddress);\n        \n        // Setup roles\n        _grantRole(DEFAULT_ADMIN_ROLE, adminAddress);\n        _grantRole(_ADMIN_ROLE, adminAddress);\n        _grantRole(_REWARDS_MANAGER_ROLE, adminAddress);\n\n        // Set ADMIN_ROLE as the admin for REWARDS_MANAGER_ROLE\n        _setRoleAdmin(_REWARDS_MANAGER_ROLE, _ADMIN_ROLE);\n\n        // Initialize default staking plans (3, 6, 12 months)\n        _addStakingPlan(90 days, 500);  // 5% APR for 3 months\n        _addStakingPlan(180 days, 800); // 8% APR for 6 months\n        _addStakingPlan(365 days, 1200); // 12% APR for 12 months\n        \n        _stakingPaused = false;\n    }\n\n    /**\n     * @dev Adds a staking plan with a specific duration and APR\n     * @param duration Duration in seconds\n     * @param apr Annual percentage rate in basis points (100 = 1%)\n     */\n    function addStakingPlan(uint256 duration, uint256 apr) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE) \n    {\n        // Validate duration is reasonable\n        if (duration > _MAX_DURATION_LENGTH) revert DurationTooLong(_MAX_DURATION_LENGTH);\n        \n        // Validate APR is reasonable (between 0% and 100%)\n        if (apr > _BASIS_POINTS) revert InvalidAmount();\n        \n        _addStakingPlan(duration, apr);\n    }\n\n    /**\n     * @dev Updates an existing staking plan\n     * @param duration Duration of the plan to update\n     * @param apr New annual percentage rate in basis points\n     * @param isActive Whether the plan is active\n     */\n    function updateStakingPlan(uint256 duration, uint256 apr, bool isActive) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE) \n    {\n        // Validate APR is reasonable (between 0% and 100%)\n        if (apr > _BASIS_POINTS) revert InvalidAmount();\n        \n        // Validate duration exists\n        bool found = false;\n        // Cache array length to save gas and prevent DoS attacks\n        uint256 durationsLength = _availableDurations.length;\n        for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)\n            if (_availableDurations[i] == duration) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) revert InvalidDuration();\n\n        // Only update if values are different from current ones\n        StakingPlan storage plan = _stakingPlans[duration];\n        if (plan.apr != apr) {\n            plan.apr = apr;\n        }\n        \n        if (plan.isActive != isActive) {\n            plan.isActive = isActive;\n        }\n        \n        emit StakingPlanUpdated(duration, apr);\n    }\n\n    /**\n     * @dev Pauses or unpauses staking\n     * @param paused Whether staking should be paused\n     */\n    function setStakingPaused(bool paused) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE) \n    {\n        // Cache storage variable\n        bool stakingPaused = _stakingPaused;\n        \n        // Only update if value is different to avoid unnecessary gas costs\n        if (stakingPaused != paused) {\n            _stakingPaused = paused;\n            emit StakingPaused(paused);\n        }\n    }\n\n    /**\n     * @dev Adds tokens to the rewards pool\n     * @param amount Amount of tokens to add\n     */\n    function addRewards(uint256 amount) \n        external \n        nonReentrant \n        onlyRole(_REWARDS_MANAGER_ROLE) \n    {\n        if (amount == 0) revert InvalidAmount();\n        \n        // Verify caller has sufficient balance\n        if (_token.balanceOf(msg.sender) < amount) revert InsufficientBalance();\n        \n        // Cache address(this) for multiple uses\n        address self = address(this);\n        \n        // Cache storage variable to avoid multiple SLOADs\n        uint256 rewardsPool = _rewardsPool;\n        \n        // Transfer tokens from sender to contract\n        _token.safeTransferFrom(msg.sender, self, amount);\n        \n        // Update rewards pool using direct assignment instead of +=\n        _rewardsPool = rewardsPool + amount;\n        \n        emit RewardsAdded(amount);\n    }\n\n    /**\n     * @dev Allows a user to stake tokens\n     * @param amount Amount to stake\n     * @param duration Duration in seconds to stake for\n     */\n    function stake(uint256 amount, uint256 duration) \n        external \n        nonReentrant \n    {\n        // Cache storage variables to avoid multiple SLOADs\n        bool stakingPaused = _stakingPaused;\n        uint256 totalStaked = _totalStaked;\n\n        // Validation\n        if (stakingPaused) revert StakingNotActive();\n        if (amount == 0) revert InvalidAmount();\n        \n        // Check if the duration is valid and active\n        StakingPlan storage plan = _stakingPlans[duration];\n        if (!plan.isActive) revert InvalidStakingPlan();\n        \n        // Verify caller has sufficient balance\n        if (_token.balanceOf(msg.sender) < amount) revert InsufficientBalance();\n        \n        // Cache address(this) and block.timestamp\n        address self = address(this);\n        uint256 currentTime = block.timestamp;\n        \n        // Check if user has an active stake\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        bool isUserStakeActive = userData.isActive;\n        \n        // If user already has an active stake, first claim any available rewards\n        if (isUserStakeActive) {\n            uint256 stakingStartTime = userData.stakingStartTime;\n            if (stakingStartTime != 0 && currentTime >= stakingStartTime) {\n                uint256 pendingRewards = calculatePendingRewards(msg.sender);\n                if (pendingRewards != 0) {\n                    _claimRewards(msg.sender, pendingRewards);\n                }\n            }\n        }\n        \n        // Calculate unlock time\n        uint256 unlockTime = currentTime + duration;\n        \n        // Transfer tokens from user to contract (following checks-effects-interactions pattern)\n        _token.safeTransferFrom(msg.sender, self, amount);\n        \n        // Update user data - assigning individual fields instead of the whole struct at once\n        userData.stakedAmount = amount;\n        userData.stakingStartTime = currentTime;\n        userData.stakingEndTime = unlockTime;\n        userData.duration = duration;\n        userData.apr = plan.apr;\n        userData.isActive = true;\n        userData.lastClaimTime = currentTime;\n        \n        // Update total staked amount using direct assignment\n        _totalStaked = totalStaked + amount;\n        \n        emit Staked(msg.sender, amount, duration);\n    }\n\n    /**\n     * @dev Allows a user to unstake their tokens after the lock period\n     */\n    function unstake() \n        external \n        nonReentrant \n    {\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        \n        // Validations\n        if (!userData.isActive) revert NoActiveStake();\n        if (block.timestamp <= userData.stakingEndTime) revert StakingStillLocked();\n        \n        // Cache storage variable\n        uint256 totalStaked = _totalStaked;\n        \n        uint256 stakedAmount = userData.stakedAmount;\n        uint256 pendingRewards = calculatePendingRewards(msg.sender);\n        \n        // Reset user data\n        userData.stakedAmount = 0;\n        userData.stakingStartTime = 0;\n        userData.stakingEndTime = 0;\n        userData.duration = 0;\n        userData.apr = 0;\n        userData.isActive = false;\n        userData.lastClaimTime = 0;\n        \n        // Update total staked\n        // Using direct assignment instead of -=\n        _totalStaked = totalStaked - stakedAmount;\n        \n        // Transfer tokens back to user\n        _token.safeTransfer(msg.sender, stakedAmount);\n        \n        // Transfer rewards if any\n        if (pendingRewards != 0) {\n            _claimRewards(msg.sender, pendingRewards);\n        }\n        \n        emit Unstaked(msg.sender, stakedAmount, pendingRewards);\n    }\n\n    /**\n     * @dev Allows users to claim rewards without unstaking\n     */\n    function claimRewards() \n        external \n        nonReentrant \n    {\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        \n        // Validations\n        if (!userData.isActive) revert NoActiveStake();\n        \n        uint256 pendingRewards = calculatePendingRewards(msg.sender);\n        if (pendingRewards == 0) revert NoRewardsAvailable();\n        \n        // Update last claim time\n        userData.lastClaimTime = block.timestamp;\n        \n        // Transfer rewards\n        _claimRewards(msg.sender, pendingRewards);\n    }\n\n    /**\n     * @dev Emergency withdraw function in case of critical issues\n     * Note: This doesn't calculate or distribute rewards\n     * @notice Only callable by admin role\n     */\n    function emergencyWithdraw(address user) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE)\n    {\n        if (user == address(0)) revert InvalidZeroAddress();\n        \n        UserStakingData storage userData = _userStakingData[user];\n        \n        // Validations\n        if (!userData.isActive) revert NoActiveStake();\n        \n        // Cache storage variable\n        uint256 totalStaked = _totalStaked;\n        \n        uint256 stakedAmount = userData.stakedAmount;\n        \n        // Reset user data first (checks-effects-interactions pattern)\n        userData.stakedAmount = 0;\n        userData.stakingStartTime = 0;\n        userData.stakingEndTime = 0;\n        userData.duration = 0;\n        userData.apr = 0;\n        userData.isActive = false;\n        userData.lastClaimTime = 0;\n        \n        // Update total staked\n        _totalStaked = totalStaked - stakedAmount;\n        \n        // Transfer tokens back to user\n        _token.safeTransfer(user, stakedAmount);\n        \n        emit EmergencyWithdraw(user, stakedAmount);\n    }\n\n    /**\n     * @dev Recover ERC20 tokens accidentally sent to the contract\n     * @param tokenAddress Address of the token to recover\n     * @param amount Amount to recover\n     * @notice Only callable by admin role\n     */\n    function recoverERC20(address tokenAddress, uint256 amount) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE)\n    {\n        // Input validations\n        if (tokenAddress == address(0)) revert InvalidZeroAddress();\n        if (amount == 0) revert InvalidAmount();\n        \n        // Ensure that staked tokens cannot be recovered\n        if (tokenAddress == address(_token)) revert CannotRecoverStakedTokens();\n        \n        // Ensure the contract has enough balance\n        if (IERC20(tokenAddress).balanceOf(address(this)) < amount) revert InsufficientBalance();\n        \n        // Recover other ERC20 tokens\n        IERC20(tokenAddress).safeTransfer(msg.sender, amount);\n        \n        emit ERC20Recovered(tokenAddress, amount, msg.sender);\n    }\n\n    /**\n     * @dev Calculates pending rewards for a user\n     * @param user Address of the user\n     * @return rewards Reward amount\n     */\n    function calculatePendingRewards(address user) \n        public \n        view \n        returns (uint256 rewards) \n    {\n        UserStakingData storage userData = _userStakingData[user];\n        \n        if (!userData.isActive || userData.stakedAmount == 0) {\n            return 0;\n        }\n        \n        // Note on block.timestamp: Although it can be slightly manipulated by miners,\n        // for staking periods measured in days/months, this has minimal practical impact\n        uint256 endTime = block.timestamp;\n        if (endTime >= userData.stakingEndTime) {\n            endTime = userData.stakingEndTime;\n        }\n        \n        uint256 timeElapsed = endTime - userData.lastClaimTime;\n        if (timeElapsed == 0) {\n            return 0;\n        }\n        \n        // Calculate rewards using FixedPointMathLib for precision\n        // First calculate stakedAmount * apr safely\n        uint256 stakedAmountTimeApr = FixedPointMathLib.mulDivDown(\n            userData.stakedAmount, \n            userData.apr, \n            _BASIS_POINTS\n        );\n        \n        // Then multiply by timeElapsed and divide by ONE_YEAR\n        rewards = FixedPointMathLib.mulDivDown(\n            stakedAmountTimeApr,\n            timeElapsed,\n            _ONE_YEAR\n        );\n        \n        // No explicit return needed when using named returns\n    }\n\n    /**\n     * @dev Get user staking information\n     * @param user Address of the user\n     * @return User staking information\n     */\n    // Packed for gas efficiency - similar types grouped together\n    struct UserStakingInfo {\n        uint256 stakedAmount;\n        uint256 stakingStartTime; \n        uint256 stakingEndTime;\n        uint256 duration;\n        uint256 apr;\n        uint256 pendingRewards;\n        bool isActive;\n    }\n    \n    function getUserStakingInfo(address user) \n        external \n        view \n        returns (UserStakingInfo memory) \n    {\n        UserStakingData storage userData = _userStakingData[user];\n        \n        UserStakingInfo memory userInfo;\n        userInfo.stakedAmount = userData.stakedAmount;\n        userInfo.stakingStartTime = userData.stakingStartTime;\n        userInfo.stakingEndTime = userData.stakingEndTime;\n        userInfo.duration = userData.duration;\n        userInfo.apr = userData.apr;\n        userInfo.isActive = userData.isActive;\n        userInfo.pendingRewards = calculatePendingRewards(user);\n        \n        return userInfo;\n    }\n\n    /**\n     * @dev Get staking plan details\n     * @param duration Duration of the plan\n     * @return isActive Whether the plan is active\n     * @return apr APR of the plan in basis points\n     */\n    function getStakingPlan(uint256 duration) \n        external \n        view \n        returns (bool isActive, uint256 apr) \n    {\n        StakingPlan storage plan = _stakingPlans[duration];\n        return (plan.isActive, plan.apr);\n    }\n\n    /**\n     * @dev Get all available staking durations\n     * @return durations Array of available durations\n     */\n    function getAvailableDurations() \n        external \n        view \n        returns (uint256[] memory) \n    {\n        return _availableDurations;\n    }\n\n    /**\n     * @dev Get contract stats\n     * @return totalStaked Total tokens staked\n     * @return rewardsPool Available rewards pool\n     * @return stakingPaused Whether staking is paused\n     */\n    function getContractStats() \n        external \n        view \n        returns (uint256, uint256, bool) \n    {\n        return (_totalStaked, _rewardsPool, _stakingPaused);\n    }\n\n    /**\n     * @dev Internal function to add a staking plan\n     * @param duration Duration in seconds\n     * @param apr Annual percentage rate in basis points\n     */\n    function _addStakingPlan(uint256 duration, uint256 apr) \n        private \n    {\n        if (duration == 0) revert InvalidDuration();\n        if (duration > _MAX_DURATION_LENGTH) revert DurationTooLong(_MAX_DURATION_LENGTH);\n        if (apr > _BASIS_POINTS) revert InvalidAmount();\n        if (_stakingPlans[duration].isActive) revert DurationAlreadyExists();\n        \n        // Prevent DoS attacks by limiting the number of durations\n        if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached();\n        \n        // Create and set the staking plan\n        StakingPlan storage plan = _stakingPlans[duration];\n        plan.isActive = true;\n        plan.apr = apr;\n        \n        _availableDurations.push(duration);\n        \n        emit StakingPlanAdded(duration, apr);\n    }\n\n    /**\n     * @dev Internal function to claim rewards\n     * @param user Address of the user\n     * @param amount Amount of rewards to claim\n     */\n    function _claimRewards(address user, uint256 amount) \n        private \n    {\n        if (user == address(0)) revert InvalidZeroAddress();\n        if (amount == 0) revert InvalidAmount();\n        \n        // Cache storage variable to avoid multiple SLOADs\n        uint256 rewardsPool = _rewardsPool;\n        \n        if (amount >= rewardsPool) revert InsufficientRewardsPool(); // Use non-strict inequality\n        \n        // State changes first (checks-effects-interactions pattern)\n        _rewardsPool = rewardsPool - amount;\n        \n        // External call last\n        _token.safeTransfer(user, amount);\n        \n        emit RewardClaimed(user, amount);\n    }\n}"
			},
			".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Arithmetic library with operations for fixed-point numbers.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\nlibrary FixedPointMathLib {\n    /*//////////////////////////////////////////////////////////////\n                    SIMPLIFIED FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal constant MAX_UINT256 = 2**256 - 1;\n\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\n\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\n    }\n\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\n    }\n\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\n    }\n\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                    LOW LEVEL FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function mulDivDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\n            if iszero(mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))) {\n                revert(0, 0)\n            }\n\n            // Divide x * y by the denominator.\n            z := div(mul(x, y), denominator)\n        }\n    }\n\n    function mulDivUp(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\n            if iszero(mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))) {\n                revert(0, 0)\n            }\n\n            // If x * y modulo the denominator is strictly greater than 0,\n            // 1 is added to round up the division of x * y by the denominator.\n            z := add(gt(mod(mul(x, y), denominator), 0), div(mul(x, y), denominator))\n        }\n    }\n\n    function rpow(\n        uint256 x,\n        uint256 n,\n        uint256 scalar\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            switch x\n            case 0 {\n                switch n\n                case 0 {\n                    // 0 ** 0 = 1\n                    z := scalar\n                }\n                default {\n                    // 0 ** n = 0\n                    z := 0\n                }\n            }\n            default {\n                switch mod(n, 2)\n                case 0 {\n                    // If n is even, store scalar in z for now.\n                    z := scalar\n                }\n                default {\n                    // If n is odd, store x in z for now.\n                    z := x\n                }\n\n                // Shifting right by 1 is like dividing by 2.\n                let half := shr(1, scalar)\n\n                for {\n                    // Shift n right by 1 before looping to halve it.\n                    n := shr(1, n)\n                } n {\n                    // Shift n right by 1 each iteration to halve it.\n                    n := shr(1, n)\n                } {\n                    // Revert immediately if x ** 2 would overflow.\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\n                    if shr(128, x) {\n                        revert(0, 0)\n                    }\n\n                    // Store x squared.\n                    let xx := mul(x, x)\n\n                    // Round to the nearest number.\n                    let xxRound := add(xx, half)\n\n                    // Revert if xx + half overflowed.\n                    if lt(xxRound, xx) {\n                        revert(0, 0)\n                    }\n\n                    // Set x to scaled xxRound.\n                    x := div(xxRound, scalar)\n\n                    // If n is even:\n                    if mod(n, 2) {\n                        // Compute z * x.\n                        let zx := mul(z, x)\n\n                        // If z * x overflowed:\n                        if iszero(eq(div(zx, x), z)) {\n                            // Revert if x is non-zero.\n                            if iszero(iszero(x)) {\n                                revert(0, 0)\n                            }\n                        }\n\n                        // Round to the nearest number.\n                        let zxRound := add(zx, half)\n\n                        // Revert if zx + half overflowed.\n                        if lt(zxRound, zx) {\n                            revert(0, 0)\n                        }\n\n                        // Return properly scaled zxRound.\n                        z := div(zxRound, scalar)\n                    }\n                }\n            }\n        }\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        GENERAL NUMBER UTILITIES\n    //////////////////////////////////////////////////////////////*/\n\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let y := x // We start y at x, which will help us make our initial estimate.\n\n            z := 181 // The \"correct\" value is 1, but this saves a multiplication later.\n\n            // This segment is to get a reasonable initial estimate for the Babylonian method. With a bad\n            // start, the correct # of bits increases ~linearly each iteration instead of ~quadratically.\n\n            // We check y >= 2^(k + 8) but shift right by k bits\n            // each branch to ensure that if x >= 256, then y >= 256.\n            if iszero(lt(y, 0x10000000000000000000000000000000000)) {\n                y := shr(128, y)\n                z := shl(64, z)\n            }\n            if iszero(lt(y, 0x1000000000000000000)) {\n                y := shr(64, y)\n                z := shl(32, z)\n            }\n            if iszero(lt(y, 0x10000000000)) {\n                y := shr(32, y)\n                z := shl(16, z)\n            }\n            if iszero(lt(y, 0x1000000)) {\n                y := shr(16, y)\n                z := shl(8, z)\n            }\n\n            // Goal was to get z*z*y within a small factor of x. More iterations could\n            // get y in a tighter range. Currently, we will have y in [256, 256*2^16).\n            // We ensured y >= 256 so that the relative difference between y and y+1 is small.\n            // That's not possible if x < 256 but we can just verify those cases exhaustively.\n\n            // Now, z*z*y <= x < z*z*(y+1), and y <= 2^(16+8), and either y >= 256, or x < 256.\n            // Correctness can be checked exhaustively for x < 256, so we assume y >= 256.\n            // Then z*sqrt(y) is within sqrt(257)/sqrt(256) of sqrt(x), or about 20bps.\n\n            // For s in the range [1/256, 256], the estimate f(s) = (181/1024) * (s+1) is in the range\n            // (1/2.84 * sqrt(s), 2.84 * sqrt(s)), with largest error when s = 1 and when s = 256 or 1/256.\n\n            // Since y is in [256, 256*2^16), let a = y/65536, so that a is in [1/256, 256). Then we can estimate\n            // sqrt(y) using sqrt(65536) * 181/1024 * (a + 1) = 181/4 * (y + 65536)/65536 = 181 * (y + 65536)/2^18.\n\n            // There is no overflow risk here since y < 2^136 after the first branch above.\n            z := shr(18, mul(z, add(y, 65536))) // A mul() is saved from starting z at 181.\n\n            // Given the worst case multiplicative error of 2.84 above, 7 iterations should be enough.\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n\n            // If x+1 is a perfect square, the Babylonian method cycles between\n            // floor(sqrt(x)) and ceil(sqrt(x)). This statement ensures we return floor.\n            // See: https://en.wikipedia.org/wiki/Integer_square_root#Using_only_integer_division\n            // Since the ceil is rare, we save gas on the assignment and repeat division in the rare case.\n            // If you don't care whether the floor or ceil square root is returned, you can remove this statement.\n            z := sub(z, lt(div(x, z), z))\n        }\n    }\n\n    function unsafeMod(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Mod x by y. Note this will return\n            // 0 instead of reverting if y is zero.\n            z := mod(x, y)\n        }\n    }\n\n    function unsafeDiv(uint256 x, uint256 y) internal pure returns (uint256 r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Divide x by y. Note this will return\n            // 0 instead of reverting if y is zero.\n            r := div(x, y)\n        }\n    }\n\n    function unsafeDivUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Add 1 to x * y if x % y > 0. Note this will\n            // return 0 instead of reverting if y is zero.\n            z := add(gt(mod(x, y), 0), div(x, y))\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol": {
				"FixedPointMathLib": {
					"abi": [],
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":341:10053  library FixedPointMathLib {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":341:10053  library FixedPointMathLib {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xE408FE2766C4 0xC1 TLOAD 0xAF 0xB9 0xE1 CODESIZE 0xB7 PUSH19 0x34451C1B475677D04527F11B7A9F0879916473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "341:9712:0:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xE408FE2766C4 0xC1 TLOAD 0xAF 0xB9 0xE1 CODESIZE 0xB7 PUSH19 0x34451C1B475677D04527F11B7A9F0879916473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "341:9712:0:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"divWadDown(uint256,uint256)": "infinite",
								"divWadUp(uint256,uint256)": "infinite",
								"mulDivDown(uint256,uint256,uint256)": "infinite",
								"mulDivUp(uint256,uint256,uint256)": "infinite",
								"mulWadDown(uint256,uint256)": "infinite",
								"mulWadUp(uint256,uint256)": "infinite",
								"rpow(uint256,uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"unsafeDiv(uint256,uint256)": "infinite",
								"unsafeDivUp(uint256,uint256)": "infinite",
								"unsafeMod(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "library_deploy_address"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033",
									".code": [
										{
											"begin": 341,
											"end": 10053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 10053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 10053,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Arithmetic library with operations for fixed-point numbers.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 185,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)180_storage"
							},
							"t_struct(RoleData)180_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 177,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 179,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 638,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xEF DUP12 0xEC BYTE MULMOD SHL SWAP2 PUSH7 0x92CF47B3189F28 OR 0xB3 PUSH17 0xCE77D31CB5083E8119E1B8E79264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "698:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xEF DUP12 0xEC BYTE MULMOD SHL SWAP2 PUSH7 0x92CF47B3189F28 OR 0xB3 PUSH17 0xCE77D31CB5083E8119E1B8E79264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "698:8692:8:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyStaking.sol": {
				"WallyStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "adminAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CannotRecoverStakedTokens",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DurationAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAllowedDuration",
									"type": "uint256"
								}
							],
							"name": "DurationTooLong",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientRewardsPool",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidDuration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidStakingPlan",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaxDurationsLimitReached",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoActiveStake",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoRewardsAvailable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StakingNotActive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StakingStillLocked",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ERC20Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "StakingPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "StakingPlanAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "StakingPlanUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								}
							],
							"name": "addStakingPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculatePendingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAvailableDurations",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "getStakingPlan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserStakingInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakingStartTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakingEndTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "apr",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "pendingRewards",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isActive",
											"type": "bool"
										}
									],
									"internalType": "struct WallyStaking.UserStakingInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "setStakingPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "updateStakingPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0xa0\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_38\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_7\n  jumpi\n  tag_9\n  0x20\n  tag_10\n  dup4\n  tag_1\n  jump\t// in\ntag_10:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/WallyStaking.sol\":3700:3726  tokenAddress == address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyStaking.sol\":3696:3755  if (tokenAddress == address(0)) revert InvalidZeroAddress() */\n  tag_13\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyStaking.sol\":3769:3795  adminAddress == address(0) */\n  iszero\n    /* \"contracts/WallyStaking.sol\":3765:3824  if (adminAddress == address(0)) revert InvalidZeroAddress() */\n  tag_13\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4007:4054  _grantRole(_REWARDS_MANAGER_ROLE, adminAddress) */\n  tag_15\n    /* \"contracts/WallyStaking.sol\":3835:3864  _token = IERC20(tokenAddress) */\n  swap2\n  0x80\n  mstore\n    /* \"contracts/WallyStaking.sol\":3906:3950  _grantRole(DEFAULT_ADMIN_ROLE, adminAddress) */\n  tag_16\n  dup2\n  tag_2\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/WallyStaking.sol\":3960:3997  _grantRole(_ADMIN_ROLE, adminAddress) */\n  tag_17\n  dup2\n  tag_3\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/WallyStaking.sol\":4007:4054  _grantRole(_REWARDS_MANAGER_ROLE, adminAddress) */\n  tag_4\n  jump\t// in\ntag_15:\n  pop\n  mload(0x00)\n  codecopy(0x00, data_d898bc67ca3d352598a6d8ba14bc12f08b53cf86ca7c5471dcbc6dcb5104da9f, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0xf6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d255\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n  sload\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":1354:1377  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  swap3\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap1\n  dup1\n  log4\n    /* \"contracts/WallyStaking.sol\":4267:4274  90 days */\n  0x76a700\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_5c968d77b01764d69848ab2b960d8f4701e8f3339e0a5524fc9916c9948f3efb, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n  0xff\n  and\n    /* \"contracts/WallyStaking.sol\":18836:18904  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n  tag_34\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  0x14\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n    /* \"contracts/WallyStaking.sol\":18994:19038  _availableDurations.length >= _MAX_DURATIONS */\n  lt\n  iszero\n    /* \"contracts/WallyStaking.sol\":18990:19073  if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached() */\n  tag_36\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4267:4274  90 days */\n  0x76a700\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_5c968d77b01764d69848ab2b960d8f4701e8f3339e0a5524fc9916c9948f3efb, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":4276:4279  500 */\n  0x01f4\n    /* \"contracts/WallyStaking.sol\":19225:19233  plan.apr */\n  0xa1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8d\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  dup2\n  add\n  dup1\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_40\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4267:4274  90 days */\n  0x76a700\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  swap1\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  mstore\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  keccak256\n  add\n  sstore\n    /* \"contracts/WallyStaking.sol\":4276:4279  500 */\n  0x01f4\n    /* \"contracts/WallyStaking.sol\":4267:4274  90 days */\n  0x76a700\n  mload(0x00)\n  codecopy(0x00, data_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":19316:19347  StakingPlanAdded(duration, apr) */\n  dup1\n  log3\n    /* \"contracts/WallyStaking.sol\":4330:4338  180 days */\n  0xed4e00\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_4f66db48a07c9781e0592d42ff3b56b244162717317a5f3e947af07a6400a056, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n  0xff\n  and\n    /* \"contracts/WallyStaking.sol\":18836:18904  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n  tag_34\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  0x14\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n    /* \"contracts/WallyStaking.sol\":18994:19038  _availableDurations.length >= _MAX_DURATIONS */\n  lt\n  iszero\n    /* \"contracts/WallyStaking.sol\":18990:19073  if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached() */\n  tag_36\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4330:4338  180 days */\n  0xed4e00\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_4f66db48a07c9781e0592d42ff3b56b244162717317a5f3e947af07a6400a056, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":4340:4343  800 */\n  0x0320\n    /* \"contracts/WallyStaking.sol\":19225:19233  plan.apr */\n  0x089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd833\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  dup2\n  add\n  dup1\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_40\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4330:4338  180 days */\n  0xed4e00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  swap1\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  mstore\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  keccak256\n  add\n  sstore\n    /* \"contracts/WallyStaking.sol\":4340:4343  800 */\n  0x0320\n    /* \"contracts/WallyStaking.sol\":4330:4338  180 days */\n  0xed4e00\n  mload(0x00)\n  codecopy(0x00, data_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":19316:19347  StakingPlanAdded(duration, apr) */\n  dup1\n  log3\n    /* \"contracts/WallyStaking.sol\":4393:4401  365 days */\n  0x01e13380\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_d339c8b099c3809595776000fb57d17374d0ef93e29b1511755be607cb00de99, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n  0xff\n  and\n    /* \"contracts/WallyStaking.sol\":18836:18904  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n  tag_34\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  0x14\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n    /* \"contracts/WallyStaking.sol\":18994:19038  _availableDurations.length >= _MAX_DURATIONS */\n  lt\n  iszero\n    /* \"contracts/WallyStaking.sol\":18990:19073  if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached() */\n  tag_36\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4393:4401  365 days */\n  0x01e13380\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_d339c8b099c3809595776000fb57d17374d0ef93e29b1511755be607cb00de99, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":4403:4407  1200 */\n  0x04b0\n    /* \"contracts/WallyStaking.sol\":19225:19233  plan.apr */\n  0xdc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33c\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  dup2\n  add\n  dup1\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_40\n  jumpi\n    /* \"contracts/WallyStaking.sol\":4393:4401  365 days */\n  0x01e13380\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  swap1\n    /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n  0x07\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  mstore\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  keccak256\n  add\n  sstore\n    /* \"contracts/WallyStaking.sol\":4403:4407  1200 */\n  0x04b0\n    /* \"contracts/WallyStaking.sol\":4393:4401  365 days */\n  0x01e13380\n  mload(0x00)\n  codecopy(0x00, data_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":19316:19347  StakingPlanAdded(duration, apr) */\n  dup1\n  log3\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  not(0xff)\n    /* \"contracts/WallyStaking.sol\":4452:4474  _stakingPaused = false */\n  0x06\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  sload\n  and\n    /* \"contracts/WallyStaking.sol\":4452:4474  _stakingPaused = false */\n  0x06\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  sstore\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/WallyStaking.sol\":3835:3864  _token = IERC20(tokenAddress) */\n  0x80\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n  return\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\ntag_40:\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  shl(0xe0, 0x4e487b71)\n  0x00\n    /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n  mstore\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_38:\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\n    /* \"contracts/WallyStaking.sol\":18990:19073  if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached() */\ntag_36:\n    /* \"contracts/WallyStaking.sol\":19047:19073  MaxDurationsLimitReached() */\n  mstore(0x00, shl(0xe0, 0x5bb01e5b))\n  revert(0x00, 0x04)\n    /* \"contracts/WallyStaking.sol\":18836:18904  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\ntag_34:\n    /* \"contracts/WallyStaking.sol\":18881:18904  DurationAlreadyExists() */\n  mstore(0x00, shl(0xe1, 0x57706857))\n  revert(0x00, 0x04)\n    /* \"contracts/WallyStaking.sol\":3765:3824  if (adminAddress == address(0)) revert InvalidZeroAddress() */\ntag_13:\n    /* \"contracts/WallyStaking.sol\":3735:3755  InvalidZeroAddress() */\n  shl(0xe0, 0xf6b2911f)\n  0x00\n    /* \"contracts/WallyStaking.sol\":3804:3824  InvalidZeroAddress() */\n  mstore\n  revert(0x00, 0x04)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\ntag_7:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_7\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyStaking.sol\":3724:3725  0 */\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n  0xff\n  and\n  tag_44\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  and\n    /* \"contracts/WallyStaking.sol\":3724:3725  0 */\n  0x00\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":3724:3725  0 */\n  dup2\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyStaking.sol\":3724:3725  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_3:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n  0xff\n  and\n  tag_44\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1354:1377  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap1\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_4:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_6b4989bc7b93b2bee94c8fd6eb5542ae9ecccf5d6d8dc2fe26e142ac3434c5cc, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n  sload\n  0xff\n  and\n  tag_44\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_6b4989bc7b93b2bee94c8fd6eb5542ae9ecccf5d6d8dc2fe26e142ac3434c5cc, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_d898bc67ca3d352598a6d8ba14bc12f08b53cf86ca7c5471dcbc6dcb5104da9f, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap1\n    /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\nstop\ndata_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d 2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\ndata_4f66db48a07c9781e0592d42ff3b56b244162717317a5f3e947af07a6400a056 089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd832\ndata_5c968d77b01764d69848ab2b960d8f4701e8f3339e0a5524fc9916c9948f3efb a1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8c\ndata_6b4989bc7b93b2bee94c8fd6eb5542ae9ecccf5d6d8dc2fe26e142ac3434c5cc f6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254\ndata_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d 682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364\ndata_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\ndata_d339c8b099c3809595776000fb57d17374d0ef93e29b1511755be607cb00de99 dc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33b\ndata_d898bc67ca3d352598a6d8ba14bc12f08b53cf86ca7c5471dcbc6dcb5104da9f 51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b\ndata_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5 ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5\n\nsub_0: assembly {\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_20, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_20:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_22\n      jumpi\n      pop\n      dup1\n      0x097aad10\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x15b31bbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x5ef23fa9\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x80933608\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x9fca9c22\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xaea1b6ef\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xb6b365c2\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_60\n      jumpi\n      0xdfe6b5d6\n      eq\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      0x60\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":18337:18349  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0xff\n        /* \"contracts/WallyStaking.sol\":18351:18365  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      swap1\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      iszero\n      iszero\n      0x40\n      dup3\n      add\n      mstore\n      return\n    tag_66:\n      0x00\n      dup1\n      revert\n    tag_60:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_72\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_73\n      tag_2\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_74\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_75\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_13\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_17\n      jump\t// in\n    tag_72:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n    tag_58:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_80\n      tag_11\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xf6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_81\n      jumpi\n        /* \"contracts/WallyStaking.sol\":7250:7261  amount == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":7246:7285  if (amount == 0) revert InvalidAmount() */\n      tag_83\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":7356:7362  _token */\n      immutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n      swap1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      0x24\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup4\n      swap2\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      swap2\n      tag_87\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_88:\n        /* \"contracts/WallyStaking.sol\":7356:7393  _token.balanceOf(msg.sender) < amount */\n      pop\n      lt\n        /* \"contracts/WallyStaking.sol\":7352:7423  if (_token.balanceOf(msg.sender) < amount) revert InsufficientBalance() */\n      tag_89\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/WallyStaking.sol\":7853:7873  rewardsPool + amount */\n      tag_91\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      0x20\n      swap4\n        /* \"contracts/WallyStaking.sol\":7743:7749  amount */\n      tag_92\n        /* \"contracts/WallyStaking.sol\":7897:7917  RewardsAdded(amount) */\n      0xf8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap7\n        /* \"contracts/WallyStaking.sol\":7619:7631  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":7514:7518  this */\n      swap3\n      address\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      swap1\n      caller\n        /* \"contracts/WallyStaking.sol\":7743:7749  amount */\n      swap1\n      tag_18\n      jump\t// in\n    tag_92:\n        /* \"contracts/WallyStaking.sol\":7853:7873  rewardsPool + amount */\n      tag_8\n      jump\t// in\n    tag_91:\n        /* \"contracts/WallyStaking.sol\":7619:7631  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":7897:7917  RewardsAdded(amount) */\n      log1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":7352:7423  if (_token.balanceOf(msg.sender) < amount) revert InsufficientBalance() */\n    tag_89:\n        /* \"contracts/WallyStaking.sol\":8746:8767  InsufficientBalance() */\n      shl(0xe3, 0x1e9acf17)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":7402:7423  InsufficientBalance() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":7402:7423  InsufficientBalance() */\n      revert\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n    tag_87:\n      swap2\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      gt\n      tag_93\n      jumpi\n    tag_94:\n      dup2\n      tag_95\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      swap4\n      dup4\n      tag_7\n      jump\t// in\n    tag_95:\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      mload\n        /* \"contracts/WallyStaking.sol\":7356:7384  _token.balanceOf(msg.sender) */\n      dup5\n      jump(tag_88)\n    tag_93:\n      returndatasize\n      swap2\n      pop\n      jump(tag_94)\n    tag_85:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/WallyStaking.sol\":7246:7285  if (amount == 0) revert InvalidAmount() */\n    tag_83:\n        /* \"contracts/WallyStaking.sol\":5055:5070  InvalidAmount() */\n      shl(0xe1, 0x162908e3)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":7270:7285  InvalidAmount() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":7270:7285  InvalidAmount() */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n        /* \"contracts/WallyStaking.sol\":1432:1465  keccak256(\"REWARDS_MANAGER_ROLE\") */\n      0x51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_56:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      dup1\n      0x20\n        /* \"contracts/WallyStaking.sol\":17967:17986  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      swap3\n      dup4\n      dup2\n      mstore\n      add\n      dup1\n      swap3\n        /* \"contracts/WallyStaking.sol\":17967:17986  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      swap1\n      0x00\n    tag_102:\n      dup2\n      dup2\n      lt\n      tag_103\n      jumpi\n      pop\n      pop\n      pop\n      dup2\n      tag_105\n      swap2\n      sub\n      dup3\n      tag_7\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      0x20\n      dup5\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup4\n      add\n      swap2\n      swap1\n      0x00\n    tag_106:\n      dup2\n      dup2\n      lt\n      tag_107\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_107:\n      dup3\n      mload\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_106)\n    tag_103:\n      dup3\n      sload\n      dup5\n      mstore\n      0x20\n      swap1\n      swap4\n      add\n      swap3\n      0x01\n      swap3\n      dup4\n      add\n      swap3\n      add\n      jump(tag_102)\n    tag_54:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      swap1\n      calldataload(0x44)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_66\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_115\n      tag_11\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_116\n      tag_12\n      jump\t// in\n    tag_116:\n        /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n      0x2710\n        /* \"contracts/WallyStaking.sol\":5581:5600  apr > _BASIS_POINTS */\n      dup4\n      gt\n        /* \"contracts/WallyStaking.sol\":5577:5624  if (apr > _BASIS_POINTS) revert InvalidAmount() */\n      tag_83\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5799:5818  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0x00\n        /* \"contracts/WallyStaking.sol\":5855:5874  i < durationsLength */\n    tag_119:\n      dup2\n      dup2\n      lt\n      tag_120\n      jumpi\n        /* \"contracts/WallyStaking.sol\":5835:6074  for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)... */\n    tag_121:\n        /* \"contracts/WallyStaking.sol\":6087:6093  !found */\n      pop\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":6083:6119  if (!found) revert InvalidDuration() */\n      tag_122\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":6222:6235  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":6259:6267  plan.apr */\n      swap1\n      dup4\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"contracts/WallyStaking.sol\":6259:6267  plan.apr */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      sload\n        /* \"contracts/WallyStaking.sol\":6259:6274  plan.apr != apr */\n      sub\n        /* \"contracts/WallyStaking.sol\":6255:6315  if (plan.apr != apr) {... */\n      tag_124\n      jumpi\n        /* \"contracts/WallyStaking.sol\":5835:6074  for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)... */\n    tag_125:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      pop\n      pop\n      dup1\n      0xff\n      dup4\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":6337:6362  plan.isActive != isActive */\n      sub\n        /* \"contracts/WallyStaking.sol\":6333:6413  if (plan.isActive != isActive) {... */\n      tag_126\n      jumpi\n        /* \"contracts/WallyStaking.sol\":5835:6074  for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)... */\n    tag_127:\n        /* \"contracts/WallyStaking.sol\":6436:6469  StakingPlanUpdated(duration, apr) */\n      pop\n      pop\n      0xad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":6436:6469  StakingPlanUpdated(duration, apr) */\n      dup1\n      log3\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":6333:6413  if (plan.isActive != isActive) {... */\n    tag_126:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":6333:6413  if (plan.isActive != isActive) {... */\n      dup3\n      dup1\n      jump(tag_127)\n        /* \"contracts/WallyStaking.sol\":6255:6315  if (plan.apr != apr) {... */\n    tag_124:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":6255:6315  if (plan.apr != apr) {... */\n      dup4\n      dup6\n      jump(tag_125)\n        /* \"contracts/WallyStaking.sol\":6083:6119  if (!found) revert InvalidDuration() */\n    tag_122:\n        /* \"contracts/WallyStaking.sol\":18661:18678  InvalidDuration() */\n      shl(0xe0, 0x76166401)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":6102:6119  InvalidDuration() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":6102:6119  InvalidDuration() */\n      revert\n        /* \"contracts/WallyStaking.sol\":5876:5879  ++i */\n    tag_120:\n        /* \"contracts/WallyStaking.sol\":5960:5982  _availableDurations[i] */\n      dup5\n      tag_128\n      dup3\n      tag_10\n      jump\t// in\n    tag_128:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n        /* \"contracts/WallyStaking.sol\":5960:5994  _availableDurations[i] == duration */\n      eq\n        /* \"contracts/WallyStaking.sol\":5956:6064  if (_availableDurations[i] == duration) {... */\n      tag_129\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      add\n        /* \"contracts/WallyStaking.sol\":5840:5853  uint256 i = 0 */\n      jump(tag_119)\n        /* \"contracts/WallyStaking.sol\":5956:6064  if (_availableDurations[i] == duration) {... */\n    tag_129:\n        /* \"contracts/WallyStaking.sol\":6014:6026  found = true */\n      pop\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"contracts/WallyStaking.sol\":6044:6049  break */\n      dup5\n      dup1\n      jump(tag_121)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_52:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_50:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/WallyStaking.sol\":17648:17661  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      dup1\n      0x00\n      keccak256\n      0x01\n      0xff\n      dup3\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":17704:17712  plan.apr */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup3\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_48:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_143\n      tag_2\n      jump\t// in\n    tag_143:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_46:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_148\n      tag_1\n      jump\t// in\n    tag_148:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_149\n      tag_11\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_150\n      tag_12\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n        /* \"contracts/WallyStaking.sol\":14089:14115  tokenAddress == address(0) */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":14085:14144  if (tokenAddress == address(0)) revert InvalidZeroAddress() */\n      tag_151\n      jumpi\n        /* \"contracts/WallyStaking.sol\":14158:14169  amount == 0 */\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":14154:14193  if (amount == 0) revert InvalidAmount() */\n      tag_83\n      jumpi\n        /* \"contracts/WallyStaking.sol\":14297:14303  _token */\n      immutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n        /* \"contracts/WallyStaking.sol\":14273:14304  tokenAddress == address(_token) */\n      dup2\n      eq\n        /* \"contracts/WallyStaking.sol\":14269:14340  if (tokenAddress == address(_token)) revert CannotRecoverStakedTokens() */\n      tag_155\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":14452:14456  this */\n      address\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x20\n      dup2\n      0x24\n      dup2\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      dup6\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup4\n      swap2\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      swap2\n      tag_159\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_160:\n        /* \"contracts/WallyStaking.sol\":14413:14467  IERC20(tokenAddress).balanceOf(address(this)) < amount */\n      pop\n      lt\n        /* \"contracts/WallyStaking.sol\":14409:14497  if (IERC20(tokenAddress).balanceOf(address(this)) < amount) revert InsufficientBalance() */\n      tag_89\n      jumpi\n        /* \"contracts/WallyStaking.sol\":14600:14606  amount */\n      tag_163\n        /* \"contracts/WallyStaking.sol\":14588:14598  msg.sender */\n      dup3\n      caller\n        /* \"contracts/WallyStaking.sol\":14600:14606  amount */\n      dup4\n      tag_14\n      jump\t// in\n    tag_163:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"contracts/WallyStaking.sol\":14631:14679  ERC20Recovered(tokenAddress, amount, msg.sender) */\n      0x8619312ed4eff1cf9f0116e6db2f49d9570a86f0350d1c5ad1bd0f7b0cf9e132\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":14588:14598  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":14631:14679  ERC20Recovered(tokenAddress, amount, msg.sender) */\n      swap4\n      log3\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n    tag_159:\n      swap2\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      gt\n      tag_164\n      jumpi\n    tag_165:\n      dup2\n      tag_166\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_7\n      jump\t// in\n    tag_166:\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      mload\n        /* \"contracts/WallyStaking.sol\":14413:14458  IERC20(tokenAddress).balanceOf(address(this)) */\n      dup5\n      jump(tag_160)\n    tag_164:\n      returndatasize\n      swap2\n      pop\n      jump(tag_165)\n        /* \"contracts/WallyStaking.sol\":14269:14340  if (tokenAddress == address(_token)) revert CannotRecoverStakedTokens() */\n    tag_155:\n        /* \"contracts/WallyStaking.sol\":14313:14340  CannotRecoverStakedTokens() */\n      shl(0xe0, 0xffc9b52b)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":14313:14340  CannotRecoverStakedTokens() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":14313:14340  CannotRecoverStakedTokens() */\n      revert\n        /* \"contracts/WallyStaking.sol\":14085:14144  if (tokenAddress == address(0)) revert InvalidZeroAddress() */\n    tag_151:\n        /* \"contracts/WallyStaking.sol\":12771:12791  InvalidZeroAddress() */\n      shl(0xe0, 0xf6b2911f)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":14124:14144  InvalidZeroAddress() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":14124:14144  InvalidZeroAddress() */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_44:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0xe0\n      tag_173\n      tag_1\n      jump\t// in\n    tag_173:\n      tag_174\n      tag_9\n      jump\t// in\n    tag_174:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":16795:16811  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap1\n      tag_175\n      tag_9\n      jump\t// in\n    tag_175:\n      swap2\n      dup1\n      sload\n      dup4\n      mstore\n        /* \"contracts/WallyStaking.sol\":16960:16985  userData.stakingStartTime */\n      0x01\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":16932:16957  userInfo.stakingStartTime */\n      swap1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":16932:16957  userInfo.stakingStartTime */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/WallyStaking.sol\":16795:16811  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":17021:17044  userData.stakingEndTime */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0x40\n        /* \"contracts/WallyStaking.sol\":16995:17018  userInfo.stakingEndTime */\n      dup6\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      0x04\n        /* \"contracts/WallyStaking.sol\":17074:17091  userData.duration */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":17054:17071  userInfo.duration */\n      swap1\n      0x60\n      dup7\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/WallyStaking.sol\":17211:17240  calculatePendingRewards(user) */\n      tag_176\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0xff\n        /* \"contracts/WallyStaking.sol\":17158:17175  userData.isActive */\n      0x06\n        /* \"contracts/WallyStaking.sol\":17116:17128  userData.apr */\n      0x05\n      dup7\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":17101:17113  userInfo.apr */\n      swap6\n      0x80\n      dup11\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap7\n      dup8\n      mstore\n        /* \"contracts/WallyStaking.sol\":17158:17175  userData.isActive */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":17138:17155  userInfo.isActive */\n      swap6\n      0xc0\n      dup9\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap7\n      iszero\n      iszero\n      dup8\n      mstore\n        /* \"contracts/WallyStaking.sol\":17211:17240  calculatePendingRewards(user) */\n      tag_5\n      jump\t// in\n    tag_176:\n        /* \"contracts/WallyStaking.sol\":17185:17208  userInfo.pendingRewards */\n      swap4\n      0xa0\n      dup8\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap5\n      dup6\n      mstore\n      mload(0x40)\n      swap7\n      mload\n      dup8\n      mstore\n      mload\n      0x20\n      dup8\n      add\n      mstore\n      mload\n      0x40\n      dup7\n      add\n      mstore\n      mload\n        /* \"contracts/WallyStaking.sol\":17054:17071  userInfo.duration */\n      0x60\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup6\n      add\n      mstore\n      mload\n        /* \"contracts/WallyStaking.sol\":17101:17113  userInfo.apr */\n      0x80\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      add\n      mstore\n      mload\n        /* \"contracts/WallyStaking.sol\":17185:17208  userInfo.pendingRewards */\n      0xa0\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup4\n      add\n      mstore\n      mload\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":17138:17155  userInfo.isActive */\n      0xc0\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      add\n      mstore\n      return\n    tag_42:\n      jumpi(tag_66, callvalue)\n      tag_179\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_180\n      tag_11\n      jump\t// in\n    tag_180:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0xff\n        /* \"contracts/WallyStaking.sol\":8266:8280  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":8357:8401  if (stakingPaused) revert StakingNotActive() */\n      swap1\n      tag_181\n      jumpi\n        /* \"contracts/WallyStaking.sol\":8415:8426  amount == 0 */\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":8411:8450  if (amount == 0) revert InvalidAmount() */\n      tag_83\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":8549:8562  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0xff\n      dup3\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":8586:8600  !plan.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":8582:8629  if (!plan.isActive) revert InvalidStakingPlan() */\n      tag_185\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":8717:8727  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":8700:8706  _token */\n      immutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n      swap2\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      0x24\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup6\n      swap2\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      swap2\n      tag_189\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_190:\n        /* \"contracts/WallyStaking.sol\":8700:8737  _token.balanceOf(msg.sender) < amount */\n      pop\n      lt\n        /* \"contracts/WallyStaking.sol\":8696:8767  if (_token.balanceOf(msg.sender) < amount) revert InsufficientBalance() */\n      tag_89\n      jumpi\n        /* \"contracts/WallyStaking.sol\":10328:10348  totalStaked + amount */\n      tag_193\n        /* \"contracts/WallyStaking.sol\":8717:8727  msg.sender */\n      swap3\n      dup5\n      swap3\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":9011:9027  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"contracts/WallyStaking.sol\":9996:10021  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":9074:9091  userData.isActive */\n      swap3\n        /* \"contracts/WallyStaking.sol\":8266:8280  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":9074:9091  userData.isActive */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap3\n      0xff\n      dup5\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":9192:9584  if (isUserStakeActive) {... */\n      tag_194\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_195:\n        /* \"contracts/WallyStaking.sol\":9836:9842  amount */\n      tag_196\n        /* \"contracts/WallyStaking.sol\":8897:8912  block.timestamp */\n      dup8\n        /* \"contracts/WallyStaking.sol\":9656:9678  currentTime + duration */\n      tag_197\n        /* \"contracts/WallyStaking.sol\":8897:8912  block.timestamp */\n      dup13\n      timestamp\n        /* \"contracts/WallyStaking.sol\":9656:9678  currentTime + duration */\n      tag_8\n      jump\t// in\n    tag_197:\n        /* \"contracts/WallyStaking.sol\":8860:8864  this */\n      swap3\n      address\n        /* \"contracts/WallyStaking.sol\":8717:8727  msg.sender */\n      swap1\n      caller\n        /* \"contracts/WallyStaking.sol\":9836:9842  amount */\n      swap1\n      tag_18\n      jump\t// in\n    tag_196:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup7\n      dup6\n      sstore\n        /* \"contracts/WallyStaking.sol\":8897:8912  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":9996:10021  userData.stakingStartTime */\n      dup4\n      dup7\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":9011:9027  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":10045:10068  userData.stakingEndTime */\n      dup6\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":10091:10108  userData.duration */\n      dup9\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":10091:10108  userData.duration */\n      dup6\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":10144:10152  plan.apr */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":10129:10141  userData.apr */\n      0x05\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":9996:10021  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":8549:8562  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":8897:8912  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":10196:10218  userData.lastClaimTime */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":10328:10348  totalStaked + amount */\n      tag_8\n      jump\t// in\n    tag_193:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":10372:10408  Staked(msg.sender, amount, duration) */\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":8717:8727  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":10372:10408  Staked(msg.sender, amount, duration) */\n      swap3\n      log3\n        /* \"contracts/WallyStaking.sol\":9996:10021  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":9192:9584  if (isUserStakeActive) {... */\n    tag_194:\n        /* \"contracts/WallyStaking.sol\":9256:9281  userData.stakingStartTime */\n      dup3\n      dup6\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":9299:9320  stakingStartTime != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":9299:9355  stakingStartTime != 0 && currentTime >= stakingStartTime */\n      swap1\n      dup2\n      tag_198\n      jumpi\n        /* \"contracts/WallyStaking.sol\":9192:9584  if (isUserStakeActive) {... */\n    tag_199:\n        /* \"contracts/WallyStaking.sol\":9295:9574  if (stakingStartTime != 0 && currentTime >= stakingStartTime) {... */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":9192:9584  if (isUserStakeActive) {... */\n      tag_195\n        /* \"contracts/WallyStaking.sol\":9295:9574  if (stakingStartTime != 0 && currentTime >= stakingStartTime) {... */\n      jumpi\n        /* \"contracts/WallyStaking.sol\":9400:9435  calculatePendingRewards(msg.sender) */\n      tag_202\n        /* \"contracts/WallyStaking.sol\":8717:8727  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":9400:9435  calculatePendingRewards(msg.sender) */\n      tag_5\n      jump\t// in\n    tag_202:\n        /* \"contracts/WallyStaking.sol\":9457:9476  pendingRewards != 0 */\n      dup1\n        /* \"contracts/WallyStaking.sol\":9453:9560  if (pendingRewards != 0) {... */\n      tag_203\n      jumpi\n        /* \"contracts/WallyStaking.sol\":9295:9574  if (stakingStartTime != 0 && currentTime >= stakingStartTime) {... */\n    tag_204:\n      pop\n        /* \"contracts/WallyStaking.sol\":9192:9584  if (isUserStakeActive) {... */\n      jump(tag_195)\n        /* \"contracts/WallyStaking.sol\":9453:9560  if (pendingRewards != 0) {... */\n    tag_203:\n        /* \"contracts/WallyStaking.sol\":9526:9540  pendingRewards */\n      tag_205\n        /* \"contracts/WallyStaking.sol\":8717:8727  msg.sender */\n      swap1\n      caller\n        /* \"contracts/WallyStaking.sol\":9526:9540  pendingRewards */\n      tag_15\n      jump\t// in\n    tag_205:\n        /* \"contracts/WallyStaking.sol\":9453:9560  if (pendingRewards != 0) {... */\n      dup11\n      jump(tag_204)\n        /* \"contracts/WallyStaking.sol\":9299:9355  stakingStartTime != 0 && currentTime >= stakingStartTime */\n    tag_198:\n        /* \"contracts/WallyStaking.sol\":8897:8912  block.timestamp */\n      swap1\n      pop\n      timestamp\n        /* \"contracts/WallyStaking.sol\":9324:9355  currentTime >= stakingStartTime */\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":9299:9355  stakingStartTime != 0 && currentTime >= stakingStartTime */\n      dup12\n      jump(tag_199)\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      gt\n      tag_206\n      jumpi\n    tag_207:\n      dup2\n      tag_208\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      swap4\n      dup4\n      tag_7\n      jump\t// in\n    tag_208:\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_66\n      jumpi\n      dup5\n      swap1\n      mload\n        /* \"contracts/WallyStaking.sol\":8700:8728  _token.balanceOf(msg.sender) */\n      dup8\n      jump(tag_190)\n    tag_206:\n      returndatasize\n      swap2\n      pop\n      jump(tag_207)\n        /* \"contracts/WallyStaking.sol\":8582:8629  if (!plan.isActive) revert InvalidStakingPlan() */\n    tag_185:\n        /* \"contracts/WallyStaking.sol\":8609:8629  InvalidStakingPlan() */\n      shl(0xe0, 0xea48ba2b)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":8609:8629  InvalidStakingPlan() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":8609:8629  InvalidStakingPlan() */\n      revert\n        /* \"contracts/WallyStaking.sol\":8357:8401  if (stakingPaused) revert StakingNotActive() */\n    tag_181:\n        /* \"contracts/WallyStaking.sol\":8383:8401  StakingNotActive() */\n      shl(0xe2, 0x1a4a6f3b)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":8383:8401  StakingNotActive() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":8383:8401  StakingNotActive() */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_40:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      tag_215\n      tag_1\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_216\n      tag_11\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_217\n      tag_12\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      and\n      swap1\n        /* \"contracts/WallyStaking.sol\":12744:12762  user == address(0) */\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":12740:12791  if (user == address(0)) revert InvalidZeroAddress() */\n      tag_151\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":12845:12861  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":12914:12931  userData.isActive */\n      swap1\n      0x06\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      dup3\n      sload\n      0xff\n      dup2\n      and\n        /* \"contracts/WallyStaking.sol\":12913:12931  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":12909:12955  if (!userData.isActive) revert NoActiveStake() */\n      tag_220\n      jumpi\n        /* \"contracts/WallyStaking.sol\":13637:13674  EmergencyWithdraw(user, stakedAmount) */\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap4\n      0x20\n      swap4\n        /* \"contracts/WallyStaking.sol\":13489:13515  totalStaked - stakedAmount */\n      tag_222\n        /* \"contracts/WallyStaking.sol\":13600:13612  stakedAmount */\n      tag_223\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap4\n      sload(0x04)\n      0x00\n        /* \"contracts/WallyStaking.sol\":13398:13420  userData.lastClaimTime */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup9\n      sload\n      swap9\n      dup10\n      swap8\n      dup9\n      swap6\n      dup5\n      dup4\n      sstore\n        /* \"contracts/WallyStaking.sol\":13230:13255  userData.stakingStartTime */\n      dup5\n      0x01\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":13269:13292  userData.stakingEndTime */\n      dup5\n        /* \"contracts/WallyStaking.sol\":12845:12861  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":13269:13292  userData.stakingEndTime */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":13306:13323  userData.duration */\n      dup5\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":13306:13323  userData.duration */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":13337:13349  userData.apr */\n      dup5\n      0x05\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":13398:13420  userData.lastClaimTime */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":13489:13515  totalStaked - stakedAmount */\n      tag_4\n      jump\t// in\n    tag_222:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n        /* \"contracts/WallyStaking.sol\":13574:13580  _token */\n      immutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n        /* \"contracts/WallyStaking.sol\":13600:13612  stakedAmount */\n      tag_14\n      jump\t// in\n    tag_223:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":13637:13674  EmergencyWithdraw(user, stakedAmount) */\n      log2\n        /* \"contracts/WallyStaking.sol\":13230:13255  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":12909:12955  if (!userData.isActive) revert NoActiveStake() */\n    tag_220:\n        /* \"contracts/WallyStaking.sol\":10719:10734  NoActiveStake() */\n      shl(0xe1, 0x7d9a44a1)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":12940:12955  NoActiveStake() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":12940:12955  NoActiveStake() */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_38:\n      jumpi(tag_66, callvalue)\n      tag_226\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_227\n      tag_11\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_228\n      tag_12\n      jump\t// in\n    tag_228:\n        /* \"contracts/WallyStaking.sol\":3288:3300  5 * 365 days */\n      0x09660180\n        /* \"contracts/WallyStaking.sol\":4867:4898  duration > _MAX_DURATION_LENGTH */\n      dup2\n      gt\n        /* \"contracts/WallyStaking.sol\":4863:4944  if (duration > _MAX_DURATION_LENGTH) revert DurationTooLong(_MAX_DURATION_LENGTH) */\n      tag_229\n      jumpi\n        /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n      0x2710\n        /* \"contracts/WallyStaking.sol\":5027:5046  apr > _BASIS_POINTS */\n      dup3\n      gt\n        /* \"contracts/WallyStaking.sol\":5023:5070  if (apr > _BASIS_POINTS) revert InvalidAmount() */\n      tag_83\n      jumpi\n        /* \"contracts/WallyStaking.sol\":18639:18652  duration == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":18635:18678  if (duration == 0) revert InvalidDuration() */\n      tag_122\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/WallyStaking.sol\":18836:18904  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n      tag_235\n      jumpi\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n      0x14\n        /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":18994:19038  _availableDurations.length >= _MAX_DURATIONS */\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":18990:19073  if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached() */\n      tag_237\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":18840:18853  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      dup2\n        /* \"contracts/WallyStaking.sol\":19211:19215  true */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n      dup2\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/WallyStaking.sol\":19225:19233  plan.apr */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_239\n      jumpi\n      dup1\n        /* \"contracts/WallyStaking.sol\":19211:19215  true */\n      0x01\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n      tag_241\n      swap3\n      add\n        /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n      sstore\n      tag_10\n      jump\t// in\n    tag_241:\n      dup2\n      sload\n      swap1\n      0x03\n      shl\n      swap1\n      dup4\n      dup3\n      shl\n      swap2\n      not(0x00)\n      swap1\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":19316:19347  StakingPlanAdded(duration, apr) */\n      0x682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":19316:19347  StakingPlanAdded(duration, apr) */\n      dup1\n      log3\n        /* \"contracts/WallyStaking.sol\":19211:19215  true */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n    tag_239:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n        /* \"contracts/WallyStaking.sol\":18990:19073  if (_availableDurations.length >= _MAX_DURATIONS) revert MaxDurationsLimitReached() */\n    tag_237:\n        /* \"contracts/WallyStaking.sol\":19047:19073  MaxDurationsLimitReached() */\n      shl(0xe0, 0x5bb01e5b)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":19047:19073  MaxDurationsLimitReached() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":19047:19073  MaxDurationsLimitReached() */\n      revert\n        /* \"contracts/WallyStaking.sol\":18836:18904  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n    tag_235:\n        /* \"contracts/WallyStaking.sol\":18881:18904  DurationAlreadyExists() */\n      shl(0xe1, 0x57706857)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":18881:18904  DurationAlreadyExists() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":18881:18904  DurationAlreadyExists() */\n      revert\n        /* \"contracts/WallyStaking.sol\":4863:4944  if (duration > _MAX_DURATION_LENGTH) revert DurationTooLong(_MAX_DURATION_LENGTH) */\n    tag_229:\n        /* \"contracts/WallyStaking.sol\":4907:4944  DurationTooLong(_MAX_DURATION_LENGTH) */\n      shl(0xe0, 0xb666aeb7)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":4907:4944  DurationTooLong(_MAX_DURATION_LENGTH) */\n      mstore\n        /* \"contracts/WallyStaking.sol\":3288:3300  5 * 365 days */\n      0x09660180\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      0x00\n        /* \"contracts/WallyStaking.sol\":4907:4944  DurationTooLong(_MAX_DURATION_LENGTH) */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_36:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_246\n      tag_11\n      jump\t// in\n    tag_246:\n        /* \"contracts/WallyStaking.sol\":11996:12006  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":11979:11995  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0xff\n        /* \"contracts/WallyStaking.sol\":12054:12071  userData.isActive */\n      0x06\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":12053:12071  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":12049:12095  if (!userData.isActive) revert NoActiveStake() */\n      tag_220\n      jumpi\n        /* \"contracts/WallyStaking.sol\":12139:12174  calculatePendingRewards(msg.sender) */\n      tag_249\n        /* \"contracts/WallyStaking.sol\":11996:12006  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":12139:12174  calculatePendingRewards(msg.sender) */\n      tag_5\n      jump\t// in\n    tag_249:\n        /* \"contracts/WallyStaking.sol\":12188:12207  pendingRewards == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":12184:12236  if (pendingRewards == 0) revert NoRewardsAvailable() */\n      tag_250\n      jumpi\n        /* \"contracts/WallyStaking.sol\":12402:12416  pendingRewards */\n      tag_252\n        /* \"contracts/WallyStaking.sol\":12314:12329  block.timestamp */\n      swap2\n        /* \"contracts/WallyStaking.sol\":12289:12311  userData.lastClaimTime */\n      0x02\n        /* \"contracts/WallyStaking.sol\":12314:12329  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":12289:12311  userData.lastClaimTime */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11996:12006  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":12402:12416  pendingRewards */\n      tag_15\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":12184:12236  if (pendingRewards == 0) revert NoRewardsAvailable() */\n    tag_250:\n        /* \"contracts/WallyStaking.sol\":12216:12236  NoRewardsAvailable() */\n      shl(0xe0, 0xafb0be33)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":12216:12236  NoRewardsAvailable() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":12216:12236  NoRewardsAvailable() */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_34:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_257\n      tag_2\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_72\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_17\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_32:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_72\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_266\n      tag_2\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_75\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_16\n      jump\t// in\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_30:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_273\n      tag_11\n      jump\t// in\n    tag_273:\n        /* \"contracts/WallyStaking.sol\":10635:10645  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":10618:10634  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":10693:10710  userData.isActive */\n      0x06\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      sload\n      swap1\n      0xff\n      dup3\n      and\n        /* \"contracts/WallyStaking.sol\":10692:10710  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":10688:10734  if (!userData.isActive) revert NoActiveStake() */\n      tag_220\n      jumpi\n        /* \"contracts/WallyStaking.sol\":10618:10634  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":10767:10790  userData.stakingEndTime */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/WallyStaking.sol\":10748:10763  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":10748:10790  block.timestamp <= userData.stakingEndTime */\n      gt\n      iszero\n        /* \"contracts/WallyStaking.sol\":10744:10819  if (block.timestamp <= userData.stakingEndTime) revert StakingStillLocked() */\n      tag_276\n      jumpi\n        /* \"contracts/WallyStaking.sol\":11428:11454  totalStaked - stakedAmount */\n      tag_278\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      0x00\n        /* \"contracts/WallyStaking.sol\":11288:11310  userData.lastClaimTime */\n      0x02\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload(0x04)\n      swap3\n      dup1\n      sload\n        /* \"contracts/WallyStaking.sol\":10635:10645  msg.sender */\n      swap8\n      dup9\n      swap6\n      dup5\n        /* \"contracts/WallyStaking.sol\":11004:11039  calculatePendingRewards(msg.sender) */\n      tag_279\n        /* \"contracts/WallyStaking.sol\":10635:10645  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":11004:11039  calculatePendingRewards(msg.sender) */\n      tag_5\n      jump\t// in\n    tag_279:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap10\n      dup2\n      dup6\n      sstore\n        /* \"contracts/WallyStaking.sol\":11120:11145  userData.stakingStartTime */\n      dup2\n      0x01\n      dup7\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      sstore\n        /* \"contracts/WallyStaking.sol\":11196:11213  userData.duration */\n      dup5\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":11196:11213  userData.duration */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11227:11239  userData.apr */\n      dup5\n      0x05\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":11288:11310  userData.lastClaimTime */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11428:11454  totalStaked - stakedAmount */\n      tag_4\n      jump\t// in\n    tag_278:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n        /* \"contracts/WallyStaking.sol\":11545:11557  stakedAmount */\n      tag_280\n        /* \"contracts/WallyStaking.sol\":10635:10645  msg.sender */\n      dup3\n      caller\n        /* \"contracts/WallyStaking.sol\":11513:11519  _token */\n      immutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n        /* \"contracts/WallyStaking.sol\":11545:11557  stakedAmount */\n      tag_14\n      jump\t// in\n    tag_280:\n        /* \"contracts/WallyStaking.sol\":11616:11635  pendingRewards != 0 */\n      dup1\n        /* \"contracts/WallyStaking.sol\":11612:11703  if (pendingRewards != 0) {... */\n      tag_281\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_282:\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":11726:11776  Unstaked(msg.sender, stakedAmount, pendingRewards) */\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/WallyStaking.sol\":10635:10645  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":11726:11776  Unstaked(msg.sender, stakedAmount, pendingRewards) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":11120:11145  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":11612:11703  if (pendingRewards != 0) {... */\n    tag_281:\n        /* \"contracts/WallyStaking.sol\":11677:11691  pendingRewards */\n      tag_283\n        /* \"contracts/WallyStaking.sol\":10635:10645  msg.sender */\n      dup2\n      caller\n        /* \"contracts/WallyStaking.sol\":11677:11691  pendingRewards */\n      tag_15\n      jump\t// in\n    tag_283:\n        /* \"contracts/WallyStaking.sol\":11612:11703  if (pendingRewards != 0) {... */\n      jump(tag_282)\n        /* \"contracts/WallyStaking.sol\":10744:10819  if (block.timestamp <= userData.stakingEndTime) revert StakingStillLocked() */\n    tag_276:\n        /* \"contracts/WallyStaking.sol\":10799:10819  StakingStillLocked() */\n      shl(0xe0, 0x25e5ff65)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":10799:10819  StakingStillLocked() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":10799:10819  StakingStillLocked() */\n      revert\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_28:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_288\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_288:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_26:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_66\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_295\n      tag_11\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_296\n      tag_12\n      jump\t// in\n    tag_296:\n        /* \"contracts/WallyStaking.sol\":6771:6785  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup2\n      0xff\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":6884:6907  stakingPaused != paused */\n      sub\n        /* \"contracts/WallyStaking.sol\":6880:6997  if (stakingPaused != paused) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":6880:6997  if (stakingPaused != paused) {... */\n    tag_297:\n      not(0xff)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n      0xff\n      dup3\n      and\n      or\n        /* \"contracts/WallyStaking.sol\":6771:6785  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":6965:6986  StakingPaused(paused) */\n      0x3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c69\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup1\n        /* \"contracts/WallyStaking.sol\":6965:6986  StakingPaused(paused) */\n      log2\n        /* \"contracts/WallyStaking.sol\":6880:6997  if (stakingPaused != paused) {... */\n      dup1\n      dup1\n      jump(tag_252)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_24:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_288\n      tag_304\n      tag_1\n      jump\t// in\n    tag_304:\n      tag_5\n      jump\t// in\n    tag_22:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_66\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_311\n      jumpi\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_312:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_311:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_312)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_66\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_66\n      jumpi\n      jump\t// out\n    tag_3:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_66\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      swap1\n      jump\t// out\n    tag_4:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_319\n      jumpi\n      jump\t// out\n    tag_319:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/WallyStaking.sol\":14834:16182  function calculatePendingRewards(address user) ... */\n    tag_5:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":14996:15012  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WallyStaking.sol\":15042:15059  userData.isActive */\n      0x06\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0xff\n      and\n        /* \"contracts/WallyStaking.sol\":15041:15059  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":15041:15089  !userData.isActive || userData.stakedAmount == 0 */\n      tag_321\n      jumpi\n        /* \"contracts/WallyStaking.sol\":14834:16182  function calculatePendingRewards(address user) ... */\n    tag_322:\n        /* \"contracts/WallyStaking.sol\":15037:15124  if (!userData.isActive || userData.stakedAmount == 0) {... */\n      tag_323\n      jumpi\n        /* \"contracts/WallyStaking.sol\":15500:15532  endTime - userData.lastClaimTime */\n      tag_325\n        /* \"contracts/WallyStaking.sol\":15337:15352  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":14996:15012  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":15377:15400  userData.stakingEndTime */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":15337:15352  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/WallyStaking.sol\":15366:15400  endTime >= userData.stakingEndTime */\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":15362:15460  if (endTime >= userData.stakingEndTime) {... */\n      tag_326\n      jumpi\n        /* \"contracts/WallyStaking.sol\":14834:16182  function calculatePendingRewards(address user) ... */\n    tag_327:\n        /* \"contracts/WallyStaking.sol\":15510:15532  userData.lastClaimTime */\n      pop\n      0x02\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":15500:15532  endTime - userData.lastClaimTime */\n      swap1\n      tag_4\n      jump\t// in\n    tag_325:\n        /* \"contracts/WallyStaking.sol\":15546:15562  timeElapsed == 0 */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":15542:15597  if (timeElapsed == 0) {... */\n      tag_328\n      jumpi\n        /* \"contracts/WallyStaking.sol\":15843:15855  userData.apr */\n      0x05\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      sload\n        /* \"contracts/WallyStaking.sol\":15843:15855  userData.apr */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n      dup1\n      not(0x00)\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":1744:2084  assembly {... */\n      div\n      dup3\n      gt\n      dup2\n      mul\n      iszero\n        /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":1744:2084  assembly {... */\n      mul\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/WallyStaking.sol\":3056:3061  10000 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":1744:2084  assembly {... */\n      swap2\n      mul\n      div\n        /* \"contracts/WallyStaking.sol\":3176:3178  20 */\n      swap1\n      dup1\n      not(0x00)\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":1744:2084  assembly {... */\n      div\n      dup3\n      gt\n      dup2\n      mul\n      iszero\n        /* \"contracts/WallyStaking.sol\":3120:3128  365 days */\n      0x01e13380\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":1744:2084  assembly {... */\n      mul\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/WallyStaking.sol\":3120:3128  365 days */\n      0x01e13380\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":1744:2084  assembly {... */\n      swap2\n      mul\n      div\n        /* \"contracts/WallyStaking.sol\":14834:16182  function calculatePendingRewards(address user) ... */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":15542:15597  if (timeElapsed == 0) {... */\n    tag_328:\n        /* \"contracts/WallyStaking.sol\":15578:15586  return 0 */\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":15578:15586  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":15362:15460  if (endTime >= userData.stakingEndTime) {... */\n    tag_326:\n        /* \"contracts/WallyStaking.sol\":15416:15449  endTime = userData.stakingEndTime */\n      swap1\n      pop\n        /* \"contracts/WallyStaking.sol\":15362:15460  if (endTime >= userData.stakingEndTime) {... */\n      0x00\n      jump(tag_327)\n        /* \"contracts/WallyStaking.sol\":15037:15124  if (!userData.isActive || userData.stakedAmount == 0) {... */\n    tag_323:\n        /* \"contracts/WallyStaking.sol\":15105:15113  return 0 */\n      pop\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":15105:15113  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":15041:15089  !userData.isActive || userData.stakedAmount == 0 */\n    tag_321:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      pop\n      dup1\n      sload\n        /* \"contracts/WallyStaking.sol\":15063:15089  userData.stakedAmount == 0 */\n      iszero\n        /* \"contracts/WallyStaking.sol\":15041:15089  !userData.isActive || userData.stakedAmount == 0 */\n      jump(tag_322)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_7:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_239\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_8:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_319\n      jumpi\n      jump\t// out\n    tag_9:\n      mload(0x40)\n      swap1\n      0xe0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_239\n      jumpi\n      0x40\n      mstore\n      0x00\n      0xc0\n      dup4\n      dup3\n      dup2\n      mstore\n      dup3\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      0x40\n      dup3\n      add\n      mstore\n      dup3\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      0xa0\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\t// out\n    tag_10:\n        /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_340\n      jumpi\n        /* \"contracts/WallyStaking.sol\":18994:19013  _availableDurations */\n      0x07\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_340:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_342\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_342:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1354:1377  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_14:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      swap3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_348\n      swap2\n      tag_349\n      0x64\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_7\n      jump\t// in\n    tag_349:\n      tag_19\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":19510:20177  function _claimRewards(address user, uint256 amount) ... */\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      and\n      swap2\n        /* \"contracts/WallyStaking.sol\":19599:19617  user == address(0) */\n      dup3\n      iszero\n        /* \"contracts/WallyStaking.sol\":19595:19646  if (user == address(0)) revert InvalidZeroAddress() */\n      tag_151\n      jumpi\n        /* \"contracts/WallyStaking.sol\":19660:19671  amount == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":19656:19695  if (amount == 0) revert InvalidAmount() */\n      tag_83\n      jumpi\n        /* \"contracts/WallyStaking.sol\":19795:19807  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":19830:19851  amount >= rewardsPool */\n      swap1\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":19826:19885  if (amount >= rewardsPool) revert InsufficientRewardsPool() */\n      tag_354\n      jumpi\n        /* \"contracts/WallyStaking.sol\":20112:20118  amount */\n      tag_356\n        /* \"contracts/WallyStaking.sol\":20017:20037  rewardsPool - amount */\n      dup2\n        /* \"contracts/WallyStaking.sol\":20143:20170  RewardClaimed(user, amount) */\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/WallyStaking.sol\":20017:20037  rewardsPool - amount */\n      swap5\n      tag_357\n      dup3\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":20017:20037  rewardsPool - amount */\n      swap7\n      tag_4\n      jump\t// in\n    tag_357:\n        /* \"contracts/WallyStaking.sol\":19795:19807  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":20086:20092  _token */\n      immutable(\"0x7b1f476dcca78c0c07534aac79d4a050a1d07b9d08c662437f2c9d98632779bc\")\n        /* \"contracts/WallyStaking.sol\":20112:20118  amount */\n      tag_14\n      jump\t// in\n    tag_356:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":20143:20170  RewardClaimed(user, amount) */\n      log2\n        /* \"contracts/WallyStaking.sol\":19510:20177  function _claimRewards(address user, uint256 amount) ... */\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":19826:19885  if (amount >= rewardsPool) revert InsufficientRewardsPool() */\n    tag_354:\n        /* \"contracts/WallyStaking.sol\":19860:19885  InsufficientRewardsPool() */\n      shl(0xe0, 0x447b0f67)\n        /* \"contracts/WallyStaking.sol\":19615:19616  0 */\n      0x00\n        /* \"contracts/WallyStaking.sol\":19860:19885  InsufficientRewardsPool() */\n      mstore\n      0x04\n        /* \"contracts/WallyStaking.sol\":19615:19616  0 */\n      0x00\n        /* \"contracts/WallyStaking.sol\":19860:19885  InsufficientRewardsPool() */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_16:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_328\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_17:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_328\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_18:\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap3\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_348\n      swap2\n      tag_349\n      0x84\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_7\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_19:\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7823:8244  assembly (\"memory-safe\") {... */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7823:8244  assembly (\"memory-safe\") {... */\n      dup3\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_85\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      tag_366\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_369:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":1207:20179  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_368)\n\n    auxdata: 0xa2646970667358221220a2eb35ee130c8e9b68d011a8eb9a4399951b4b2ae3467e5b0febac22ef2d8e4d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 1136,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_1444": {
									"entryPoint": 1018,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_1446": {
									"entryPoint": 1264,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0601f611a7038819003918201601f19168301916001600160401b038311848410176103a15780849260409485528339810103126103e25761004d6020610046836103e6565b92016103e6565b600180556001600160a01b039091169081156103d3576001600160a01b038116156103d35761009291608052610082816103fa565b5061008c81610470565b506104f0565b505f516020611a305f395f51905f525f81815260208190527ff6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d25580545f5160206119f05f395f51905f5291829055909290917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9080a46276a7005f5260026020525f5160206119905f395f51905f525460ff166103c457601460075410156103b5576276a7005f5260026020525f5160206119905f395f51905f52805460ff191660011790556101f47fa1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8d55600754680100000000000000008110156103a157600181018060075581101561038d576276a7009060075f5260205f2001556101f46276a7005f5160206119d05f395f51905f525f80a362ed4e005f5260026020525f5160206119705f395f51905f525460ff166103c457601460075410156103b55762ed4e005f5260026020525f5160206119705f395f51905f52805460ff191660011790556103207f089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd83355600754680100000000000000008110156103a157600181018060075581101561038d5762ed4e009060075f5260205f20015561032062ed4e005f5160206119d05f395f51905f525f80a36301e133805f5260026020525f516020611a105f395f51905f525460ff166103c457601460075410156103b5576301e133805f5260026020525f516020611a105f395f51905f52805460ff191660011790556104b07fdc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33c55600754680100000000000000008110156103a157600181018060075581101561038d576301e133809060075f5260205f2001556104b06301e133805f5160206119d05f395f51905f525f80a360ff19600654166006556040516113bf908161057182396080518181816101eb015281816105a8015281816107ba015281816109f701528181610cc601526111af0152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b635bb01e5b60e01b5f5260045ffd5b635770685760e11b5f5260045ffd5b63f6b2911f60e01b5f5260045ffd5b5f80fd5b51906001600160a01b03821682036103e257565b6001600160a01b0381165f9081525f516020611a505f395f51905f52602052604090205460ff1661046b576001600160a01b03165f8181525f516020611a505f395f51905f5260205260408120805460ff191660011790553391905f5160206119305f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081525f5160206119505f395f51905f52602052604090205460ff1661046b576001600160a01b03165f8181525f5160206119505f395f51905f5260205260408120805460ff191660011790553391905f5160206119f05f395f51905f52905f5160206119305f395f51905f529080a4600190565b6001600160a01b0381165f9081525f5160206119b05f395f51905f52602052604090205460ff1661046b576001600160a01b03165f8181525f5160206119b05f395f51905f5260205260408120805460ff191660011790553391905f516020611a305f395f51905f52905f5160206119305f395f51905f529080a460019056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610e1457508063097aad1014610df157806315b31bbb14610d77578063248a9ca314610d455780632def662014610c3b5780632f2ff15d14610bfe57806336568abe14610bba578063372500ab14610b555780635ef23fa914610a375780636ff1c9bc1461093a5780637b0472f01461076357806380933608146106975780638980f11f1461056457806391d148541461051c5780639fca9c22146104e4578063a217fddf146104ca578063aea1b6ef146103cc578063b6b365c214610316578063beceed391461017e578063d547741f1461013a5763dfe6b5d614610103575f80fd5b34610136575f36600319011261013657606060045460055460ff6006541690604051928352602083015215156040820152f35b5f80fd5b346101365760403660031901126101365761017c600435610159610e7d565b90610177610172825f525f602052600160405f20015490565b6110db565b61126d565b005b346101365760203660031901126101365760043561019a611016565b335f9081527ff6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254602052604090205460ff16156102df5780156102d0576040516370a0823160e01b81523360048201527f0000000000000000000000000000000000000000000000000000000000000000906020816024816001600160a01b0386165afa80156102c55783915f91610290575b501061028157816102718160209361026c7ff8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f3129660055492309033906112ed565b610f96565b600555604051908152a160018055005b631e9acf1760e31b5f5260045ffd5b9150506020813d6020116102bd575b816102ac60209383610f74565b81010312610136578290518461022c565b3d915061029f565b6040513d5f823e3d90fd5b63162908e360e11b5f5260045ffd5b63e2517d3f60e01b5f52336004527f51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b60245260445ffd5b34610136575f366003190112610136576040518060206007549283815201809260075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688905f5b8181106103b65750505081610374910382610f74565b604051918291602083019060208452518091526040830191905f5b81811061039d575050500390f35b825184528594506020938401939092019160010161038f565b825484526020909301926001928301920161035e565b346101365760603660031901126101365760043560243590604435801515809103610136576103f9611016565b61040161106c565b61271083116102d0575f6007545f5b8181106104a0575b50501561049157815f52600260205260405f2090836001830181815403610489575b50508060ff835416151503610476575b50507fad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff15f80a360018055005b60ff80198354169116179055828061044a565b55838561043a565b637616640160e01b5f5260045ffd5b846104aa82610fea565b90549060031b1c146104be57600101610410565b50505060018480610418565b34610136575f3660031901126101365760206040515f8152f35b34610136576020366003190112610136576004355f5260026020526040805f20600160ff825416910154825191151582526020820152f35b3461013657604036600319011261013657610535610e7d565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101365760403660031901126101365761057d610e67565b60243590610589611016565b61059161106c565b6001600160a01b031680156106885781156102d0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168114610679576040516370a0823160e01b8152306004820152602081602481855afa80156102c55783915f91610644575b501061028157610612823383611113565b6040519182527f8619312ed4eff1cf9f0116e6db2f49d9570a86f0350d1c5ad1bd0f7b0cf9e13260203393a360018055005b9150506020813d602011610671575b8161066060209383610f74565b810103126101365782905184610601565b3d9150610653565b63ffc9b52b60e01b5f5260045ffd5b63f6b2911f60e01b5f5260045ffd5b346101365760203660031901126101365760e06106b2610e67565b6106ba610fa3565b506001600160a01b0381165f908152600360205260409020906106db610fa3565b9180548352600181015490602084019182526003810154604085019081526004820154906060860191825261072c60ff600660058601549560808a019687520154169560c088019615158752610eca565b9360a08701948552604051965187525160208701525160408601525160608501525160808401525160a083015251151560c0820152f35b346101365761077136610e93565b9061077a611016565b60ff600654166004549061092b5781156102d057825f52600260205260405f209060ff8254161561091c576040516370a0823160e01b81523360048201527f000000000000000000000000000000000000000000000000000000000000000091906020816024816001600160a01b0387165afa80156102c55785915f916108e7575b50106102815761086e928492335f526003602052600160405f2092600684019260ff8454166108a3575b61083e876108348c42610f96565b92309033906112ed565b8685554283860155600385015588600485015501546005830155600160ff19825416179055600242910155610f96565b6004556040519081527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060203392a360018055005b8285015480151590816108dc575b5015610826576108c033610eca565b806108cc575b50610826565b6108d69033611155565b8a6108c6565b90504210158b6108b1565b9150506020813d602011610914575b8161090360209383610f74565b8101031261013657849051876107fc565b3d91506108f6565b63ea48ba2b60e01b5f5260045ffd5b631a4a6f3b60e21b5f5260045ffd5b3461013657602036600319011261013657610953610e67565b61095b611016565b61096361106c565b6001600160a01b03811690811561068857815f52600360205260405f20906006820191825460ff811615610a28577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695936020936109f2610a1b936004545f60028854988997889584835584600184015584600384015584600484015584600584015560ff191690550155610ea9565b6004557f0000000000000000000000000000000000000000000000000000000000000000611113565b604051908152a260018055005b637d9a44a160e11b5f5260045ffd5b3461013657610a4536610e93565b90610a4e611016565b610a5661106c565b63096601808111610b3e5761271082116102d057801561049157805f52600260205260ff60405f205416610b2f5760146007541015610b2057805f52600260205281600160405f208160ff19825416178155015560075468010000000000000000811015610b0c57806001610ace9201600755610fea565b81549060031b9083821b915f19901b19161790557f682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc3645f80a360018055005b634e487b7160e01b5f52604160045260245ffd5b635bb01e5b60e01b5f5260045ffd5b635770685760e11b5f5260045ffd5b63b666aeb760e01b5f52630966018060045260245ffd5b34610136575f36600319011261013657610b6d611016565b335f52600360205260405f2060ff60068201541615610a2857610b8f33610eca565b8015610bab57610ba59160024291015533611155565b60018055005b63afb0be3360e01b5f5260045ffd5b3461013657604036600319011261013657610bd3610e7d565b336001600160a01b03821603610bef5761017c9060043561126d565b63334bd91960e11b5f5260045ffd5b346101365760403660031901126101365761017c600435610c1d610e7d565b90610c36610172825f525f602052600160405f20015490565b6111eb565b34610136575f36600319011261013657610c53611016565b335f52600360205260405f20600681019081549060ff821615610a285760038101918254421115610d3657610cbc915f600260045492805497889584610c9833610eca565b998185558160018601555584600484015584600584015560ff191690550155610ea9565b600455610cea82337f0000000000000000000000000000000000000000000000000000000000000000611113565b80610d27575b60405191825260208201527f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e60403392a260018055005b610d318133611155565b610cf0565b6325e5ff6560e01b5f5260045ffd5b34610136576020366003190112610136576020610d6f6004355f525f602052600160405f20015490565b604051908152f35b346101365760203660031901126101365760043580151580910361013657610d9d611016565b610da561106c565b6006548160ff8216151503610dba5760018055005b60ff191660ff8216176006557f3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c695f80a28080610ba5565b34610136576020366003190112610136576020610d6f610e0f610e67565b610eca565b34610136576020366003190112610136576004359063ffffffff60e01b821680920361013657602091637965db0b60e01b8114908115610e56575b5015158152f35b6301ffc9a760e01b14905083610e4f565b600435906001600160a01b038216820361013657565b602435906001600160a01b038216820361013657565b6040906003190112610136576004359060243590565b91908203918211610eb657565b634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03165f908152600360205260409020600681015460ff16158015610f6b575b610f6657610f1242600383015480421015610f5e575b50600283015490610ea9565b908115610f585760058154910154805f1904821181021561271002156101365761271091020490805f190482118102156301e133800215610136576301e1338091020490565b50505f90565b90505f610f06565b505f90565b50805415610ef0565b90601f8019910116810190811067ffffffffffffffff821117610b0c57604052565b91908201809211610eb657565b6040519060e0820182811067ffffffffffffffff821117610b0c576040525f60c0838281528260208201528260408201528260608201528260808201528260a08201520152565b6007548110156110025760075f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b600260015414611027576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156110a457565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff16156110fd5750565b63e2517d3f60e01b5f523360045260245260445ffd5b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526111539161114e606483610f74565b611331565b565b6001600160a01b0381169182156106885780156102d05760055490818110156111dc576111d3817f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241946111aa82602096610ea9565b6005557f0000000000000000000000000000000000000000000000000000000000000000611113565b604051908152a2565b63447b0f6760e01b5f5260045ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610f58575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610f58575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526111539161114e608483610f74565b905f602091828151910182855af1156102c5575f513d61138057506001600160a01b0381163b155b6113605750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b6001141561135956fea2646970667358221220a2eb35ee130c8e9b68d011a8eb9a4399951b4b2ae3467e5b0febac22ef2d8e4d64736f6c634300081c00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd832a1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8cf6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775dc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33b51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152bad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5",
							"opcodes": "PUSH1 0xA0 PUSH1 0x1F PUSH2 0x1A70 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x3A1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x3E2 JUMPI PUSH2 0x4D PUSH1 0x20 PUSH2 0x46 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 ADD PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x92 SWAP2 PUSH1 0x80 MSTORE PUSH2 0x82 DUP2 PUSH2 0x3FA JUMP JUMPDEST POP PUSH2 0x8C DUP2 PUSH2 0x470 JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1A30 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xF6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D255 DUP1 SLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 DUP3 SWAP1 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP1 DUP1 LOG4 PUSH3 0x76A700 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1990 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x14 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x3B5 JUMPI PUSH3 0x76A700 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1990 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1F4 PUSH32 0xA1EF5B42F18533D67A183A193EA6C3FABFAA3BDABC3FC0E3F65B19B517DF6E8D SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH3 0x76A700 SWAP1 PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x1F4 PUSH3 0x76A700 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19D0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG3 PUSH3 0xED4E00 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1970 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x14 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x3B5 JUMPI PUSH3 0xED4E00 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1970 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x320 PUSH32 0x89CFCBF844E824FEEE5F634CBC488382291F3C9E0DE5905F3C30812390DD833 SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH3 0xED4E00 SWAP1 PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x320 PUSH3 0xED4E00 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19D0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG3 PUSH4 0x1E13380 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1A10 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x14 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x3B5 JUMPI PUSH4 0x1E13380 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1A10 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x4B0 PUSH32 0xDC083EB4DA7563BBD761324B5158D9D40AF7C7174AFE39B0B31A7577C44FC33C SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH4 0x1E13380 SWAP1 PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x4B0 PUSH4 0x1E13380 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19D0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG3 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH2 0x13BF SWAP1 DUP2 PUSH2 0x571 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1EB ADD MSTORE DUP2 DUP2 PUSH2 0x5A8 ADD MSTORE DUP2 DUP2 PUSH2 0x7BA ADD MSTORE DUP2 DUP2 PUSH2 0x9F7 ADD MSTORE DUP2 DUP2 PUSH2 0xCC6 ADD MSTORE PUSH2 0x11AF ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x5BB01E5B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x57706857 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xF6B2911F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3E2 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1A50 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x46B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1A50 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1930 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1950 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x46B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1950 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1930 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19B0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x46B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19B0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1A30 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1930 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xE14 JUMPI POP DUP1 PUSH4 0x97AAD10 EQ PUSH2 0xDF1 JUMPI DUP1 PUSH4 0x15B31BBB EQ PUSH2 0xD77 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD45 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xC3B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xBFE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xBBA JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xB55 JUMPI DUP1 PUSH4 0x5EF23FA9 EQ PUSH2 0xA37 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x93A JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0x80933608 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x9FCA9C22 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xAEA1B6EF EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xB6B365C2 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x13A JUMPI PUSH4 0xDFE6B5D6 EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x60 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0xFF PUSH1 0x6 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x17C PUSH1 0x4 CALLDATALOAD PUSH2 0x159 PUSH2 0xE7D JUMP JUMPDEST SWAP1 PUSH2 0x177 PUSH2 0x172 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19A PUSH2 0x1016 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xF6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D254 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DF JUMPI DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2C5 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x290 JUMPI JUMPDEST POP LT PUSH2 0x281 JUMPI DUP2 PUSH2 0x271 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x26C PUSH32 0xF8FAD42E780BFA5459BE3FE691E8BA1AEC70342250112139C5771C3FD155F312 SWAP7 PUSH1 0x5 SLOAD SWAP3 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BD JUMPI JUMPDEST DUP2 PUSH2 0x2AC PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP3 SWAP1 MLOAD DUP5 PUSH2 0x22C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x51785D261C3B3E8C2CFE2D0E108B9AB2B1FB703FF9E9E49ABA4EBDC85C36152B PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3B6 JUMPI POP POP POP DUP2 PUSH2 0x374 SWAP2 SUB DUP3 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x39D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x35E JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x136 JUMPI PUSH2 0x3F9 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x2710 DUP4 GT PUSH2 0x2D0 JUMPI PUSH0 PUSH1 0x7 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4A0 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x491 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 PUSH1 0x1 DUP4 ADD DUP2 DUP2 SLOAD SUB PUSH2 0x489 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xFF DUP4 SLOAD AND ISZERO ISZERO SUB PUSH2 0x476 JUMPI JUMPDEST POP POP PUSH32 0xAD2954A6781CDC42B8AF5DF6F557041B3F146AAF8FBC031D767B7AD48164CFF1 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP3 DUP1 PUSH2 0x44A JUMP JUMPDEST SSTORE DUP4 DUP6 PUSH2 0x43A JUMP JUMPDEST PUSH4 0x76166401 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST DUP5 PUSH2 0x4AA DUP3 PUSH2 0xFEA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR EQ PUSH2 0x4BE JUMPI PUSH1 0x1 ADD PUSH2 0x410 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP5 DUP1 PUSH2 0x418 JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD AND SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x535 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x57D PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x589 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x688 JUMPI DUP2 ISZERO PUSH2 0x2D0 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x2C5 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x644 JUMPI JUMPDEST POP LT PUSH2 0x281 JUMPI PUSH2 0x612 DUP3 CALLER DUP4 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x8619312ED4EFF1CF9F0116E6DB2F49D9570A86F0350D1C5AD1BD0F7B0CF9E132 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x671 JUMPI JUMPDEST DUP2 PUSH2 0x660 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP3 SWAP1 MLOAD DUP5 PUSH2 0x601 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x653 JUMP JUMPDEST PUSH4 0xFFC9B52B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xF6B2911F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0xE0 PUSH2 0x6B2 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x6BA PUSH2 0xFA3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x6DB PUSH2 0xFA3 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x20 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH2 0x72C PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP11 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP6 PUSH1 0xC0 DUP9 ADD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH2 0xECA JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP7 MLOAD DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH2 0x771 CALLDATASIZE PUSH2 0xE93 JUMP JUMPDEST SWAP1 PUSH2 0x77A PUSH2 0x1016 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 SLOAD AND PUSH1 0x4 SLOAD SWAP1 PUSH2 0x92B JUMPI DUP2 ISZERO PUSH2 0x2D0 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF DUP3 SLOAD AND ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2C5 JUMPI DUP6 SWAP2 PUSH0 SWAP2 PUSH2 0x8E7 JUMPI JUMPDEST POP LT PUSH2 0x281 JUMPI PUSH2 0x86E SWAP3 DUP5 SWAP3 CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x6 DUP5 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD AND PUSH2 0x8A3 JUMPI JUMPDEST PUSH2 0x83E DUP8 PUSH2 0x834 DUP13 TIMESTAMP PUSH2 0xF96 JUMP JUMPDEST SWAP3 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x12ED JUMP JUMPDEST DUP7 DUP6 SSTORE TIMESTAMP DUP4 DUP7 ADD SSTORE PUSH1 0x3 DUP6 ADD SSTORE DUP9 PUSH1 0x4 DUP6 ADD SSTORE ADD SLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP3 DUP6 ADD SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x8DC JUMPI JUMPDEST POP ISZERO PUSH2 0x826 JUMPI PUSH2 0x8C0 CALLER PUSH2 0xECA JUMP JUMPDEST DUP1 PUSH2 0x8CC JUMPI JUMPDEST POP PUSH2 0x826 JUMP JUMPDEST PUSH2 0x8D6 SWAP1 CALLER PUSH2 0x1155 JUMP JUMPDEST DUP11 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO DUP12 PUSH2 0x8B1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x914 JUMPI JUMPDEST DUP2 PUSH2 0x903 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP5 SWAP1 MLOAD DUP8 PUSH2 0x7FC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8F6 JUMP JUMPDEST PUSH4 0xEA48BA2B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x1A4A6F3B PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x953 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x95B PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x963 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x688 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xA28 JUMPI PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x9F2 PUSH2 0xA1B SWAP4 PUSH1 0x4 SLOAD PUSH0 PUSH1 0x2 DUP9 SLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP6 DUP5 DUP4 SSTORE DUP5 PUSH1 0x1 DUP5 ADD SSTORE DUP5 PUSH1 0x3 DUP5 ADD SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH32 0x0 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x7D9A44A1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH2 0xA45 CALLDATASIZE PUSH2 0xE93 JUMP JUMPDEST SWAP1 PUSH2 0xA4E PUSH2 0x1016 JUMP JUMPDEST PUSH2 0xA56 PUSH2 0x106C JUMP JUMPDEST PUSH4 0x9660180 DUP2 GT PUSH2 0xB3E JUMPI PUSH2 0x2710 DUP3 GT PUSH2 0x2D0 JUMPI DUP1 ISZERO PUSH2 0x491 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0xB2F JUMPI PUSH1 0x14 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xB20 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH1 0xFF NOT DUP3 SLOAD AND OR DUP2 SSTORE ADD SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xB0C JUMPI DUP1 PUSH1 0x1 PUSH2 0xACE SWAP3 ADD PUSH1 0x7 SSTORE PUSH2 0xFEA JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH32 0x682563ED446791DCD2BB66AA531EBAF528BCE493E57F037313263799851BC364 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x5BB01E5B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x57706857 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xB666AEB7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH4 0x9660180 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xB6D PUSH2 0x1016 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND ISZERO PUSH2 0xA28 JUMPI PUSH2 0xB8F CALLER PUSH2 0xECA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBA5 SWAP2 PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE CALLER PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0xAFB0BE33 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xBD3 PUSH2 0xE7D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xBEF JUMPI PUSH2 0x17C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x126D JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x17C PUSH1 0x4 CALLDATALOAD PUSH2 0xC1D PUSH2 0xE7D JUMP JUMPDEST SWAP1 PUSH2 0xC36 PUSH2 0x172 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xC53 PUSH2 0x1016 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0xA28 JUMPI PUSH1 0x3 DUP2 ADD SWAP2 DUP3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xD36 JUMPI PUSH2 0xCBC SWAP2 PUSH0 PUSH1 0x2 PUSH1 0x4 SLOAD SWAP3 DUP1 SLOAD SWAP8 DUP9 SWAP6 DUP5 PUSH2 0xC98 CALLER PUSH2 0xECA JUMP JUMPDEST SWAP10 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0xCEA DUP3 CALLER PUSH32 0x0 PUSH2 0x1113 JUMP JUMPDEST DUP1 PUSH2 0xD27 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0xD31 DUP2 CALLER PUSH2 0x1155 JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST PUSH4 0x25E5FF65 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 PUSH2 0xD6F PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x136 JUMPI PUSH2 0xD9D PUSH2 0x1016 JUMP JUMPDEST PUSH2 0xDA5 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0xDBA JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0x6 SSTORE PUSH32 0x3CF4FE733160F8F8C48336FAB32ACEE32EBAAA423A08A2BE4E5CEFF97DD98C69 PUSH0 DUP1 LOG2 DUP1 DUP1 PUSH2 0xBA5 JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 PUSH2 0xD6F PUSH2 0xE0F PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x136 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xE56 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x136 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x136 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xEB6 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF6B JUMPI JUMPDEST PUSH2 0xF66 JUMPI PUSH2 0xF12 TIMESTAMP PUSH1 0x3 DUP4 ADD SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0xF5E JUMPI JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0xF58 JUMPI PUSH1 0x5 DUP2 SLOAD SWAP2 ADD SLOAD DUP1 PUSH0 NOT DIV DUP3 GT DUP2 MUL ISZERO PUSH2 0x2710 MUL ISZERO PUSH2 0x136 JUMPI PUSH2 0x2710 SWAP2 MUL DIV SWAP1 DUP1 PUSH0 NOT DIV DUP3 GT DUP2 MUL ISZERO PUSH4 0x1E13380 MUL ISZERO PUSH2 0x136 JUMPI PUSH4 0x1E13380 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF06 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST POP DUP1 SLOAD ISZERO PUSH2 0xEF0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0C JUMPI PUSH1 0x40 MSTORE PUSH0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1027 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A4 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10FD JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1153 SWAP2 PUSH2 0x114E PUSH1 0x64 DUP4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x1331 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x688 JUMPI DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x5 SLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11D3 DUP2 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP5 PUSH2 0x11AA DUP3 PUSH1 0x20 SWAP7 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH32 0x0 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x447B0F67 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF58 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF58 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1153 SWAP2 PUSH2 0x114E PUSH1 0x84 DUP4 PUSH2 0xF74 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2C5 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x1380 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1360 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1359 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEB CALLDATALOAD 0xEE SGT 0xC DUP15 SWAP12 PUSH9 0xD011A8EB9A4399951B 0x4B 0x2A 0xE3 CHAINID PUSH31 0x5B0FEBAC22EF2D8E4D64736F6C634300081C00332F8788117E7EFF1D82E926 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0D7D7FFB7A348E1C PUSH11 0x2869081A26547B49160DD RETURNDATASIZE 0xF7 0x2D SAR PUSH22 0xA570EB9B698292EC089CFCBF844E824FEEE5F634CBC4 DUP9 CODESIZE 0x22 SWAP2 RETURN 0xC9 0xE0 0xDE MSIZE SDIV RETURN 0xC3 ADDMOD SLT CODECOPY 0xD 0xD8 ORIGIN LOG1 0xEF JUMPDEST TIMESTAMP CALL DUP6 CALLER 0xD6 PUSH27 0x183A193EA6C3FABFAA3BDABC3FC0E3F65B19B517DF6E8CF6C17DA3 DUP7 TSTORE SWAP7 GASLIMIT SLOAD PUSH14 0xB4630D07C45803FB99F9B61DD452 0xDE DUP14 0xE1 0xCD 0x21 MSIZE 0xD2 SLOAD PUSH9 0x2563ED446791DCD2BB PUSH7 0xAA531EBAF528BC 0xE4 SWAP4 0xE5 PUSH32 0x37313263799851BC364A49807205CE4D355092EF5A8A18F56E8913CF4A201FB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xDC083EB4DA7563BBD761324B5158D9D40AF7C7174AFE CODECOPY 0xB0 0xB3 BYTE PUSH22 0x77C44FC33B51785D261C3B3E8C2CFE2D0E108B9AB2B1 0xFB PUSH17 0x3FF9E9E49ABA4EBDC85C36152BAD3228B6 PUSH23 0xF7D3CD4284A5443F17F1962B36E491B30A40B2405849E5 SWAP8 0xBA PUSH0 0xB5 ",
							"sourceMap": "1207:18972:12:-:0;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1716:1:6;;;-1:-1:-1;;;;;1207:18972:12;;;;3700:26;;3696:59;;-1:-1:-1;;;;;1207:18972:12;;3769:26;3765:59;;4007:47;3835:29;;;3906:44;;;:::i;:::-;;3960:37;;;:::i;:::-;;4007:47;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;1207:18972:12;;;;;;;3901:22:1;1207:18972:12;;-1:-1:-1;;;;;;;;;;;1716:1:6;;;;1354:23:12;;1207:18972;;5886:52:1;;-1:-1:-1;5886:52:1;4267:7:12;-1:-1:-1;1207:18972:12;18840:13;1207:18972;;-1:-1:-1;;;;;;;;;;;3056:5:12;;;18836:68;;3176:2;18994:19;3056:5;18994:44;;18990:83;;4267:7;-1:-1:-1;1207:18972:12;18840:13;1207:18972;;-1:-1:-1;;;;;;;;;;;1432:33:12;;-1:-1:-1;;1432:33:12;1716:1:6;1432:33:12;;;4276:3;19225:8;1716:1:6;18994:19:12;3176:2;;;;;;;1716:1:6;3176:2:12;;;18994:19;3176:2;;;;;;4267:7;3176:2;18994:19;-1:-1:-1;3176:2:12;1207:18972;-1:-1:-1;3176:2:12;;;4276:3;4267:7;-1:-1:-1;;;;;;;;;;;;19316:31:12;;4330:8;-1:-1:-1;1207:18972:12;18840:13;1207:18972;;-1:-1:-1;;;;;;;;;;;3056:5:12;;;18836:68;;3176:2;18994:19;3056:5;18994:44;;18990:83;;4330:8;-1:-1:-1;1207:18972:12;18840:13;1207:18972;;-1:-1:-1;;;;;;;;;;;1432:33:12;;-1:-1:-1;;1432:33:12;1716:1:6;1432:33:12;;;4340:3;19225:8;1716:1:6;18994:19:12;3176:2;;;;;;;1716:1:6;3176:2:12;;;18994:19;3176:2;;;;;;4330:8;3176:2;18994:19;-1:-1:-1;3176:2:12;1207:18972;-1:-1:-1;3176:2:12;;;4340:3;4330:8;-1:-1:-1;;;;;;;;;;;;19316:31:12;;4393:8;-1:-1:-1;1207:18972:12;18840:13;1207:18972;;-1:-1:-1;;;;;;;;;;;3056:5:12;;;18836:68;;3176:2;18994:19;3056:5;18994:44;;18990:83;;4393:8;-1:-1:-1;1207:18972:12;18840:13;1207:18972;;-1:-1:-1;;;;;;;;;;;1432:33:12;;-1:-1:-1;;1432:33:12;1716:1:6;1432:33:12;;;4403:4;19225:8;1716:1:6;18994:19:12;3176:2;;;;;;;1716:1:6;3176:2:12;;;18994:19;3176:2;;;;;;4393:8;3176:2;18994:19;-1:-1:-1;3176:2:12;1207:18972;-1:-1:-1;3176:2:12;;;4403:4;4393:8;-1:-1:-1;;;;;;;;;;;;19316:31:12;;1432:33;;4452:22;1432:33;;4452:22;1432:33;1207:18972;;;;;;;;3835:29;1207:18972;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3176:2;1207:18972;;;-1:-1:-1;3176:2:12;;;;;-1:-1:-1;3176:2:12;;1207:18972;;;-1:-1:-1;1207:18972:12;;;;;-1:-1:-1;1207:18972:12;18990:83;19047:26;;;-1:-1:-1;19047:26:12;;-1:-1:-1;19047:26:12;18836:68;18881:23;;;-1:-1:-1;18881:23:12;;-1:-1:-1;18881:23:12;3765:59;3735:20;;;-1:-1:-1;3804:20:12;;-1:-1:-1;3804:20:12;1207:18972;-1:-1:-1;1207:18972:12;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;:::o;6179:316:1:-;-1:-1:-1;;;;;1207:18972:12;;3724:1;1207:18972;;;-1:-1:-1;;;;;;;;;;;1207:18972:12;;;;;3056:5;;;;;-1:-1:-1;;;;;1207:18972:12;3724:1;1207:18972;;;-1:-1:-1;;;;;;;;;;;1207:18972:12;;;;;1432:33;;-1:-1:-1;;1432:33:12;1207:18972;1432:33;;;735:10:9;;1207:18972:12;-1:-1:-1;;;;;;;;;;;3724:1:12;;6370:40:1;6347:4;6424:11;:::o;6272:217::-;6466:12;3724:1:12;6466:12:1;:::o;6179:316::-;-1:-1:-1;;;;;1207:18972:12;;;;;;-1:-1:-1;;;;;;;;;;;1207:18972:12;;;;;3056:5;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;-1:-1:-1;;;;;;;;;;;1207:18972:12;;;;;1432:33;;-1:-1:-1;;1432:33:12;1207:18972;1432:33;;;735:10:9;;1207:18972:12;-1:-1:-1;;;;;;;;;;;1354:23:12;-1:-1:-1;;;;;;;;;;;6370:40:1;1207:18972:12;6370:40:1;6347:4;6424:11;:::o;6179:316::-;-1:-1:-1;;;;;1207:18972:12;;;;;;-1:-1:-1;;;;;;;;;;;1207:18972:12;;;;;3056:5;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;-1:-1:-1;;;;;;;;;;;1207:18972:12;;;;;1432:33;;-1:-1:-1;;1432:33:12;1207:18972;1432:33;;;735:10:9;;1207:18972:12;-1:-1:-1;;;;;;;;;;;1432:33:12;-1:-1:-1;;;;;;;;;;;6370:40:1;1207:18972:12;6370:40:1;6347:4;6424:11;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14372": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint256t_uint256": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"allocate_and_zero_memory_struct_struct_UserStakingInfo": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_calculatePendingRewards": {
									"entryPoint": 3786,
									"id": 2326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_callOptionalReturn": {
									"entryPoint": 4913,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 4315,
									"id": 252,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_14371": {
									"entryPoint": 4204,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_claimRewards": {
									"entryPoint": 4437,
									"id": 2596,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 4587,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 4118,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 4717,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_safeTransfer": {
									"entryPoint": 4371,
									"id": 815,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 4845,
									"id": 842,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"storage_array_index_access_uint256_dyn": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1386": [
									{
										"length": 32,
										"start": 491
									},
									{
										"length": 32,
										"start": 1448
									},
									{
										"length": 32,
										"start": 1978
									},
									{
										"length": 32,
										"start": 2551
									},
									{
										"length": 32,
										"start": 3270
									},
									{
										"length": 32,
										"start": 4527
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610e1457508063097aad1014610df157806315b31bbb14610d77578063248a9ca314610d455780632def662014610c3b5780632f2ff15d14610bfe57806336568abe14610bba578063372500ab14610b555780635ef23fa914610a375780636ff1c9bc1461093a5780637b0472f01461076357806380933608146106975780638980f11f1461056457806391d148541461051c5780639fca9c22146104e4578063a217fddf146104ca578063aea1b6ef146103cc578063b6b365c214610316578063beceed391461017e578063d547741f1461013a5763dfe6b5d614610103575f80fd5b34610136575f36600319011261013657606060045460055460ff6006541690604051928352602083015215156040820152f35b5f80fd5b346101365760403660031901126101365761017c600435610159610e7d565b90610177610172825f525f602052600160405f20015490565b6110db565b61126d565b005b346101365760203660031901126101365760043561019a611016565b335f9081527ff6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254602052604090205460ff16156102df5780156102d0576040516370a0823160e01b81523360048201527f0000000000000000000000000000000000000000000000000000000000000000906020816024816001600160a01b0386165afa80156102c55783915f91610290575b501061028157816102718160209361026c7ff8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f3129660055492309033906112ed565b610f96565b600555604051908152a160018055005b631e9acf1760e31b5f5260045ffd5b9150506020813d6020116102bd575b816102ac60209383610f74565b81010312610136578290518461022c565b3d915061029f565b6040513d5f823e3d90fd5b63162908e360e11b5f5260045ffd5b63e2517d3f60e01b5f52336004527f51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b60245260445ffd5b34610136575f366003190112610136576040518060206007549283815201809260075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688905f5b8181106103b65750505081610374910382610f74565b604051918291602083019060208452518091526040830191905f5b81811061039d575050500390f35b825184528594506020938401939092019160010161038f565b825484526020909301926001928301920161035e565b346101365760603660031901126101365760043560243590604435801515809103610136576103f9611016565b61040161106c565b61271083116102d0575f6007545f5b8181106104a0575b50501561049157815f52600260205260405f2090836001830181815403610489575b50508060ff835416151503610476575b50507fad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff15f80a360018055005b60ff80198354169116179055828061044a565b55838561043a565b637616640160e01b5f5260045ffd5b846104aa82610fea565b90549060031b1c146104be57600101610410565b50505060018480610418565b34610136575f3660031901126101365760206040515f8152f35b34610136576020366003190112610136576004355f5260026020526040805f20600160ff825416910154825191151582526020820152f35b3461013657604036600319011261013657610535610e7d565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101365760403660031901126101365761057d610e67565b60243590610589611016565b61059161106c565b6001600160a01b031680156106885781156102d0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168114610679576040516370a0823160e01b8152306004820152602081602481855afa80156102c55783915f91610644575b501061028157610612823383611113565b6040519182527f8619312ed4eff1cf9f0116e6db2f49d9570a86f0350d1c5ad1bd0f7b0cf9e13260203393a360018055005b9150506020813d602011610671575b8161066060209383610f74565b810103126101365782905184610601565b3d9150610653565b63ffc9b52b60e01b5f5260045ffd5b63f6b2911f60e01b5f5260045ffd5b346101365760203660031901126101365760e06106b2610e67565b6106ba610fa3565b506001600160a01b0381165f908152600360205260409020906106db610fa3565b9180548352600181015490602084019182526003810154604085019081526004820154906060860191825261072c60ff600660058601549560808a019687520154169560c088019615158752610eca565b9360a08701948552604051965187525160208701525160408601525160608501525160808401525160a083015251151560c0820152f35b346101365761077136610e93565b9061077a611016565b60ff600654166004549061092b5781156102d057825f52600260205260405f209060ff8254161561091c576040516370a0823160e01b81523360048201527f000000000000000000000000000000000000000000000000000000000000000091906020816024816001600160a01b0387165afa80156102c55785915f916108e7575b50106102815761086e928492335f526003602052600160405f2092600684019260ff8454166108a3575b61083e876108348c42610f96565b92309033906112ed565b8685554283860155600385015588600485015501546005830155600160ff19825416179055600242910155610f96565b6004556040519081527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060203392a360018055005b8285015480151590816108dc575b5015610826576108c033610eca565b806108cc575b50610826565b6108d69033611155565b8a6108c6565b90504210158b6108b1565b9150506020813d602011610914575b8161090360209383610f74565b8101031261013657849051876107fc565b3d91506108f6565b63ea48ba2b60e01b5f5260045ffd5b631a4a6f3b60e21b5f5260045ffd5b3461013657602036600319011261013657610953610e67565b61095b611016565b61096361106c565b6001600160a01b03811690811561068857815f52600360205260405f20906006820191825460ff811615610a28577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695936020936109f2610a1b936004545f60028854988997889584835584600184015584600384015584600484015584600584015560ff191690550155610ea9565b6004557f0000000000000000000000000000000000000000000000000000000000000000611113565b604051908152a260018055005b637d9a44a160e11b5f5260045ffd5b3461013657610a4536610e93565b90610a4e611016565b610a5661106c565b63096601808111610b3e5761271082116102d057801561049157805f52600260205260ff60405f205416610b2f5760146007541015610b2057805f52600260205281600160405f208160ff19825416178155015560075468010000000000000000811015610b0c57806001610ace9201600755610fea565b81549060031b9083821b915f19901b19161790557f682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc3645f80a360018055005b634e487b7160e01b5f52604160045260245ffd5b635bb01e5b60e01b5f5260045ffd5b635770685760e11b5f5260045ffd5b63b666aeb760e01b5f52630966018060045260245ffd5b34610136575f36600319011261013657610b6d611016565b335f52600360205260405f2060ff60068201541615610a2857610b8f33610eca565b8015610bab57610ba59160024291015533611155565b60018055005b63afb0be3360e01b5f5260045ffd5b3461013657604036600319011261013657610bd3610e7d565b336001600160a01b03821603610bef5761017c9060043561126d565b63334bd91960e11b5f5260045ffd5b346101365760403660031901126101365761017c600435610c1d610e7d565b90610c36610172825f525f602052600160405f20015490565b6111eb565b34610136575f36600319011261013657610c53611016565b335f52600360205260405f20600681019081549060ff821615610a285760038101918254421115610d3657610cbc915f600260045492805497889584610c9833610eca565b998185558160018601555584600484015584600584015560ff191690550155610ea9565b600455610cea82337f0000000000000000000000000000000000000000000000000000000000000000611113565b80610d27575b60405191825260208201527f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e60403392a260018055005b610d318133611155565b610cf0565b6325e5ff6560e01b5f5260045ffd5b34610136576020366003190112610136576020610d6f6004355f525f602052600160405f20015490565b604051908152f35b346101365760203660031901126101365760043580151580910361013657610d9d611016565b610da561106c565b6006548160ff8216151503610dba5760018055005b60ff191660ff8216176006557f3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c695f80a28080610ba5565b34610136576020366003190112610136576020610d6f610e0f610e67565b610eca565b34610136576020366003190112610136576004359063ffffffff60e01b821680920361013657602091637965db0b60e01b8114908115610e56575b5015158152f35b6301ffc9a760e01b14905083610e4f565b600435906001600160a01b038216820361013657565b602435906001600160a01b038216820361013657565b6040906003190112610136576004359060243590565b91908203918211610eb657565b634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03165f908152600360205260409020600681015460ff16158015610f6b575b610f6657610f1242600383015480421015610f5e575b50600283015490610ea9565b908115610f585760058154910154805f1904821181021561271002156101365761271091020490805f190482118102156301e133800215610136576301e1338091020490565b50505f90565b90505f610f06565b505f90565b50805415610ef0565b90601f8019910116810190811067ffffffffffffffff821117610b0c57604052565b91908201809211610eb657565b6040519060e0820182811067ffffffffffffffff821117610b0c576040525f60c0838281528260208201528260408201528260608201528260808201528260a08201520152565b6007548110156110025760075f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b600260015414611027576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156110a457565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff16156110fd5750565b63e2517d3f60e01b5f523360045260245260445ffd5b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526111539161114e606483610f74565b611331565b565b6001600160a01b0381169182156106885780156102d05760055490818110156111dc576111d3817f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241946111aa82602096610ea9565b6005557f0000000000000000000000000000000000000000000000000000000000000000611113565b604051908152a2565b63447b0f6760e01b5f5260045ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610f58575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610f58575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526111539161114e608483610f74565b905f602091828151910182855af1156102c5575f513d61138057506001600160a01b0381163b155b6113605750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b6001141561135956fea2646970667358221220a2eb35ee130c8e9b68d011a8eb9a4399951b4b2ae3467e5b0febac22ef2d8e4d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xE14 JUMPI POP DUP1 PUSH4 0x97AAD10 EQ PUSH2 0xDF1 JUMPI DUP1 PUSH4 0x15B31BBB EQ PUSH2 0xD77 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD45 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xC3B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xBFE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xBBA JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xB55 JUMPI DUP1 PUSH4 0x5EF23FA9 EQ PUSH2 0xA37 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x93A JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0x80933608 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x9FCA9C22 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xAEA1B6EF EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xB6B365C2 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x13A JUMPI PUSH4 0xDFE6B5D6 EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x60 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0xFF PUSH1 0x6 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x17C PUSH1 0x4 CALLDATALOAD PUSH2 0x159 PUSH2 0xE7D JUMP JUMPDEST SWAP1 PUSH2 0x177 PUSH2 0x172 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19A PUSH2 0x1016 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xF6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D254 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DF JUMPI DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2C5 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x290 JUMPI JUMPDEST POP LT PUSH2 0x281 JUMPI DUP2 PUSH2 0x271 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x26C PUSH32 0xF8FAD42E780BFA5459BE3FE691E8BA1AEC70342250112139C5771C3FD155F312 SWAP7 PUSH1 0x5 SLOAD SWAP3 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BD JUMPI JUMPDEST DUP2 PUSH2 0x2AC PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP3 SWAP1 MLOAD DUP5 PUSH2 0x22C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x51785D261C3B3E8C2CFE2D0E108B9AB2B1FB703FF9E9E49ABA4EBDC85C36152B PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3B6 JUMPI POP POP POP DUP2 PUSH2 0x374 SWAP2 SUB DUP3 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x39D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x35E JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x136 JUMPI PUSH2 0x3F9 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x2710 DUP4 GT PUSH2 0x2D0 JUMPI PUSH0 PUSH1 0x7 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4A0 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x491 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 PUSH1 0x1 DUP4 ADD DUP2 DUP2 SLOAD SUB PUSH2 0x489 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xFF DUP4 SLOAD AND ISZERO ISZERO SUB PUSH2 0x476 JUMPI JUMPDEST POP POP PUSH32 0xAD2954A6781CDC42B8AF5DF6F557041B3F146AAF8FBC031D767B7AD48164CFF1 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP3 DUP1 PUSH2 0x44A JUMP JUMPDEST SSTORE DUP4 DUP6 PUSH2 0x43A JUMP JUMPDEST PUSH4 0x76166401 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST DUP5 PUSH2 0x4AA DUP3 PUSH2 0xFEA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR EQ PUSH2 0x4BE JUMPI PUSH1 0x1 ADD PUSH2 0x410 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP5 DUP1 PUSH2 0x418 JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD AND SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x535 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x57D PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x589 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x688 JUMPI DUP2 ISZERO PUSH2 0x2D0 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x2C5 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x644 JUMPI JUMPDEST POP LT PUSH2 0x281 JUMPI PUSH2 0x612 DUP3 CALLER DUP4 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x8619312ED4EFF1CF9F0116E6DB2F49D9570A86F0350D1C5AD1BD0F7B0CF9E132 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x671 JUMPI JUMPDEST DUP2 PUSH2 0x660 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP3 SWAP1 MLOAD DUP5 PUSH2 0x601 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x653 JUMP JUMPDEST PUSH4 0xFFC9B52B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xF6B2911F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0xE0 PUSH2 0x6B2 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x6BA PUSH2 0xFA3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x6DB PUSH2 0xFA3 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x20 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH2 0x72C PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP11 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP6 PUSH1 0xC0 DUP9 ADD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH2 0xECA JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP7 MLOAD DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH2 0x771 CALLDATASIZE PUSH2 0xE93 JUMP JUMPDEST SWAP1 PUSH2 0x77A PUSH2 0x1016 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 SLOAD AND PUSH1 0x4 SLOAD SWAP1 PUSH2 0x92B JUMPI DUP2 ISZERO PUSH2 0x2D0 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF DUP3 SLOAD AND ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2C5 JUMPI DUP6 SWAP2 PUSH0 SWAP2 PUSH2 0x8E7 JUMPI JUMPDEST POP LT PUSH2 0x281 JUMPI PUSH2 0x86E SWAP3 DUP5 SWAP3 CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x6 DUP5 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD AND PUSH2 0x8A3 JUMPI JUMPDEST PUSH2 0x83E DUP8 PUSH2 0x834 DUP13 TIMESTAMP PUSH2 0xF96 JUMP JUMPDEST SWAP3 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x12ED JUMP JUMPDEST DUP7 DUP6 SSTORE TIMESTAMP DUP4 DUP7 ADD SSTORE PUSH1 0x3 DUP6 ADD SSTORE DUP9 PUSH1 0x4 DUP6 ADD SSTORE ADD SLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP3 DUP6 ADD SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x8DC JUMPI JUMPDEST POP ISZERO PUSH2 0x826 JUMPI PUSH2 0x8C0 CALLER PUSH2 0xECA JUMP JUMPDEST DUP1 PUSH2 0x8CC JUMPI JUMPDEST POP PUSH2 0x826 JUMP JUMPDEST PUSH2 0x8D6 SWAP1 CALLER PUSH2 0x1155 JUMP JUMPDEST DUP11 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO DUP12 PUSH2 0x8B1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x914 JUMPI JUMPDEST DUP2 PUSH2 0x903 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP5 SWAP1 MLOAD DUP8 PUSH2 0x7FC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8F6 JUMP JUMPDEST PUSH4 0xEA48BA2B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x1A4A6F3B PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x953 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x95B PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x963 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x688 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xA28 JUMPI PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x9F2 PUSH2 0xA1B SWAP4 PUSH1 0x4 SLOAD PUSH0 PUSH1 0x2 DUP9 SLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP6 DUP5 DUP4 SSTORE DUP5 PUSH1 0x1 DUP5 ADD SSTORE DUP5 PUSH1 0x3 DUP5 ADD SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH32 0x0 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x7D9A44A1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH2 0xA45 CALLDATASIZE PUSH2 0xE93 JUMP JUMPDEST SWAP1 PUSH2 0xA4E PUSH2 0x1016 JUMP JUMPDEST PUSH2 0xA56 PUSH2 0x106C JUMP JUMPDEST PUSH4 0x9660180 DUP2 GT PUSH2 0xB3E JUMPI PUSH2 0x2710 DUP3 GT PUSH2 0x2D0 JUMPI DUP1 ISZERO PUSH2 0x491 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0xB2F JUMPI PUSH1 0x14 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xB20 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH1 0xFF NOT DUP3 SLOAD AND OR DUP2 SSTORE ADD SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xB0C JUMPI DUP1 PUSH1 0x1 PUSH2 0xACE SWAP3 ADD PUSH1 0x7 SSTORE PUSH2 0xFEA JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH32 0x682563ED446791DCD2BB66AA531EBAF528BCE493E57F037313263799851BC364 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x5BB01E5B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x57706857 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xB666AEB7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH4 0x9660180 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xB6D PUSH2 0x1016 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND ISZERO PUSH2 0xA28 JUMPI PUSH2 0xB8F CALLER PUSH2 0xECA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBA5 SWAP2 PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE CALLER PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0xAFB0BE33 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xBD3 PUSH2 0xE7D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xBEF JUMPI PUSH2 0x17C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x126D JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x17C PUSH1 0x4 CALLDATALOAD PUSH2 0xC1D PUSH2 0xE7D JUMP JUMPDEST SWAP1 PUSH2 0xC36 PUSH2 0x172 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xC53 PUSH2 0x1016 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0xA28 JUMPI PUSH1 0x3 DUP2 ADD SWAP2 DUP3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xD36 JUMPI PUSH2 0xCBC SWAP2 PUSH0 PUSH1 0x2 PUSH1 0x4 SLOAD SWAP3 DUP1 SLOAD SWAP8 DUP9 SWAP6 DUP5 PUSH2 0xC98 CALLER PUSH2 0xECA JUMP JUMPDEST SWAP10 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0xCEA DUP3 CALLER PUSH32 0x0 PUSH2 0x1113 JUMP JUMPDEST DUP1 PUSH2 0xD27 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0xD31 DUP2 CALLER PUSH2 0x1155 JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST PUSH4 0x25E5FF65 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 PUSH2 0xD6F PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x136 JUMPI PUSH2 0xD9D PUSH2 0x1016 JUMP JUMPDEST PUSH2 0xDA5 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0xDBA JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0x6 SSTORE PUSH32 0x3CF4FE733160F8F8C48336FAB32ACEE32EBAAA423A08A2BE4E5CEFF97DD98C69 PUSH0 DUP1 LOG2 DUP1 DUP1 PUSH2 0xBA5 JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 PUSH2 0xD6F PUSH2 0xE0F PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x136 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xE56 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x136 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x136 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xEB6 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF6B JUMPI JUMPDEST PUSH2 0xF66 JUMPI PUSH2 0xF12 TIMESTAMP PUSH1 0x3 DUP4 ADD SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0xF5E JUMPI JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0xF58 JUMPI PUSH1 0x5 DUP2 SLOAD SWAP2 ADD SLOAD DUP1 PUSH0 NOT DIV DUP3 GT DUP2 MUL ISZERO PUSH2 0x2710 MUL ISZERO PUSH2 0x136 JUMPI PUSH2 0x2710 SWAP2 MUL DIV SWAP1 DUP1 PUSH0 NOT DIV DUP3 GT DUP2 MUL ISZERO PUSH4 0x1E13380 MUL ISZERO PUSH2 0x136 JUMPI PUSH4 0x1E13380 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF06 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST POP DUP1 SLOAD ISZERO PUSH2 0xEF0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0C JUMPI PUSH1 0x40 MSTORE PUSH0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1027 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A4 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10FD JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1153 SWAP2 PUSH2 0x114E PUSH1 0x64 DUP4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x1331 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x688 JUMPI DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x5 SLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11D3 DUP2 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP5 PUSH2 0x11AA DUP3 PUSH1 0x20 SWAP7 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH32 0x0 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x447B0F67 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF58 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF58 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1153 SWAP2 PUSH2 0x114E PUSH1 0x84 DUP4 PUSH2 0xF74 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2C5 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x1380 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1360 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1359 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEB CALLDATALOAD 0xEE SGT 0xC DUP15 SWAP12 PUSH9 0xD011A8EB9A4399951B 0x4B 0x2A 0xE3 CHAINID PUSH31 0x5B0FEBAC22EF2D8E4D64736F6C634300081C00330000000000000000000000 ",
							"sourceMap": "1207:18972:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;18337:12;1207:18972;;18351:14;1207:18972;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;4747:26:1;1207:18972:12;;;;:::i;:::-;4717:18:1;2475:4;4717:18;;3901:6;1207:18972:12;3901:6:1;1207:18972:12;;3901:22:1;1207:18972:12;3901:6:1;1207:18972:12;3901:22:1;1207:18972:12;3810:120:1;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;1207:18972:12;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;2227:103:6;;:::i;:::-;735:10:9;1207:18972:12;;;;;;;;;;;;;3519:23:1;3515:108;;7250:11:12;;7246:39;;1207:18972;;-1:-1:-1;;;7356:28:12;;735:10:9;1207:18972:12;7356:28;;1207:18972;7356:6;;1207:18972;;7356:28;1207:18972;-1:-1:-1;;;;;1207:18972:12;;7356:28;;;;;;;;1207:18972;7356:28;;;1207:18972;7356:37;;7352:71;;1207:18972;7853:20;1207:18972;;;7743:6;7897:20;1207:18972;7619:12;1207:18972;7514:4;;735:10:9;;7743:6:12;;:::i;:::-;7853:20;:::i;:::-;7619:12;1207:18972;;;;;;7897:20;1207:18972;;;;7352:71;8746:21;;;1207:18972;7402:21;1207:18972;;7402:21;7356:28;;;;1207:18972;7356:28;;1207:18972;7356:28;;;;;;1207:18972;7356:28;;;:::i;:::-;;;1207:18972;;;;;;;7356:28;;;;;;-1:-1:-1;7356:28:12;;;1207:18972;;;;;;;;;7246:39;5055:15;;;1207:18972;7270:15;1207:18972;;7270:15;3515:108:1;3565:47;;;1207:18972:12;3565:47:1;735:10:9;1207:18972:12;;1432:33;1207:18972;;;;3565:47:1;1207:18972:12;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;17967:19;1207:18972;;;;;;;;17967:19;1207:18972;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1207:18972:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;;;;;;;;;;;;2227:103:6;;:::i;:::-;2475:4:1;;:::i;:::-;3056:5:12;5581:19;;5577:47;;1207:18972;5799:19;1207:18972;;5855:19;;;;;;5835:239;6087:6;;;6083:36;;1207:18972;;;6222:13;1207:18972;;;;;6259:8;;1207:18972;6259:8;;1207:18972;;;6259:15;6255:60;;5835:239;1207:18972;;;;;;;;;6337:25;6333:80;;5835:239;6436:33;;;1207:18972;6436:33;;1207:18972;;;;6333:80;1207:18972;;;;;;;;;;;6333:80;;;;6255:60;1207:18972;6255:60;;;;6083:36;18661:17;;;1207:18972;6102:17;1207:18972;;6102:17;5876:3;5960:22;;;;:::i;:::-;1207:18972;;;;;;5960:34;5956:108;;1207:18972;;5840:13;;5956:108;6014:12;;;1207:18972;6044:5;;;;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;17648:13;1207:18972;;;;;;;;;;;17704:8;;1207:18972;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;:::i;:::-;;;;;;;;;;;2954:29:1;1207:18972:12;;;;;;-1:-1:-1;1207:18972:12;;;;;;-1:-1:-1;1207:18972:12;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;:::i;:::-;;;2227:103:6;;;:::i;:::-;2475:4:1;;:::i;:::-;-1:-1:-1;;;;;1207:18972:12;14089:26;;14085:59;;14158:11;;14154:39;;14297:6;-1:-1:-1;;;;;1207:18972:12;14273:31;;14269:71;;1207:18972;;-1:-1:-1;;;14413:45:12;;14452:4;1207:18972;14413:45;;1207:18972;;;;;14413:45;;;;;;;;;1207:18972;14413:45;;;1207:18972;14413:54;;14409:88;;14600:6;14588:10;;14600:6;;:::i;:::-;1207:18972;;;;;14631:48;1207:18972;14588:10;14631:48;;1207:18972;;;;14413:45;;;;1207:18972;14413:45;;1207:18972;14413:45;;;;;;1207:18972;14413:45;;;:::i;:::-;;;1207:18972;;;;;;;14413:45;;;;;;-1:-1:-1;14413:45:12;;14269:71;14313:27;;;1207:18972;14313:27;1207:18972;;14313:27;14085:59;12771:20;;;1207:18972;14124:20;1207:18972;;14124:20;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;1207:18972:12;;;;;;16795:16;1207:18972;;;;;;;;:::i;:::-;;;;;;16960:25;;;1207:18972;16932:25;1207:18972;16932:25;;1207:18972;;;16795:16;17021:23;;1207:18972;;16995:23;;1207:18972;;;;17074:17;;1207:18972;17054:17;;;;1207:18972;;;17211:29;1207:18972;17158:17;17116:12;;;1207:18972;17101:12;;;;1207:18972;;;17158:17;1207:18972;;17138:17;;;;1207:18972;;;;;17211:29;:::i;:::-;17185:23;;;;1207:18972;;;;;;;;;;;;;;;;;;;;17054:17;1207:18972;;;;17101:12;1207:18972;;;;17185:23;1207:18972;;;;;;17138:17;1207:18972;;;;;;;;;;;:::i;:::-;2227:103:6;;;:::i;:::-;1207:18972:12;8266:14;1207:18972;;;;8357:44;;;8415:11;;8411:39;;1207:18972;;;8549:13;1207:18972;;;;;;;;;;8586:14;8582:47;;1207:18972;;-1:-1:-1;;;8700:28:12;;8717:10;1207:18972;8700:28;;1207:18972;8700:6;;1207:18972;;;8700:28;1207:18972;-1:-1:-1;;;;;1207:18972:12;;8700:28;;;;;;;;1207:18972;8700:28;;;1207:18972;8700:37;;8696:71;;10328:20;8717:10;;;;1207:18972;;9011:16;1207:18972;;9996:25;1207:18972;;;9074:17;8266:14;9074:17;;1207:18972;;;;;9192:392;;1207:18972;9836:6;8897:15;9656:22;8897:15;;9656:22;:::i;:::-;8860:4;;8717:10;;9836:6;;:::i;:::-;1207:18972;;;8897:15;9996:25;;;1207:18972;9011:16;10045:23;;1207:18972;10091:17;1207:18972;10091:17;;1207:18972;10144:8;1207:18972;10129:12;;;1207:18972;9996:25;1207:18972;;;;;;;;8549:13;8897:15;10196:22;;1207:18972;10328:20;:::i;:::-;1207:18972;;;;;;;10372:36;1207:18972;8717:10;10372:36;;9996:25;1207:18972;;;9192:392;9256:25;;;1207:18972;9299:21;;;:56;;;;9192:392;9295:279;;9192:392;9295:279;9400:35;8717:10;9400:35;:::i;:::-;9457:19;9453:107;;9295:279;;9192:392;;9453:107;9526:14;8717:10;;9526:14;:::i;:::-;9453:107;;;9299:56;8897:15;;;9324:31;;9299:56;;;8700:28;;;;1207:18972;8700:28;;1207:18972;8700:28;;;;;;1207:18972;8700:28;;;:::i;:::-;;;1207:18972;;;;;;;8700:28;;;;;;-1:-1:-1;8700:28:12;;8582:47;8609:20;;;1207:18972;8609:20;1207:18972;;8609:20;8357:44;8383:18;;;1207:18972;8383:18;1207:18972;;8383:18;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2475:4:1;;:::i;:::-;-1:-1:-1;;;;;1207:18972:12;;;12744:18;;12740:51;;1207:18972;;;12845:16;1207:18972;;;;;12914:17;;;;1207:18972;;;;;;12913:18;12909:46;;13637:37;1207:18972;;;13489:26;13600:12;1207:18972;;;;13398:22;1207:18972;;;;;;;;;;13230:25;;;;1207:18972;13269:23;12845:16;13269:23;;1207:18972;13306:17;1207:18972;13306:17;;1207:18972;13337:12;;;;1207:18972;;;;;;13398:22;1207:18972;13489:26;:::i;:::-;1207:18972;;13574:6;13600:12;:::i;:::-;1207:18972;;;;;13637:37;13230:25;1207:18972;;;12909:46;10719:15;;;1207:18972;12940:15;1207:18972;;12940:15;1207:18972;;;;;;;:::i;:::-;2227:103:6;;;:::i;:::-;2475:4:1;;:::i;:::-;3288:12:12;4867:31;;4863:81;;3056:5;5027:19;;5023:47;;18639:13;;18635:43;;1207:18972;;;18840:13;1207:18972;;;;;;;;18836:68;;3176:2;18994:19;1207:18972;18994:44;;18990:83;;1207:18972;;;18840:13;1207:18972;;;19211:4;1207:18972;;;;;;;;;;;;19225:8;1207:18972;18994:19;3176:2;;;;;;;;19211:4;3176:2;;;18994:19;3176:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;19316:31;1207:18972;19316:31;;19211:4;1207:18972;;;3176:2;1207:18972;;;;;;;;;;;18990:83;19047:26;;;1207:18972;19047:26;1207:18972;;19047:26;18836:68;18881:23;;;1207:18972;18881:23;1207:18972;;18881:23;4863:81;4907:37;;;1207:18972;4907:37;3288:12;1207:18972;;;;4907:37;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;2227:103:6;;:::i;:::-;11996:10:12;1207:18972;;11979:16;1207:18972;;;;;;12054:17;;;1207:18972;;12053:18;12049:46;;12139:35;11996:10;12139:35;:::i;:::-;12188:19;;12184:52;;12402:14;12314:15;12289:22;12314:15;12289:22;;1207:18972;11996:10;12402:14;:::i;:::-;1716:1:6;1207:18972:12;;;12184:52;12216:20;;;1207:18972;12216:20;1207:18972;;12216:20;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;;;:::i;:::-;735:10:9;-1:-1:-1;;;;;1207:18972:12;;5421:34:1;5417:102;;5529:37;1207:18972:12;;;5529:37:1;:::i;5417:102::-;5478:30;;;1207:18972:12;5478:30:1;1207:18972:12;;5478:30:1;1207:18972:12;;;;;;-1:-1:-1;;1207:18972:12;;;;4330:25:1;1207:18972:12;;;;:::i;:::-;4300:18:1;2475:4;4300:18;;3901:6;1207:18972:12;3901:6:1;1207:18972:12;;3901:22:1;1207:18972:12;3901:6:1;1207:18972:12;3901:22:1;1207:18972:12;3810:120:1;;2475:4;4330:25;:::i;1207:18972:12:-;;;;;;-1:-1:-1;;1207:18972:12;;;;2227:103:6;;:::i;:::-;10635:10:12;1207:18972;;10618:16;1207:18972;;;;;10693:17;;;1207:18972;;;;;;;10692:18;10688:46;;10618:16;10767:23;;1207:18972;;;10748:15;:42;;10744:75;;11428:26;1207:18972;;11288:22;1207:18972;;;;;10635:10;;;;11004:35;10635:10;11004:35;:::i;:::-;1207:18972;;;;11120:25;;;;1207:18972;;11196:17;1207:18972;11196:17;;1207:18972;11227:12;;;;1207:18972;;;;;;11288:22;1207:18972;11428:26;:::i;:::-;1207:18972;;11545:12;10635:10;;11513:6;11545:12;:::i;:::-;11616:19;11612:91;;1207:18972;;;;;;;;;;11726:50;1207:18972;10635:10;11726:50;;11120:25;1207:18972;;;11612:91;11677:14;10635:10;;11677:14;:::i;:::-;11612:91;;10744:75;10799:20;;;1207:18972;10799:20;1207:18972;;10799:20;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;3901:6:1;1207:18972:12;3901:6:1;1207:18972:12;;3901:22:1;1207:18972:12;3901:6:1;1207:18972:12;3901:22:1;1207:18972:12;3810:120:1;;1207:18972:12;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;;;;;;;2227:103:6;;:::i;:::-;2475:4:1;;:::i;:::-;6771:14:12;1207:18972;;;;;;;6884:23;6880:117;;1716:1:6;1207:18972:12;;;6880:117;-1:-1:-1;;1207:18972:12;;;;;6771:14;1207:18972;6965:21;1207:18972;;6965:21;6880:117;;;;1207:18972;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;1207:18972:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:1;;;:87;;;;1207:18972:12;;;;;;;2673:87:1;-1:-1:-1;;;862:40:10;;-1:-1:-1;2673:87:1;;;1207:18972:12;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;14834:1348;-1:-1:-1;;;;;1207:18972:12;;;;;14996:16;1207:18972;;;;;15042:17;;;1207:18972;;;15041:18;1207:18972;;15041:48;;14834:1348;15037:87;;15500:32;15337:15;14996:16;15377:23;;1207:18972;15337:15;;15366:34;;15362:98;;14834:1348;15510:22;;;;1207:18972;15500:32;;:::i;:::-;15546:16;;;15542:55;;15843:12;1207:18972;;15843:12;;1207:18972;3176:2;;;1744:340:0;;;;;;3056:5:12;1744:340:0;;;;3056:5:12;1744:340:0;;;3176:2:12;;;;1744:340:0;;;;;;3120:8:12;1744:340:0;;;;3120:8:12;1744:340:0;;;14834:1348:12;:::o;15542:55::-;15578:8;;1207:18972;15578:8;:::o;15362:98::-;15416:33;;15362:98;;;15037:87;15105:8;1207:18972;15105:8;:::o;15041:48::-;1207:18972;;;15063:26;15041:48;;1207:18972;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;1207:18972:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;18994:19;1207:18972;;;;;;18994:19;-1:-1:-1;1207:18972:12;;-1:-1:-1;1207:18972:12;;;-1:-1:-1;1207:18972:12;:::o;:::-;;;;;;;;;;;;2336:287:6;1759:1;2468:7;1207:18972:12;2468:19:6;1759:1;;;2468:7;1207:18972:12;2336:287:6:o;1759:1::-;1207:18972:12;;-1:-1:-1;;;1759:1:6;;;;;;;;;;;1207:18972:12;1759:1:6;1207:18972:12;;;1759:1:6;;;;3199:103:1;735:10:9;2954:6:1;1207:18972:12;;;;;;;;;;;;3519:23:1;3515:108;;3199:103::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:9;3565:47:1;1207:18972:12;1354:23;1207:18972;;;2954:6:1;3565:47;3199:103;2954:6;1207:18972:12;;;;;;;;;;;735:10:9;1207:18972:12;;;;;;;;;;3519:23:1;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:9;3565:47:1;1207:18972:12;;;;2954:6:1;3565:47;1219:160:8;1207:18972:12;;-1:-1:-1;;;1328:43:8;;;;-1:-1:-1;;;;;1207:18972:12;;;1328:43:8;;;1207:18972:12;;;;;;;;;1328:43:8;;;;;;;1207:18972:12;1328:43:8;:::i;:::-;;:::i;:::-;1219:160::o;19510:667:12:-;-1:-1:-1;;;;;1207:18972:12;;;19599:18;;19595:51;;19660:11;;19656:39;;19795:12;1207:18972;19830:21;;;;;19826:59;;20112:6;20017:20;20143:27;20017:20;;;1207:18972;20017:20;;:::i;:::-;19795:12;1207:18972;20086:6;20112;:::i;:::-;1207:18972;;;;;20143:27;19510:667::o;19826:59::-;19860:25;;;19615:1;19860:25;;19615:1;19860:25;6179:316:1;1207:18972:12;;;;;;;;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;;;735:10:9;;1207:18972:12;;6370:40:1;;1207:18972:12;6370:40:1;6347:4;6424:11;:::o;6730:317::-;1207:18972:12;;;;;;;;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1207:18972:12;;;;;;;;;;;;;;;-1:-1:-1;;1207:18972:12;;;735:10:9;;1207:18972:12;;6922:40:1;;1207:18972:12;6922:40:1;1207:18972:12;6976:11:1;:::o;1618:188:8:-;1207:18972:12;;-1:-1:-1;;;1745:53:8;;;;-1:-1:-1;;;;;1207:18972:12;;;1745:53:8;;;1207:18972:12;;;;;;;;;;;;;;;;;1745:53:8;;;;;;;1207:18972:12;1745:53:8;:::i;7686:720::-;;-1:-1:-1;7823:421:8;7686:720;7823:421;;;;;;;;;;;;-1:-1:-1;7823:421:8;;8258:15;;-1:-1:-1;;;;;;1207:18972:12;;8276:26:8;:31;8258:68;8254:146;;7686:720;:::o;8254:146::-;-1:-1:-1;;;;8349:40:8;;;-1:-1:-1;;;;;1207:18972:12;;;;8349:40:8;1207:18972:12;;;8349:40:8;8258:68;8325:1;8310:16;;8258:68;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1011000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "482",
								"addRewards(uint256)": "infinite",
								"addStakingPlan(uint256,uint256)": "151903",
								"calculatePendingRewards(address)": "13337",
								"claimRewards()": "infinite",
								"emergencyWithdraw(address)": "infinite",
								"getAvailableDurations()": "infinite",
								"getContractStats()": "6944",
								"getRoleAdmin(bytes32)": "2407",
								"getStakingPlan(uint256)": "4768",
								"getUserStakingInfo(address)": "infinite",
								"grantRole(bytes32,address)": "33377",
								"hasRole(bytes32,address)": "2770",
								"recoverERC20(address,uint256)": "infinite",
								"renounceRole(bytes32,address)": "28967",
								"revokeRole(bytes32,address)": "33682",
								"setStakingPaused(bool)": "57098",
								"stake(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "270",
								"unstake()": "infinite",
								"updateStakingPlan(uint256,uint256,bool)": "infinite"
							},
							"internal": {
								"_addStakingPlan(uint256,uint256)": "infinite",
								"_claimRewards(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 20179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 20179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3700,
									"end": 3726,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3700,
									"end": 3726,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3696,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 3696,
									"end": 3755,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3795,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4007,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3835,
									"end": 3864,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3835,
									"end": 3864,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3835,
									"end": 3864,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 3950,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3906,
									"end": 3950,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 3950,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3906,
									"end": 3950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 3950,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3906,
									"end": 3950,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 3950,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3960,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 3960,
									"end": 3997,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3960,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3960,
									"end": 3997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3960,
									"end": 3997,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 3960,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3960,
									"end": 3997,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4007,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4007,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4007,
									"end": 4054,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 4007,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D898BC67CA3D352598A6D8BA14BC12F08B53CF86CA7C5471DCBC6DCB5104DA9F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 1,
									"value": "F6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D255"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1377,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1377,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 1,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 4267,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "76A700"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18840,
									"end": 18853,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "5C968D77B01764D69848AB2B960D8F4701E8F3339E0A5524FC9916C9948F3EFB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19038,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19038,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4267,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "76A700"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18840,
									"end": 18853,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "5C968D77B01764D69848AB2B960D8F4701E8F3339E0A5524FC9916C9948F3EFB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4276,
									"end": 4279,
									"name": "PUSH",
									"source": 12,
									"value": "1F4"
								},
								{
									"begin": 19225,
									"end": 19233,
									"name": "PUSH",
									"source": 12,
									"value": "A1EF5B42F18533D67A183A193EA6C3FABFAA3BDABC3FC0E3F65B19B517DF6E8D"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "10000000000000000"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4267,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "76A700"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4276,
									"end": 4279,
									"name": "PUSH",
									"source": 12,
									"value": "1F4"
								},
								{
									"begin": 4267,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "76A700"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 19316,
									"end": 19347,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 19316,
									"end": 19347,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 4330,
									"end": 4338,
									"name": "PUSH",
									"source": 12,
									"value": "ED4E00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18840,
									"end": 18853,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4F66DB48A07C9781E0592D42FF3B56B244162717317A5F3E947AF07A6400A056"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19038,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19038,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4330,
									"end": 4338,
									"name": "PUSH",
									"source": 12,
									"value": "ED4E00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18840,
									"end": 18853,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4F66DB48A07C9781E0592D42FF3B56B244162717317A5F3E947AF07A6400A056"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4340,
									"end": 4343,
									"name": "PUSH",
									"source": 12,
									"value": "320"
								},
								{
									"begin": 19225,
									"end": 19233,
									"name": "PUSH",
									"source": 12,
									"value": "89CFCBF844E824FEEE5F634CBC488382291F3C9E0DE5905F3C30812390DD833"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "10000000000000000"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4330,
									"end": 4338,
									"name": "PUSH",
									"source": 12,
									"value": "ED4E00"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4340,
									"end": 4343,
									"name": "PUSH",
									"source": 12,
									"value": "320"
								},
								{
									"begin": 4330,
									"end": 4338,
									"name": "PUSH",
									"source": 12,
									"value": "ED4E00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 19316,
									"end": 19347,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 19316,
									"end": 19347,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 4393,
									"end": 4401,
									"name": "PUSH",
									"source": 12,
									"value": "1E13380"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18840,
									"end": 18853,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D339C8B099C3809595776000FB57D17374D0EF93E29B1511755BE607CB00DE99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19038,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19038,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4393,
									"end": 4401,
									"name": "PUSH",
									"source": 12,
									"value": "1E13380"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18840,
									"end": 18853,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D339C8B099C3809595776000FB57D17374D0EF93E29B1511755BE607CB00DE99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4403,
									"end": 4407,
									"name": "PUSH",
									"source": 12,
									"value": "4B0"
								},
								{
									"begin": 19225,
									"end": 19233,
									"name": "PUSH",
									"source": 12,
									"value": "DC083EB4DA7563BBD761324B5158D9D40AF7C7174AFE39B0B31A7577C44FC33C"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "10000000000000000"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4393,
									"end": 4401,
									"name": "PUSH",
									"source": 12,
									"value": "1E13380"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 18994,
									"end": 19013,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4403,
									"end": 4407,
									"name": "PUSH",
									"source": 12,
									"value": "4B0"
								},
								{
									"begin": 4393,
									"end": 4401,
									"name": "PUSH",
									"source": 12,
									"value": "1E13380"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 19316,
									"end": 19347,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 19316,
									"end": 19347,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4452,
									"end": 4474,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4452,
									"end": 4474,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 3835,
									"end": 3864,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1386"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "RETURN",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3176,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 18990,
									"end": 19073,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 19047,
									"end": 19073,
									"name": "PUSH",
									"source": 12,
									"value": "5BB01E5B"
								},
								{
									"begin": 19047,
									"end": 19073,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 19047,
									"end": 19073,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 19047,
									"end": 19073,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 19047,
									"end": 19073,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 19047,
									"end": 19073,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 18836,
									"end": 18904,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 18881,
									"end": 18904,
									"name": "PUSH",
									"source": 12,
									"value": "57706857"
								},
								{
									"begin": 18881,
									"end": 18904,
									"name": "PUSH",
									"source": 12,
									"value": "E1"
								},
								{
									"begin": 18881,
									"end": 18904,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 18881,
									"end": 18904,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 18881,
									"end": 18904,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 18881,
									"end": 18904,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3735,
									"end": 3755,
									"name": "PUSH",
									"source": 12,
									"value": "F6B2911F"
								},
								{
									"begin": 3735,
									"end": 3755,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 3735,
									"end": 3755,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3804,
									"end": 3824,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3824,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3804,
									"end": 3824,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3724,
									"end": 3725,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3724,
									"end": 3725,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3724,
									"end": 3725,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3724,
									"end": 3725,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3725,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1354,
									"end": 1377,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "6B4989BC7B93B2BEE94C8FD6EB5542AE9ECCCF5D6D8DC2FE26E142AC3434C5CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "6B4989BC7B93B2BEE94C8FD6EB5542AE9ECCCF5D6D8DC2FE26E142AC3434C5CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D898BC67CA3D352598A6D8BA14BC12F08B53CF86CA7C5471DCBC6DCB5104DA9F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1207,
									"end": 20179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2eb35ee130c8e9b68d011a8eb9a4399951b4b2ae3467e5b0febac22ef2d8e4d64736f6c634300081c0033",
									".code": [
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "97AAD10"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "15B31BBB"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "2DEF6620"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "372500AB"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "5EF23FA9"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "6FF1C9BC"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "7B0472F0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "80933608"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "8980F11F"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "9FCA9C22"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "AEA1B6EF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "B6B365C2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "BECEED39"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "DFE6B5D6"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18337,
											"end": 18349,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 18351,
											"end": 18365,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "F6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D254"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7261,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7261,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7362,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1386"
										},
										{
											"begin": 7356,
											"end": 7362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7393,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 7352,
											"end": 7423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7853,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 7897,
											"end": 7917,
											"name": "PUSH",
											"source": 12,
											"value": "F8FAD42E780BFA5459BE3FE691E8BA1AEC70342250112139C5771C3FD155F312"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7514,
											"end": 7518,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7514,
											"end": 7518,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 7743,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7853,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7853,
											"end": 7873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7853,
											"end": 7873,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 7853,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7917,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7423,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 7352,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8746,
											"end": 8767,
											"name": "PUSH",
											"source": 12,
											"value": "1E9ACF17"
										},
										{
											"begin": 8746,
											"end": 8767,
											"name": "PUSH",
											"source": 12,
											"value": "E3"
										},
										{
											"begin": 8746,
											"end": 8767,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7423,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 7356,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 7356,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "162908E3"
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "E1"
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7285,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7285,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "51785D261C3B3E8C2CFE2D0E108B9AB2B1FB703FF9E9E49ABA4EBDC85C36152B"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 5581,
											"end": 5600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5581,
											"end": 5600,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5577,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5577,
											"end": 5624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5818,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 6074,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 5835,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6083,
											"end": 6119,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6267,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6259,
											"end": 6267,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 6074,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 5835,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6337,
											"end": 6362,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 6074,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 5835,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6469,
											"name": "PUSH",
											"source": 12,
											"value": "AD2954A6781CDC42B8AF5DF6F557041B3F146AAF8FBC031D767B7AD48164CFF1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6469,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6469,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6333,
											"end": 6413,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 6255,
											"end": 6315,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6119,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6083,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18678,
											"name": "PUSH",
											"source": 12,
											"value": "76166401"
										},
										{
											"begin": 18661,
											"end": 18678,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 18661,
											"end": 18678,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6119,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5982,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5960,
											"end": 5982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 5960,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5982,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5960,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5994,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 5956,
											"end": 6064,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5840,
											"end": 5853,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 6064,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 5956,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6044,
											"end": 6049,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 6044,
											"end": 6049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17661,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17704,
											"end": 17712,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17704,
											"end": 17712,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14115,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14115,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14085,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 14085,
											"end": 14144,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14154,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 14154,
											"end": 14193,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14303,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1386"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14273,
											"end": 14304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14273,
											"end": 14304,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14269,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 14269,
											"end": 14340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14452,
											"end": 14456,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14467,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14409,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 14409,
											"end": 14497,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 14588,
											"end": 14598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 14598,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 14600,
											"end": 14606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14679,
											"name": "PUSH",
											"source": 12,
											"value": "8619312ED4EFF1CF9F0116E6DB2F49D9570A86F0350D1C5AD1BD0F7B0CF9E132"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14588,
											"end": 14598,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14679,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14679,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 14413,
											"end": 14458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 14413,
											"end": 14458,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14269,
											"end": 14340,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 14269,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14313,
											"end": 14340,
											"name": "PUSH",
											"source": 12,
											"value": "FFC9B52B"
										},
										{
											"begin": 14313,
											"end": 14340,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14313,
											"end": 14340,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14313,
											"end": 14340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14313,
											"end": 14340,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14085,
											"end": 14144,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 14085,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12791,
											"name": "PUSH",
											"source": 12,
											"value": "F6B2911F"
										},
										{
											"begin": 12771,
											"end": 12791,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12771,
											"end": 12791,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14124,
											"end": 14144,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14124,
											"end": 14144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16795,
											"end": 16811,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16960,
											"end": 16985,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16960,
											"end": 16985,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16960,
											"end": 16985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16932,
											"end": 16957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16932,
											"end": 16957,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16932,
											"end": 16957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16795,
											"end": 16811,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 17021,
											"end": 17044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17021,
											"end": 17044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16995,
											"end": 17018,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16995,
											"end": 17018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17074,
											"end": 17091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17074,
											"end": 17091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17211,
											"end": 17240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 17158,
											"end": 17175,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 17116,
											"end": 17128,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 17116,
											"end": 17128,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17116,
											"end": 17128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17113,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17113,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 17101,
											"end": 17113,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17158,
											"end": 17175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17138,
											"end": 17155,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17138,
											"end": 17155,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 17138,
											"end": 17155,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 17138,
											"end": 17155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17211,
											"end": 17240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 17211,
											"end": 17240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17211,
											"end": 17240,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 17211,
											"end": 17240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17185,
											"end": 17208,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17185,
											"end": 17208,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 17185,
											"end": 17208,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 17185,
											"end": 17208,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17113,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17185,
											"end": 17208,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17138,
											"end": 17155,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8266,
											"end": 8280,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8401,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 8357,
											"end": 8401,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8426,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8411,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 8411,
											"end": 8450,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8549,
											"end": 8562,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8586,
											"end": 8600,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1386"
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8737,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8696,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 8696,
											"end": 8767,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9091,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8266,
											"end": 8280,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 9074,
											"end": 9091,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9656,
											"end": 9678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9678,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 9656,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 9836,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10045,
											"end": 10068,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10045,
											"end": 10068,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10108,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10091,
											"end": 10108,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10144,
											"end": 10152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10141,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10129,
											"end": 10141,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8549,
											"end": 8562,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 10196,
											"end": 10218,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10196,
											"end": 10218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 10328,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10372,
											"end": 10408,
											"name": "PUSH",
											"source": 12,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 10372,
											"end": 10408,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10372,
											"end": 10408,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9281,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9281,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9320,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9320,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9320,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9574,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 9295,
											"end": 9574,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9400,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9400,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9400,
											"end": 9435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9400,
											"end": 9435,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 9400,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9457,
											"end": 9476,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9574,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 9295,
											"end": 9574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 9192,
											"end": 9584,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 9526,
											"end": 9540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9540,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 9526,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 9453,
											"end": 9560,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9299,
											"end": 9355,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 8700,
											"end": 8728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8629,
											"name": "PUSH",
											"source": 12,
											"value": "EA48BA2B"
										},
										{
											"begin": 8609,
											"end": 8629,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8609,
											"end": 8629,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8629,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8629,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8401,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 8357,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 12,
											"value": "1A4A6F3B"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 12,
											"value": "E2"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12740,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 12740,
											"end": 12791,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12845,
											"end": 12861,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12931,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12909,
											"end": 12955,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 13674,
											"name": "PUSH",
											"source": 12,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 13600,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13398,
											"end": 13420,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13255,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13255,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13230,
											"end": 13255,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13292,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12845,
											"end": 12861,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 13269,
											"end": 13292,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13306,
											"end": 13323,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13306,
											"end": 13323,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13306,
											"end": 13323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13398,
											"end": 13420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13489,
											"end": 13515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13574,
											"end": 13580,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1386"
										},
										{
											"begin": 13600,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 13600,
											"end": 13612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13600,
											"end": 13612,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 13600,
											"end": 13612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 13674,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13255,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12955,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12909,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10719,
											"end": 10734,
											"name": "PUSH",
											"source": 12,
											"value": "7D9A44A1"
										},
										{
											"begin": 10719,
											"end": 10734,
											"name": "PUSH",
											"source": 12,
											"value": "E1"
										},
										{
											"begin": 10719,
											"end": 10734,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12940,
											"end": 12955,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12940,
											"end": 12955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "9660180"
										},
										{
											"begin": 4867,
											"end": 4898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4867,
											"end": 4898,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 4863,
											"end": 4944,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5023,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5023,
											"end": 5070,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 18652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 18652,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18635,
											"end": 18678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 18635,
											"end": 18678,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18840,
											"end": 18853,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18836,
											"end": 18904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 18836,
											"end": 18904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 18994,
											"end": 19013,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19038,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19038,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18990,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 18990,
											"end": 19073,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18840,
											"end": 18853,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19211,
											"end": 19215,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19225,
											"end": 19233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19013,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "10000000000000000"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19211,
											"end": 19215,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19013,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 3176,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19316,
											"end": 19347,
											"name": "PUSH",
											"source": 12,
											"value": "682563ED446791DCD2BB66AA531EBAF528BCE493E57F037313263799851BC364"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19316,
											"end": 19347,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19316,
											"end": 19347,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 19211,
											"end": 19215,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18990,
											"end": 19073,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 18990,
											"end": 19073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "PUSH",
											"source": 12,
											"value": "5BB01E5B"
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18836,
											"end": 18904,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 18836,
											"end": 18904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18881,
											"end": 18904,
											"name": "PUSH",
											"source": 12,
											"value": "57706857"
										},
										{
											"begin": 18881,
											"end": 18904,
											"name": "PUSH",
											"source": 12,
											"value": "E1"
										},
										{
											"begin": 18881,
											"end": 18904,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18881,
											"end": 18904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18881,
											"end": 18904,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4944,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 4863,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "PUSH",
											"source": 12,
											"value": "B666AEB7"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "9660180"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11996,
											"end": 12006,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11979,
											"end": 11995,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12054,
											"end": 12071,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 12054,
											"end": 12071,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12054,
											"end": 12071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12071,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12049,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12049,
											"end": 12095,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12139,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 11996,
											"end": 12006,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 12139,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 12139,
											"end": 12174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12139,
											"end": 12174,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 12139,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12188,
											"end": 12207,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12188,
											"end": 12207,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 12184,
											"end": 12236,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 12314,
											"end": 12329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12289,
											"end": 12311,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12314,
											"end": 12329,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 12289,
											"end": 12311,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12289,
											"end": 12311,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11996,
											"end": 12006,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 12402,
											"end": 12416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12416,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 12402,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12236,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 12184,
											"end": 12236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "PUSH",
											"source": 12,
											"value": "AFB0BE33"
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10618,
											"end": 10634,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10710,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 10693,
											"end": 10710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10688,
											"end": 10734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 10688,
											"end": 10734,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10618,
											"end": 10634,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10767,
											"end": 10790,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10767,
											"end": 10790,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10763,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10790,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10790,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10744,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 10744,
											"end": 10819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11310,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 11004,
											"end": 11039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11039,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 11004,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11145,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11120,
											"end": 11145,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11145,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11213,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11196,
											"end": 11213,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11213,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11227,
											"end": 11239,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11227,
											"end": 11239,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 11227,
											"end": 11239,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11227,
											"end": 11239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11288,
											"end": 11310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11428,
											"end": 11454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11454,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 11428,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11545,
											"end": 11557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 11513,
											"end": 11519,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1386"
										},
										{
											"begin": 11545,
											"end": 11557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 11545,
											"end": 11557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11545,
											"end": 11557,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 11545,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11616,
											"end": 11635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 11612,
											"end": 11703,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11726,
											"end": 11776,
											"name": "PUSH",
											"source": 12,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 11726,
											"end": 11776,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11726,
											"end": 11776,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11145,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11703,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 11612,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11677,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 11677,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 11677,
											"end": 11691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11677,
											"end": 11691,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 11677,
											"end": 11691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 11612,
											"end": 11703,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10744,
											"end": 10819,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 10744,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10819,
											"name": "PUSH",
											"source": 12,
											"value": "25E5FF65"
										},
										{
											"begin": 10799,
											"end": 10819,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10799,
											"end": 10819,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10819,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10819,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6785,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6907,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6785,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6965,
											"end": 6986,
											"name": "PUSH",
											"source": 12,
											"value": "3CF4FE733160F8F8C48336FAB32ACEE32EBAAA423A08A2BE4E5CEFF97DD98C69"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6965,
											"end": 6986,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 6880,
											"end": 6997,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15012,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15042,
											"end": 15059,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 15042,
											"end": 15059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15042,
											"end": 15059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15041,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15041,
											"end": 15089,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15037,
											"end": 15124,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15337,
											"end": 15352,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15012,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 15377,
											"end": 15400,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15352,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15352,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 15366,
											"end": 15400,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15366,
											"end": 15400,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15510,
											"end": 15532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15510,
											"end": 15532,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 15510,
											"end": 15532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15510,
											"end": 15532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15500,
											"end": 15532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15532,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15500,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15542,
											"end": 15597,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15843,
											"end": 15855,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15843,
											"end": 15855,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15843,
											"end": 15855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3128,
											"name": "PUSH",
											"source": 12,
											"value": "1E13380"
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3128,
											"name": "PUSH",
											"source": 12,
											"value": "1E13380"
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 2084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 16182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 16182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 15597,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15542,
											"end": 15597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15578,
											"end": 15586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15578,
											"end": 15586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15578,
											"end": 15586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15416,
											"end": 15449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15416,
											"end": 15449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 15362,
											"end": 15460,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15124,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15037,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15105,
											"end": 15113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15105,
											"end": 15113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15041,
											"end": 15089,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15041,
											"end": 15089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15063,
											"end": 15089,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15041,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 15041,
											"end": 15089,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19013,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19013,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19510,
											"end": 20177,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 19510,
											"end": 20177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19599,
											"end": 19617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19599,
											"end": 19617,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19595,
											"end": 19646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 19595,
											"end": 19646,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19660,
											"end": 19671,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19660,
											"end": 19671,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19656,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 19656,
											"end": 19695,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19795,
											"end": 19807,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19830,
											"end": 19851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19830,
											"end": 19851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19830,
											"end": 19851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19830,
											"end": 19851,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19830,
											"end": 19851,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19826,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 19826,
											"end": 19885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20112,
											"end": 20118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20143,
											"end": 20170,
											"name": "PUSH",
											"source": 12,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20017,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19795,
											"end": 19807,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 20086,
											"end": 20092,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1386"
										},
										{
											"begin": 20112,
											"end": 20118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 20112,
											"end": 20118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20112,
											"end": 20118,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 20112,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20143,
											"end": 20170,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 20177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19826,
											"end": 19885,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 19826,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19860,
											"end": 19885,
											"name": "PUSH",
											"source": 12,
											"value": "447B0F67"
										},
										{
											"begin": 19860,
											"end": 19885,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 19860,
											"end": 19885,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 19615,
											"end": 19616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19860,
											"end": 19885,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19860,
											"end": 19885,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19615,
											"end": 19616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19860,
											"end": 19885,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 20179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 8
										}
									]
								},
								"01400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
								"4F66DB48A07C9781E0592D42FF3B56B244162717317A5F3E947AF07A6400A056": "089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd832",
								"5C968D77B01764D69848AB2B960D8F4701E8F3339E0A5524FC9916C9948F3EFB": "a1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8c",
								"6B4989BC7B93B2BEE94C8FD6EB5542AE9ECCCF5D6D8DC2FE26E142AC3434C5CC": "f6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254",
								"C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D": "682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364",
								"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
								"D339C8B099C3809595776000FB57D17374D0EF93E29B1511755BE607CB00DE99": "dc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33b",
								"D898BC67CA3D352598A6D8BA14BC12F08B53CF86CA7C5471DCBC6DCB5104DA9F": "51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b",
								"F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5": "ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5"
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addRewards(uint256)": "beceed39",
							"addStakingPlan(uint256,uint256)": "5ef23fa9",
							"calculatePendingRewards(address)": "097aad10",
							"claimRewards()": "372500ab",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"getAvailableDurations()": "b6b365c2",
							"getContractStats()": "dfe6b5d6",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getStakingPlan(uint256)": "9fca9c22",
							"getUserStakingInfo(address)": "80933608",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setStakingPaused(bool)": "15b31bbb",
							"stake(uint256,uint256)": "7b0472f0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unstake()": "2def6620",
							"updateStakingPlan(uint256,uint256,bool)": "aea1b6ef"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 185,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)"
							},
							{
								"astId": 638,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1391,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_stakingPlans",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(StakingPlan)1368_storage)"
							},
							{
								"astId": 1396,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_userStakingData",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(UserStakingData)1383_storage)"
							},
							{
								"astId": 1398,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_totalStaked",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1400,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_rewardsPool",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1402,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_stakingPaused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1405,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_availableDurations",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserStakingData)1383_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WallyStaking.UserStakingData)",
								"numberOfBytes": "32",
								"value": "t_struct(UserStakingData)1383_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)180_storage"
							},
							"t_mapping(t_uint256,t_struct(StakingPlan)1368_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct WallyStaking.StakingPlan)",
								"numberOfBytes": "32",
								"value": "t_struct(StakingPlan)1368_storage"
							},
							"t_struct(RoleData)180_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 177,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 179,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(StakingPlan)1368_storage": {
								"encoding": "inplace",
								"label": "struct WallyStaking.StakingPlan",
								"members": [
									{
										"astId": 1365,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "isActive",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1367,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "apr",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserStakingData)1383_storage": {
								"encoding": "inplace",
								"label": "struct WallyStaking.UserStakingData",
								"members": [
									{
										"astId": 1370,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1372,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "stakingStartTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1374,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "lastClaimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1376,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "stakingEndTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1378,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "duration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1380,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "apr",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1382,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "isActive",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"emergencyWithdraw(address)": {
								"notice": "Only callable by admin role"
							},
							"recoverERC20(address,uint256)": {
								"notice": "Only callable by admin role"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
					"exportedSymbols": {
						"FixedPointMathLib": [
							158
						]
					},
					"id": 159,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPointMathLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:273:0",
								"text": "@notice Arithmetic library with operations for fixed-point numbers.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)"
							},
							"fullyImplemented": true,
							"id": 158,
							"linearizedBaseContracts": [
								158
							],
							"name": "FixedPointMathLib",
							"nameLocation": "349:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nameLocation": "592:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "566:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 4,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "606:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "609:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "606:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 7,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "615:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "606:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "WAD",
									"nameLocation": "649:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "623:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "655:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "778:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 22,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 23,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "809:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 24,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "812:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 21,
														"name": "mulDivDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "795:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "795:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 26,
												"nodeType": "Return",
												"src": "788:28:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulWadDown",
									"nameLocation": "713:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "743:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "735:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:22:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "769:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:9:0"
									},
									"scope": 158,
									"src": "704:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "946:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "972:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "975:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "978:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 37,
														"name": "mulDivUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "963:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "956:26:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulWadUp",
									"nameLocation": "883:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:0"
									},
									"scope": 158,
									"src": "874:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1112:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 54,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 55,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1143:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 56,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1148:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 53,
														"name": "mulDivDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1129:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "1122:28:0"
											}
										]
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divWadDown",
									"nameLocation": "1047:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1066:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1058:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1077:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1069:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:22:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:9:0"
									},
									"scope": 158,
									"src": "1038:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1280:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 70,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1306:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 71,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1309:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 72,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1314:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 69,
														"name": "mulDivUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 68,
												"id": 74,
												"nodeType": "Return",
												"src": "1290:26:0"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divWadUp",
									"nameLocation": "1217:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1234:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1226:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1245:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1237:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:22:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:9:0"
									},
									"scope": 158,
									"src": "1208:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1691:399:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1753:331:0",
													"nodeType": "YulBlock",
													"src": "1753:331:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "1936:44:0",
																"nodeType": "YulBlock",
																"src": "1936:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1961:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1961:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1964:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1954:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "1954:6:0"
																			},
																			"nativeSrc": "1954:12:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:12:0"
																		},
																		"nativeSrc": "1954:12:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "1878:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "1878:11:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "1902:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "1902:1:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "1908:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "1908:1:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "MAX_UINT256",
																												"nativeSrc": "1915:11:0",
																												"nodeType": "YulIdentifier",
																												"src": "1915:11:0"
																											},
																											{
																												"name": "y",
																												"nativeSrc": "1928:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "1928:1:0"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "1911:3:0",
																											"nodeType": "YulIdentifier",
																											"src": "1911:3:0"
																										},
																										"nativeSrc": "1911:19:0",
																										"nodeType": "YulFunctionCall",
																										"src": "1911:19:0"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nativeSrc": "1905:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "1905:2:0"
																								},
																								"nativeSrc": "1905:26:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1905:26:0"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1898:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1898:3:0"
																						},
																						"nativeSrc": "1898:34:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1898:34:0"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1891:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "1891:6:0"
																				},
																				"nativeSrc": "1891:42:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1891:42:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "1874:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1874:3:0"
																		},
																		"nativeSrc": "1874:60:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1874:60:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1867:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:0"
																},
																"nativeSrc": "1867:68:0",
																"nodeType": "YulFunctionCall",
																"src": "1867:68:0"
															},
															"nativeSrc": "1864:116:0",
															"nodeType": "YulIf",
															"src": "1864:116:0"
														},
														{
															"nativeSrc": "2042:32:0",
															"nodeType": "YulAssignment",
															"src": "2042:32:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2055:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2055:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2058:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2058:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2051:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:0"
																		},
																		"nativeSrc": "2051:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:9:0"
																	},
																	{
																		"name": "denominator",
																		"nativeSrc": "2062:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "2062:11:0"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2047:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:0"
																},
																"nativeSrc": "2047:27:0",
																"nodeType": "YulFunctionCall",
																"src": "2047:27:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "2042:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2042:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1915:11:0",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "1878:11:0",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "2062:11:0",
														"valueSize": 1
													},
													{
														"declaration": 78,
														"isOffset": false,
														"isSlot": false,
														"src": "1908:1:0",
														"valueSize": 1
													},
													{
														"declaration": 78,
														"isOffset": false,
														"isSlot": false,
														"src": "2055:1:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "1902:1:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "1928:1:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "2058:1:0",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:1:0",
														"valueSize": 1
													}
												],
												"id": 87,
												"nodeType": "InlineAssembly",
												"src": "1744:340:0"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivDown",
									"nameLocation": "1573:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1601:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1593:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1639:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1631:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:73:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1688:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1680:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:11:0"
									},
									"scope": 158,
									"src": "1564:526:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2221:547:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2283:479:0",
													"nodeType": "YulBlock",
													"src": "2283:479:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "2466:44:0",
																"nodeType": "YulBlock",
																"src": "2466:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2491:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2491:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2494:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2494:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2484:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "2484:6:0"
																			},
																			"nativeSrc": "2484:12:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2484:12:0"
																		},
																		"nativeSrc": "2484:12:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "2484:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "2408:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "2408:11:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "2432:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "2432:1:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "2438:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "2438:1:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "MAX_UINT256",
																												"nativeSrc": "2445:11:0",
																												"nodeType": "YulIdentifier",
																												"src": "2445:11:0"
																											},
																											{
																												"name": "y",
																												"nativeSrc": "2458:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "2458:1:0"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "2441:3:0",
																											"nodeType": "YulIdentifier",
																											"src": "2441:3:0"
																										},
																										"nativeSrc": "2441:19:0",
																										"nodeType": "YulFunctionCall",
																										"src": "2441:19:0"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nativeSrc": "2435:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "2435:2:0"
																								},
																								"nativeSrc": "2435:26:0",
																								"nodeType": "YulFunctionCall",
																								"src": "2435:26:0"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "2428:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2428:3:0"
																						},
																						"nativeSrc": "2428:34:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2428:34:0"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2421:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "2421:6:0"
																				},
																				"nativeSrc": "2421:42:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2421:42:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2404:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:0"
																		},
																		"nativeSrc": "2404:60:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:60:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2397:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:0"
																},
																"nativeSrc": "2397:68:0",
																"nodeType": "YulFunctionCall",
																"src": "2397:68:0"
															},
															"nativeSrc": "2394:116:0",
															"nodeType": "YulIf",
															"src": "2394:116:0"
														},
														{
															"nativeSrc": "2679:73:0",
															"nodeType": "YulAssignment",
															"src": "2679:73:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nativeSrc": "2699:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "2699:1:0"
																							},
																							{
																								"name": "y",
																								"nativeSrc": "2702:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "2702:1:0"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "2695:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2695:3:0"
																						},
																						"nativeSrc": "2695:9:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2695:9:0"
																					},
																					{
																						"name": "denominator",
																						"nativeSrc": "2706:11:0",
																						"nodeType": "YulIdentifier",
																						"src": "2706:11:0"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nativeSrc": "2691:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:0"
																				},
																				"nativeSrc": "2691:27:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:27:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2720:1:0",
																				"nodeType": "YulLiteral",
																				"src": "2720:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2688:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2688:2:0"
																		},
																		"nativeSrc": "2688:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:34:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2732:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "2732:1:0"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "2735:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "2735:1:0"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2728:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2728:3:0"
																				},
																				"nativeSrc": "2728:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2728:9:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "2739:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "2739:11:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2724:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:0"
																		},
																		"nativeSrc": "2724:27:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:27:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2684:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2684:3:0"
																},
																"nativeSrc": "2684:68:0",
																"nodeType": "YulFunctionCall",
																"src": "2684:68:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "2679:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2679:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "2445:11:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2408:11:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2706:11:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2739:11:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "2438:1:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "2699:1:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "2732:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2432:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2458:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2702:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2735:1:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "2679:1:0",
														"valueSize": 1
													}
												],
												"id": 100,
												"nodeType": "InlineAssembly",
												"src": "2274:488:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivUp",
									"nameLocation": "2105:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2131:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "2169:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2161:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:73:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2218:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2210:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:11:0"
									},
									"scope": 158,
									"src": "2096:672:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2890:2662:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2952:2594:0",
													"nodeType": "YulBlock",
													"src": "2952:2594:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2994:254:0",
																		"nodeType": "YulBlock",
																		"src": "2994:254:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nativeSrc": "3044:85:0",
																							"nodeType": "YulBlock",
																							"src": "3044:85:0",
																							"statements": [
																								{
																									"nativeSrc": "3100:11:0",
																									"nodeType": "YulAssignment",
																									"src": "3100:11:0",
																									"value": {
																										"name": "scalar",
																										"nativeSrc": "3105:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "3105:6:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3100:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3100:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3037:92:0",
																						"nodeType": "YulCase",
																						"src": "3037:92:0",
																						"value": {
																							"kind": "number",
																							"nativeSrc": "3042:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3042:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nativeSrc": "3154:80:0",
																							"nodeType": "YulBlock",
																							"src": "3154:80:0",
																							"statements": [
																								{
																									"nativeSrc": "3210:6:0",
																									"nodeType": "YulAssignment",
																									"src": "3210:6:0",
																									"value": {
																										"kind": "number",
																										"nativeSrc": "3215:1:0",
																										"nodeType": "YulLiteral",
																										"src": "3215:1:0",
																										"type": "",
																										"value": "0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3210:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3210:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3146:88:0",
																						"nodeType": "YulCase",
																						"src": "3146:88:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"name": "n",
																					"nativeSrc": "3019:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "3019:1:0"
																				},
																				"nativeSrc": "3012:222:0",
																				"nodeType": "YulSwitch",
																				"src": "3012:222:0"
																			}
																		]
																	},
																	"nativeSrc": "2987:261:0",
																	"nodeType": "YulCase",
																	"src": "2987:261:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2992:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2992:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3269:2267:0",
																		"nodeType": "YulBlock",
																		"src": "3269:2267:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nativeSrc": "3327:115:0",
																							"nodeType": "YulBlock",
																							"src": "3327:115:0",
																							"statements": [
																								{
																									"nativeSrc": "3413:11:0",
																									"nodeType": "YulAssignment",
																									"src": "3413:11:0",
																									"value": {
																										"name": "scalar",
																										"nativeSrc": "3418:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "3418:6:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3413:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3413:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3320:122:0",
																						"nodeType": "YulCase",
																						"src": "3320:122:0",
																						"value": {
																							"kind": "number",
																							"nativeSrc": "3325:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3325:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nativeSrc": "3467:104:0",
																							"nodeType": "YulBlock",
																							"src": "3467:104:0",
																							"statements": [
																								{
																									"nativeSrc": "3547:6:0",
																									"nodeType": "YulAssignment",
																									"src": "3547:6:0",
																									"value": {
																										"name": "x",
																										"nativeSrc": "3552:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "3552:1:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3547:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3547:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3459:112:0",
																						"nodeType": "YulCase",
																						"src": "3459:112:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"name": "n",
																							"nativeSrc": "3298:1:0",
																							"nodeType": "YulIdentifier",
																							"src": "3298:1:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3301:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3301:1:0",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nativeSrc": "3294:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3294:3:0"
																					},
																					"nativeSrc": "3294:9:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3294:9:0"
																				},
																				"nativeSrc": "3287:284:0",
																				"nodeType": "YulSwitch",
																				"src": "3287:284:0"
																			},
																			{
																				"nativeSrc": "3651:26:0",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3651:26:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3667:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3667:1:0",
																							"type": "",
																							"value": "1"
																						},
																						{
																							"name": "scalar",
																							"nativeSrc": "3670:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "3670:6:0"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3663:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3663:3:0"
																					},
																					"nativeSrc": "3663:14:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3663:14:0"
																				},
																				"variables": [
																					{
																						"name": "half",
																						"nativeSrc": "3655:4:0",
																						"nodeType": "YulTypedName",
																						"src": "3655:4:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3951:1571:0",
																					"nodeType": "YulBlock",
																					"src": "3951:1571:0",
																					"statements": [
																						{
																							"body": {
																								"nativeSrc": "4125:60:0",
																								"nodeType": "YulBlock",
																								"src": "4125:60:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "4158:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4158:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "4161:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4161:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "4151:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "4151:6:0"
																											},
																											"nativeSrc": "4151:12:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4151:12:0"
																										},
																										"nativeSrc": "4151:12:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "4151:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "4117:3:0",
																										"nodeType": "YulLiteral",
																										"src": "4117:3:0",
																										"type": "",
																										"value": "128"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "4122:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4122:1:0"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "4113:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4113:3:0"
																								},
																								"nativeSrc": "4113:11:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4113:11:0"
																							},
																							"nativeSrc": "4110:75:0",
																							"nodeType": "YulIf",
																							"src": "4110:75:0"
																						},
																						{
																							"nativeSrc": "4247:19:0",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4247:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "4261:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4261:1:0"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "4264:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4264:1:0"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nativeSrc": "4257:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4257:3:0"
																								},
																								"nativeSrc": "4257:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4257:9:0"
																							},
																							"variables": [
																								{
																									"name": "xx",
																									"nativeSrc": "4251:2:0",
																									"nodeType": "YulTypedName",
																									"src": "4251:2:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"nativeSrc": "4340:28:0",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4340:28:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xx",
																										"nativeSrc": "4359:2:0",
																										"nodeType": "YulIdentifier",
																										"src": "4359:2:0"
																									},
																									{
																										"name": "half",
																										"nativeSrc": "4363:4:0",
																										"nodeType": "YulIdentifier",
																										"src": "4363:4:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4355:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4355:3:0"
																								},
																								"nativeSrc": "4355:13:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4355:13:0"
																							},
																							"variables": [
																								{
																									"name": "xxRound",
																									"nativeSrc": "4344:7:0",
																									"nodeType": "YulTypedName",
																									"src": "4344:7:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "4464:60:0",
																								"nodeType": "YulBlock",
																								"src": "4464:60:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "4497:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4497:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "4500:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4500:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "4490:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "4490:6:0"
																											},
																											"nativeSrc": "4490:12:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4490:12:0"
																										},
																										"nativeSrc": "4490:12:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "4490:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nativeSrc": "4451:7:0",
																										"nodeType": "YulIdentifier",
																										"src": "4451:7:0"
																									},
																									{
																										"name": "xx",
																										"nativeSrc": "4460:2:0",
																										"nodeType": "YulIdentifier",
																										"src": "4460:2:0"
																									}
																								],
																								"functionName": {
																									"name": "lt",
																									"nativeSrc": "4448:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "4448:2:0"
																								},
																								"nativeSrc": "4448:15:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4448:15:0"
																							},
																							"nativeSrc": "4445:79:0",
																							"nodeType": "YulIf",
																							"src": "4445:79:0"
																						},
																						{
																							"nativeSrc": "4594:25:0",
																							"nodeType": "YulAssignment",
																							"src": "4594:25:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nativeSrc": "4603:7:0",
																										"nodeType": "YulIdentifier",
																										"src": "4603:7:0"
																									},
																									{
																										"name": "scalar",
																										"nativeSrc": "4612:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "4612:6:0"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "4599:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4599:3:0"
																								},
																								"nativeSrc": "4599:20:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4599:20:0"
																							},
																							"variableNames": [
																								{
																									"name": "x",
																									"nativeSrc": "4594:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "4594:1:0"
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "4691:813:0",
																								"nodeType": "YulBlock",
																								"src": "4691:813:0",
																								"statements": [
																									{
																										"nativeSrc": "4759:19:0",
																										"nodeType": "YulVariableDeclaration",
																										"src": "4759:19:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "z",
																													"nativeSrc": "4773:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "4773:1:0"
																												},
																												{
																													"name": "x",
																													"nativeSrc": "4776:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "4776:1:0"
																												}
																											],
																											"functionName": {
																												"name": "mul",
																												"nativeSrc": "4769:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "4769:3:0"
																											},
																											"nativeSrc": "4769:9:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4769:9:0"
																										},
																										"variables": [
																											{
																												"name": "zx",
																												"nativeSrc": "4763:2:0",
																												"nodeType": "YulTypedName",
																												"src": "4763:2:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nativeSrc": "4881:209:0",
																											"nodeType": "YulBlock",
																											"src": "4881:209:0",
																											"statements": [
																												{
																													"body": {
																														"nativeSrc": "4988:76:0",
																														"nodeType": "YulBlock",
																														"src": "4988:76:0",
																														"statements": [
																															{
																																"expression": {
																																	"arguments": [
																																		{
																																			"kind": "number",
																																			"nativeSrc": "5029:1:0",
																																			"nodeType": "YulLiteral",
																																			"src": "5029:1:0",
																																			"type": "",
																																			"value": "0"
																																		},
																																		{
																																			"kind": "number",
																																			"nativeSrc": "5032:1:0",
																																			"nodeType": "YulLiteral",
																																			"src": "5032:1:0",
																																			"type": "",
																																			"value": "0"
																																		}
																																	],
																																	"functionName": {
																																		"name": "revert",
																																		"nativeSrc": "5022:6:0",
																																		"nodeType": "YulIdentifier",
																																		"src": "5022:6:0"
																																	},
																																	"nativeSrc": "5022:12:0",
																																	"nodeType": "YulFunctionCall",
																																	"src": "5022:12:0"
																																},
																																"nativeSrc": "5022:12:0",
																																"nodeType": "YulExpressionStatement",
																																"src": "5022:12:0"
																															}
																														]
																													},
																													"condition": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"name": "x",
																																		"nativeSrc": "4984:1:0",
																																		"nodeType": "YulIdentifier",
																																		"src": "4984:1:0"
																																	}
																																],
																																"functionName": {
																																	"name": "iszero",
																																	"nativeSrc": "4977:6:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "4977:6:0"
																																},
																																"nativeSrc": "4977:9:0",
																																"nodeType": "YulFunctionCall",
																																"src": "4977:9:0"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nativeSrc": "4970:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "4970:6:0"
																														},
																														"nativeSrc": "4970:17:0",
																														"nodeType": "YulFunctionCall",
																														"src": "4970:17:0"
																													},
																													"nativeSrc": "4967:97:0",
																													"nodeType": "YulIf",
																													"src": "4967:97:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "zx",
																																	"nativeSrc": "4869:2:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "4869:2:0"
																																},
																																{
																																	"name": "x",
																																	"nativeSrc": "4873:1:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "4873:1:0"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nativeSrc": "4865:3:0",
																																"nodeType": "YulIdentifier",
																																"src": "4865:3:0"
																															},
																															"nativeSrc": "4865:10:0",
																															"nodeType": "YulFunctionCall",
																															"src": "4865:10:0"
																														},
																														{
																															"name": "z",
																															"nativeSrc": "4877:1:0",
																															"nodeType": "YulIdentifier",
																															"src": "4877:1:0"
																														}
																													],
																													"functionName": {
																														"name": "eq",
																														"nativeSrc": "4862:2:0",
																														"nodeType": "YulIdentifier",
																														"src": "4862:2:0"
																													},
																													"nativeSrc": "4862:17:0",
																													"nodeType": "YulFunctionCall",
																													"src": "4862:17:0"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "4855:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "4855:6:0"
																											},
																											"nativeSrc": "4855:25:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4855:25:0"
																										},
																										"nativeSrc": "4852:238:0",
																										"nodeType": "YulIf",
																										"src": "4852:238:0"
																									},
																									{
																										"nativeSrc": "5172:28:0",
																										"nodeType": "YulVariableDeclaration",
																										"src": "5172:28:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zx",
																													"nativeSrc": "5191:2:0",
																													"nodeType": "YulIdentifier",
																													"src": "5191:2:0"
																												},
																												{
																													"name": "half",
																													"nativeSrc": "5195:4:0",
																													"nodeType": "YulIdentifier",
																													"src": "5195:4:0"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "5187:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "5187:3:0"
																											},
																											"nativeSrc": "5187:13:0",
																											"nodeType": "YulFunctionCall",
																											"src": "5187:13:0"
																										},
																										"variables": [
																											{
																												"name": "zxRound",
																												"nativeSrc": "5176:7:0",
																												"nodeType": "YulTypedName",
																												"src": "5176:7:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nativeSrc": "5304:68:0",
																											"nodeType": "YulBlock",
																											"src": "5304:68:0",
																											"statements": [
																												{
																													"expression": {
																														"arguments": [
																															{
																																"kind": "number",
																																"nativeSrc": "5341:1:0",
																																"nodeType": "YulLiteral",
																																"src": "5341:1:0",
																																"type": "",
																																"value": "0"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "5344:1:0",
																																"nodeType": "YulLiteral",
																																"src": "5344:1:0",
																																"type": "",
																																"value": "0"
																															}
																														],
																														"functionName": {
																															"name": "revert",
																															"nativeSrc": "5334:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "5334:6:0"
																														},
																														"nativeSrc": "5334:12:0",
																														"nodeType": "YulFunctionCall",
																														"src": "5334:12:0"
																													},
																													"nativeSrc": "5334:12:0",
																													"nodeType": "YulExpressionStatement",
																													"src": "5334:12:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nativeSrc": "5291:7:0",
																													"nodeType": "YulIdentifier",
																													"src": "5291:7:0"
																												},
																												{
																													"name": "zx",
																													"nativeSrc": "5300:2:0",
																													"nodeType": "YulIdentifier",
																													"src": "5300:2:0"
																												}
																											],
																											"functionName": {
																												"name": "lt",
																												"nativeSrc": "5288:2:0",
																												"nodeType": "YulIdentifier",
																												"src": "5288:2:0"
																											},
																											"nativeSrc": "5288:15:0",
																											"nodeType": "YulFunctionCall",
																											"src": "5288:15:0"
																										},
																										"nativeSrc": "5285:87:0",
																										"nodeType": "YulIf",
																										"src": "5285:87:0"
																									},
																									{
																										"nativeSrc": "5457:25:0",
																										"nodeType": "YulAssignment",
																										"src": "5457:25:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nativeSrc": "5466:7:0",
																													"nodeType": "YulIdentifier",
																													"src": "5466:7:0"
																												},
																												{
																													"name": "scalar",
																													"nativeSrc": "5475:6:0",
																													"nodeType": "YulIdentifier",
																													"src": "5475:6:0"
																												}
																											],
																											"functionName": {
																												"name": "div",
																												"nativeSrc": "5462:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "5462:3:0"
																											},
																											"nativeSrc": "5462:20:0",
																											"nodeType": "YulFunctionCall",
																											"src": "5462:20:0"
																										},
																										"variableNames": [
																											{
																												"name": "z",
																												"nativeSrc": "5457:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "5457:1:0"
																											}
																										]
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "n",
																										"nativeSrc": "4685:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4685:1:0"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4688:1:0",
																										"nodeType": "YulLiteral",
																										"src": "4688:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "mod",
																									"nativeSrc": "4681:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4681:3:0"
																								},
																								"nativeSrc": "4681:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4681:9:0"
																							},
																							"nativeSrc": "4678:826:0",
																							"nodeType": "YulIf",
																							"src": "4678:826:0"
																						}
																					]
																				},
																				"condition": {
																					"name": "n",
																					"nativeSrc": "3824:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "3824:1:0"
																				},
																				"nativeSrc": "3695:1827:0",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3826:124:0",
																					"nodeType": "YulBlock",
																					"src": "3826:124:0",
																					"statements": [
																						{
																							"nativeSrc": "3918:14:0",
																							"nodeType": "YulAssignment",
																							"src": "3918:14:0",
																							"value": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3927:1:0",
																										"nodeType": "YulLiteral",
																										"src": "3927:1:0",
																										"type": "",
																										"value": "1"
																									},
																									{
																										"name": "n",
																										"nativeSrc": "3930:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "3930:1:0"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "3923:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "3923:3:0"
																								},
																								"nativeSrc": "3923:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "3923:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nativeSrc": "3918:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "3918:1:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3699:124:0",
																					"nodeType": "YulBlock",
																					"src": "3699:124:0",
																					"statements": [
																						{
																							"nativeSrc": "3791:14:0",
																							"nodeType": "YulAssignment",
																							"src": "3791:14:0",
																							"value": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3800:1:0",
																										"nodeType": "YulLiteral",
																										"src": "3800:1:0",
																										"type": "",
																										"value": "1"
																									},
																									{
																										"name": "n",
																										"nativeSrc": "3803:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "3803:1:0"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "3796:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "3796:3:0"
																								},
																								"nativeSrc": "3796:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "3796:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nativeSrc": "3791:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "3791:1:0"
																								}
																							]
																						}
																					]
																				},
																				"src": "3695:1827:0"
																			}
																		]
																	},
																	"nativeSrc": "3261:2275:0",
																	"nodeType": "YulCase",
																	"src": "3261:2275:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "x",
																"nativeSrc": "2973:1:0",
																"nodeType": "YulIdentifier",
																"src": "2973:1:0"
															},
															"nativeSrc": "2966:2570:0",
															"nodeType": "YulSwitch",
															"src": "2966:2570:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3019:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3298:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3791:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3803:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3824:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3918:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3930:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "4685:1:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "3105:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "3418:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "3670:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "4612:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "5475:6:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "2973:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "3552:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4122:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4261:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4264:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4594:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4776:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3100:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3210:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3413:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3547:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "4773:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "4877:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "5457:1:0",
														"valueSize": 1
													}
												],
												"id": 113,
												"nodeType": "InlineAssembly",
												"src": "2943:2603:0"
											}
										]
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rpow",
									"nameLocation": "2783:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2805:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2797:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "2824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "scalar",
												"nameLocation": "2843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:68:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2887:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2879:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:11:0"
									},
									"scope": 158,
									"src": "2774:2778:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "5805:3337:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5867:3269:0",
													"nodeType": "YulBlock",
													"src": "5867:3269:0",
													"statements": [
														{
															"nativeSrc": "5881:10:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5881:10:0",
															"value": {
																"name": "x",
																"nativeSrc": "5890:1:0",
																"nodeType": "YulIdentifier",
																"src": "5890:1:0"
															},
															"variables": [
																{
																	"name": "y",
																	"nativeSrc": "5885:1:0",
																	"nodeType": "YulTypedName",
																	"src": "5885:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5971:8:0",
															"nodeType": "YulAssignment",
															"src": "5971:8:0",
															"value": {
																"kind": "number",
																"nativeSrc": "5976:3:0",
																"nodeType": "YulLiteral",
																"src": "5976:3:0",
																"type": "",
																"value": "181"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "5971:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "5971:1:0"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6465:80:0",
																"nodeType": "YulBlock",
																"src": "6465:80:0",
																"statements": [
																	{
																		"nativeSrc": "6483:16:0",
																		"nodeType": "YulAssignment",
																		"src": "6483:16:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6492:3:0",
																					"nodeType": "YulLiteral",
																					"src": "6492:3:0",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6497:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6497:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6488:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6488:3:0"
																			},
																			"nativeSrc": "6488:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6488:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6483:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6483:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6516:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6516:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6525:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6525:2:0",
																					"type": "",
																					"value": "64"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6529:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6529:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6521:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6521:3:0"
																			},
																			"nativeSrc": "6521:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6521:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6516:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6516:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6422:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6422:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6425:37:0",
																				"nodeType": "YulLiteral",
																				"src": "6425:37:0",
																				"type": "",
																				"value": "0x10000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6419:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6419:2:0"
																		},
																		"nativeSrc": "6419:44:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6419:44:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6412:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:0"
																},
																"nativeSrc": "6412:52:0",
																"nodeType": "YulFunctionCall",
																"src": "6412:52:0"
															},
															"nativeSrc": "6409:136:0",
															"nodeType": "YulIf",
															"src": "6409:136:0"
														},
														{
															"body": {
																"nativeSrc": "6598:79:0",
																"nodeType": "YulBlock",
																"src": "6598:79:0",
																"statements": [
																	{
																		"nativeSrc": "6616:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6616:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6625:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6625:2:0",
																					"type": "",
																					"value": "64"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6629:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6629:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6621:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6621:3:0"
																			},
																			"nativeSrc": "6621:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6621:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6616:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6616:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6648:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6648:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6657:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6657:2:0",
																					"type": "",
																					"value": "32"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6661:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6661:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6653:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6653:3:0"
																			},
																			"nativeSrc": "6653:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6653:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6648:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6648:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6571:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6571:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6574:21:0",
																				"nodeType": "YulLiteral",
																				"src": "6574:21:0",
																				"type": "",
																				"value": "0x1000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6568:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6568:2:0"
																		},
																		"nativeSrc": "6568:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:28:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6561:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:0"
																},
																"nativeSrc": "6561:36:0",
																"nodeType": "YulFunctionCall",
																"src": "6561:36:0"
															},
															"nativeSrc": "6558:119:0",
															"nodeType": "YulIf",
															"src": "6558:119:0"
														},
														{
															"body": {
																"nativeSrc": "6722:79:0",
																"nodeType": "YulBlock",
																"src": "6722:79:0",
																"statements": [
																	{
																		"nativeSrc": "6740:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6740:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6749:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6749:2:0",
																					"type": "",
																					"value": "32"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6753:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6753:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6745:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6745:3:0"
																			},
																			"nativeSrc": "6745:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6745:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6740:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6740:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6772:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6772:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6781:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6781:2:0",
																					"type": "",
																					"value": "16"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6785:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6785:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6777:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6777:3:0"
																			},
																			"nativeSrc": "6777:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6777:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6772:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6772:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6703:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6703:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6706:13:0",
																				"nodeType": "YulLiteral",
																				"src": "6706:13:0",
																				"type": "",
																				"value": "0x10000000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6700:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6700:2:0"
																		},
																		"nativeSrc": "6700:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6700:20:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6693:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:0"
																},
																"nativeSrc": "6693:28:0",
																"nodeType": "YulFunctionCall",
																"src": "6693:28:0"
															},
															"nativeSrc": "6690:111:0",
															"nodeType": "YulIf",
															"src": "6690:111:0"
														},
														{
															"body": {
																"nativeSrc": "6842:78:0",
																"nodeType": "YulBlock",
																"src": "6842:78:0",
																"statements": [
																	{
																		"nativeSrc": "6860:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6860:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6869:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6869:2:0",
																					"type": "",
																					"value": "16"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6873:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6873:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6865:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6865:3:0"
																			},
																			"nativeSrc": "6865:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6865:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6860:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6860:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6892:14:0",
																		"nodeType": "YulAssignment",
																		"src": "6892:14:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6901:1:0",
																					"nodeType": "YulLiteral",
																					"src": "6901:1:0",
																					"type": "",
																					"value": "8"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6904:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6904:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6897:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6897:3:0"
																			},
																			"nativeSrc": "6897:9:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6897:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6892:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6892:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6827:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6827:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6830:9:0",
																				"nodeType": "YulLiteral",
																				"src": "6830:9:0",
																				"type": "",
																				"value": "0x1000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6824:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6824:2:0"
																		},
																		"nativeSrc": "6824:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:16:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6817:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:0"
																},
																"nativeSrc": "6817:24:0",
																"nodeType": "YulFunctionCall",
																"src": "6817:24:0"
															},
															"nativeSrc": "6814:106:0",
															"nodeType": "YulIf",
															"src": "6814:106:0"
														},
														{
															"nativeSrc": "8110:35:0",
															"nodeType": "YulAssignment",
															"src": "8110:35:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8119:2:0",
																		"nodeType": "YulLiteral",
																		"src": "8119:2:0",
																		"type": "",
																		"value": "18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8127:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8127:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8134:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8134:1:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8137:5:0",
																						"nodeType": "YulLiteral",
																						"src": "8137:5:0",
																						"type": "",
																						"value": "65536"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8130:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8130:3:0"
																				},
																				"nativeSrc": "8130:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8130:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8123:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:0"
																		},
																		"nativeSrc": "8123:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:21:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8115:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8115:3:0"
																},
																"nativeSrc": "8115:30:0",
																"nodeType": "YulFunctionCall",
																"src": "8115:30:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8110:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8110:1:0"
																}
															]
														},
														{
															"nativeSrc": "8306:30:0",
															"nodeType": "YulAssignment",
															"src": "8306:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8315:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8315:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8322:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8322:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8329:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8329:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8332:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8332:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8325:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8325:3:0"
																				},
																				"nativeSrc": "8325:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8325:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8318:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:0"
																		},
																		"nativeSrc": "8318:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8311:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:0"
																},
																"nativeSrc": "8311:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8311:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8306:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8306:1:0"
																}
															]
														},
														{
															"nativeSrc": "8349:30:0",
															"nodeType": "YulAssignment",
															"src": "8349:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8358:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8358:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8365:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8365:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8372:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8372:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8375:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8375:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8368:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8368:3:0"
																				},
																				"nativeSrc": "8368:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8368:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8361:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8361:3:0"
																		},
																		"nativeSrc": "8361:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8361:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8354:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8354:3:0"
																},
																"nativeSrc": "8354:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8354:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8349:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8349:1:0"
																}
															]
														},
														{
															"nativeSrc": "8392:30:0",
															"nodeType": "YulAssignment",
															"src": "8392:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8401:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8401:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8408:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8408:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8415:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8415:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8418:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8418:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8411:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8411:3:0"
																				},
																				"nativeSrc": "8411:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8411:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8404:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8404:3:0"
																		},
																		"nativeSrc": "8404:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8404:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8397:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:0"
																},
																"nativeSrc": "8397:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8397:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8392:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8392:1:0"
																}
															]
														},
														{
															"nativeSrc": "8435:30:0",
															"nodeType": "YulAssignment",
															"src": "8435:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8444:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8444:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8451:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8451:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8458:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8458:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8461:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8461:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8454:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8454:3:0"
																				},
																				"nativeSrc": "8454:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8454:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8447:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8447:3:0"
																		},
																		"nativeSrc": "8447:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8447:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8440:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:0"
																},
																"nativeSrc": "8440:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8440:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8435:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8435:1:0"
																}
															]
														},
														{
															"nativeSrc": "8478:30:0",
															"nodeType": "YulAssignment",
															"src": "8478:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8487:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8487:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8494:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8494:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8501:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8501:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8504:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8504:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8497:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8497:3:0"
																				},
																				"nativeSrc": "8497:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8497:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8490:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8490:3:0"
																		},
																		"nativeSrc": "8490:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8490:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8483:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8483:3:0"
																},
																"nativeSrc": "8483:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8483:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8478:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8478:1:0"
																}
															]
														},
														{
															"nativeSrc": "8521:30:0",
															"nodeType": "YulAssignment",
															"src": "8521:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8530:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8530:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8537:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8537:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8544:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8544:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8547:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8547:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8540:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8540:3:0"
																				},
																				"nativeSrc": "8540:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8540:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8533:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:0"
																		},
																		"nativeSrc": "8533:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8533:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8526:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8526:3:0"
																},
																"nativeSrc": "8526:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8526:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8521:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8521:1:0"
																}
															]
														},
														{
															"nativeSrc": "8564:30:0",
															"nodeType": "YulAssignment",
															"src": "8564:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8573:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8573:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8580:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8580:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8587:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8587:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8590:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8590:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8583:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8583:3:0"
																				},
																				"nativeSrc": "8583:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8583:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8576:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8576:3:0"
																		},
																		"nativeSrc": "8576:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8576:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8569:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:0"
																},
																"nativeSrc": "8569:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8569:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8564:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8564:1:0"
																}
															]
														},
														{
															"nativeSrc": "9097:29:0",
															"nodeType": "YulAssignment",
															"src": "9097:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "z",
																		"nativeSrc": "9106:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9106:1:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9116:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "9116:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "9119:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "9119:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9112:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "9112:3:0"
																				},
																				"nativeSrc": "9112:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "9112:9:0"
																			},
																			{
																				"name": "z",
																				"nativeSrc": "9123:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "9123:1:0"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9109:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "9109:2:0"
																		},
																		"nativeSrc": "9109:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9109:16:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9102:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:0"
																},
																"nativeSrc": "9102:24:0",
																"nodeType": "YulFunctionCall",
																"src": "9102:24:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "9097:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9097:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "5890:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8329:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8372:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8415:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8458:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8501:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8544:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "9116:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "5971:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6516:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6529:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6648:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6661:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6772:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6785:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6892:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6904:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8110:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8127:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8306:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8322:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8332:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8349:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8365:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8375:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8392:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8408:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8418:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8435:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8451:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8461:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8478:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8494:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8504:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8521:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8537:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8547:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8564:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8580:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8590:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9097:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9106:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9119:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9123:1:0",
														"valueSize": 1
													}
												],
												"id": 122,
												"nodeType": "InlineAssembly",
												"src": "5858:3278:0"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "5755:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5768:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5760:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:11:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5802:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5794:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5793:11:0"
									},
									"scope": 158,
									"src": "5746:3396:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "9223:207:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9285:139:0",
													"nodeType": "YulBlock",
													"src": "9285:139:0",
													"statements": [
														{
															"nativeSrc": "9400:14:0",
															"nodeType": "YulAssignment",
															"src": "9400:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9409:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9409:1:0"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9412:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9412:1:0"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "9405:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:0"
																},
																"nativeSrc": "9405:9:0",
																"nodeType": "YulFunctionCall",
																"src": "9405:9:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "9400:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9400:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 126,
														"isOffset": false,
														"isSlot": false,
														"src": "9409:1:0",
														"valueSize": 1
													},
													{
														"declaration": 128,
														"isOffset": false,
														"isSlot": false,
														"src": "9412:1:0",
														"valueSize": 1
													},
													{
														"declaration": 131,
														"isOffset": false,
														"isSlot": false,
														"src": "9400:1:0",
														"valueSize": 1
													}
												],
												"id": 133,
												"nodeType": "InlineAssembly",
												"src": "9276:148:0"
											}
										]
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMod",
									"nameLocation": "9157:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9175:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "9167:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "9178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9166:22:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "9220:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "9212:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9211:11:0"
									},
									"scope": 158,
									"src": "9148:282:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "9511:210:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9573:142:0",
													"nodeType": "YulBlock",
													"src": "9573:142:0",
													"statements": [
														{
															"nativeSrc": "9691:14:0",
															"nodeType": "YulAssignment",
															"src": "9691:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9700:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9700:1:0"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9703:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9703:1:0"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9696:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9696:3:0"
																},
																"nativeSrc": "9696:9:0",
																"nodeType": "YulFunctionCall",
																"src": "9696:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9691:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9691:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "9691:1:0",
														"valueSize": 1
													},
													{
														"declaration": 137,
														"isOffset": false,
														"isSlot": false,
														"src": "9700:1:0",
														"valueSize": 1
													},
													{
														"declaration": 139,
														"isOffset": false,
														"isSlot": false,
														"src": "9703:1:0",
														"valueSize": 1
													}
												],
												"id": 144,
												"nodeType": "InlineAssembly",
												"src": "9564:151:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeDiv",
									"nameLocation": "9445:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9463:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "9455:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9474:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "9466:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9454:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "9508:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "9500:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9499:11:0"
									},
									"scope": 158,
									"src": "9436:285:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "9804:247:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9866:179:0",
													"nodeType": "YulBlock",
													"src": "9866:179:0",
													"statements": [
														{
															"nativeSrc": "9998:37:0",
															"nodeType": "YulAssignment",
															"src": "9998:37:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10014:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "10014:1:0"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "10017:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "10017:1:0"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nativeSrc": "10010:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "10010:3:0"
																				},
																				"nativeSrc": "10010:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "10010:9:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10021:1:0",
																				"nodeType": "YulLiteral",
																				"src": "10021:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10007:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "10007:2:0"
																		},
																		"nativeSrc": "10007:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10007:16:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "10029:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "10029:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "10032:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "10032:1:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10025:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10025:3:0"
																		},
																		"nativeSrc": "10025:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10025:9:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10003:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:0"
																},
																"nativeSrc": "10003:32:0",
																"nodeType": "YulFunctionCall",
																"src": "10003:32:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "9998:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9998:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 148,
														"isOffset": false,
														"isSlot": false,
														"src": "10014:1:0",
														"valueSize": 1
													},
													{
														"declaration": 148,
														"isOffset": false,
														"isSlot": false,
														"src": "10029:1:0",
														"valueSize": 1
													},
													{
														"declaration": 150,
														"isOffset": false,
														"isSlot": false,
														"src": "10017:1:0",
														"valueSize": 1
													},
													{
														"declaration": 150,
														"isOffset": false,
														"isSlot": false,
														"src": "10032:1:0",
														"valueSize": 1
													},
													{
														"declaration": 153,
														"isOffset": false,
														"isSlot": false,
														"src": "9998:1:0",
														"valueSize": 1
													}
												],
												"id": 155,
												"nodeType": "InlineAssembly",
												"src": "9857:188:0"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeDivUp",
									"nameLocation": "9736:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9756:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "9748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9767:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "9759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9747:22:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "9801:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "9793:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9792:11:0"
									},
									"scope": 158,
									"src": "9727:324:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 159,
							"src": "341:9712:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:10011:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							454
						],
						"Context": [
							1209
						],
						"ERC165": [
							1233
						],
						"IAccessControl": [
							537
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 538,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 161,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 537,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 1210,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 163,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1209,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 1234,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 165,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1233,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 168,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1209,
										"src": "1988:7:1"
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 170,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 537,
										"src": "1997:14:1"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 172,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1233,
										"src": "2013:6:1"
									},
									"id": 173,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								1233,
								1245,
								537,
								1209
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 180,
									"members": [
										{
											"constant": false,
											"id": 177,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 176,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 179,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 178,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 454,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 184,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 181,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 183,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 182,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 180,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 180,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$180_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 188,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 186,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 193,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															273
														],
														"referencedDeclaration": 252,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 197,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 199,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 190,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1232
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 208,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 210,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$537_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$537_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 209,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$537",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 216,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 214,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$454_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1232,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 219,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 201,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 454,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										504
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 231,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 233,
															"indexExpression": {
																"id": 232,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$180_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 236,
													"indexExpression": {
														"id": 235,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 230,
												"id": 237,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 454,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 247,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															273
														],
														"referencedDeclaration": 273,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 454,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 261,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 262,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 260,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 266,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 267,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 265,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 454,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 281,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 283,
														"indexExpression": {
															"id": 282,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$180_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 179,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 280,
												"id": 285,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 454,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										520
									],
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 302,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 295,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 294,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 454,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										528
									],
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 321,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 319,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 315,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 314,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 454,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 334,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 337,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 339,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 344,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 342,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 454,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 356,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 358,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 362,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 364,
															"indexExpression": {
																"id": 363,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$180_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 366,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 370,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 371,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 372,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 369,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 454,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 387,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 388,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 386,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 385,
															"id": 411,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 391,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 393,
																			"indexExpression": {
																				"id": 392,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$180_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 396,
																	"indexExpression": {
																		"id": 395,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 399,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 401,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 402,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 403,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 400,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 385,
															"id": 408,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 454,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 426,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 424,
															"id": 449,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 429,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 431,
																			"indexExpression": {
																				"id": 430,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$180_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 434,
																	"indexExpression": {
																		"id": 433,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 440,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 441,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 424,
															"id": 446,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 454,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "1953:5096:1",
							"usedErrors": [
								464,
								467
							],
							"usedEvents": [
								476,
								485,
								494
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							537
						]
					},
					"id": 538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 537,
							"linearizedBaseContracts": [
								537
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 464,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 467,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 476,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 485,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 494,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 537,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 537,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 514,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 537,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 522,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 537,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 537,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 538,
							"src": "226:3116:2",
							"usedErrors": [
								464,
								467
							],
							"usedEvents": [
								476,
								485,
								494
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							619
						],
						"IERC165": [
							1245
						],
						"IERC20": [
							770
						]
					},
					"id": 620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 539,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 628,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 540,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 624,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1245,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 545,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 770,
										"src": "590:6:3"
									},
									"id": 546,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 547,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "598:7:3"
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 544,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 619,
							"linearizedBaseContracts": [
								619,
								1245,
								770
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 619,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 619,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 619,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 619,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 619,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 619,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 620,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								704,
								713
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1245
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1246,
							"src": "132:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 622,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1245,
										"src": "140:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							770
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 771,
							"src": "131:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 626,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							692
						]
					},
					"id": 693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 692,
							"linearizedBaseContracts": [
								692
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 633,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 692,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 631,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 632,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 636,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 692,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 634,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 638,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 692,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 641,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 642,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 692,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 649,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 652,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 653,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 657,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 662,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 692,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 675,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 676,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 692,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 687,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 685,
												"id": 689,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 692,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 693,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							770
						]
					},
					"id": 771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 770,
							"linearizedBaseContracts": [
								770
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 704,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 713,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 770,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 770,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 770,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 770,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 770,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 770,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 771,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								704,
								713
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							619
						],
						"IERC20": [
							770
						],
						"SafeERC20": [
							1179
						]
					},
					"id": 1180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 771,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 773,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 620,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 775,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 619,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 777,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1179,
							"linearizedBaseContracts": [
								1179
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 782,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 791,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 806,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 737,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 808,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 809,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 810,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 804,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 802,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 793,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 770,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1179,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 832,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 769,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 834,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 835,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 830,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 828,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 770,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1179,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "2548:139:8",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "2558:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 859,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1179",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1179",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 857,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2612:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 855,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2581:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "2581:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2643:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 866,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2650:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2659:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 868,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "2674:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2630:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:8"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2493:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 844,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "2493:6:8"
													},
													"referencedDeclaration": 770,
													"src": "2493:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2507:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2524:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:8"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:8"
									},
									"scope": 1179,
									"src": "2462:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "3453:370:8",
										"statements": [
											{
												"id": 914,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:8",
												"statements": [
													{
														"assignments": [
															885
														],
														"declarations": [
															{
																"constant": false,
																"id": 885,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 914,
																"src": "3487:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 894,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 890,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1179",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1179",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 888,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 892,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "3545:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3514:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$770",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 747,
																"src": "3514:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 895,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "3571:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 896,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "3590:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 905,
														"nodeType": "IfStatement",
														"src": "3567:160:8",
														"trueBody": {
															"id": 904,
															"nodeType": "Block",
															"src": "3609:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 899,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 879,
																				"src": "3667:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 900,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "3676:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 901,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "3694:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 898,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "3634:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 903,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 907,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3753:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$770",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 908,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "3760:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 909,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "3769:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 910,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "3788:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$770",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 906,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "3740:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 913,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3386:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 875,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "3386:6:8"
													},
													"referencedDeclaration": 770,
													"src": "3386:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3400:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3417:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:8"
									},
									"scope": 1179,
									"src": "3355:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "4477:303:8",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "4487:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 931,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "4530:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 757,
															"src": "4530:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 933,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "4546:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "4555:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 935,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 929,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:8"
											},
											{
												"condition": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 939,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "4602:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 940,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "4609:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 938,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4578:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "4573:201:8",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "4624:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 944,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "4658:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 947,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 920,
																					"src": "4680:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$770",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 757,
																				"src": "4680:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 949,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "4696:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 950,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 951,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 945,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 943,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4638:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 956,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "4743:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 957,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "4750:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 955,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4723:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4422:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "4422:6:8"
													},
													"referencedDeclaration": 770,
													"src": "4422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4436:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4453:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:8"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:8"
									},
									"scope": 1179,
									"src": "4400:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "5227:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 976,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "5241:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 990,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5350:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "5354:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 992,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "5361:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 988,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "5328:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$619",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 570,
																"src": "5328:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1003,
													"nodeType": "IfStatement",
													"src": "5323:117:8",
													"trueBody": {
														"id": 1002,
														"nodeType": "Block",
														"src": "5368:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 998,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "5422:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 996,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 995,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "5389:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1001,
																"nodeType": "RevertStatement",
																"src": "5382:47:8"
															}
														]
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "5237:203:8",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "5262:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "5289:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 983,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "5296:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 984,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "5300:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 981,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5276:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5156:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$619",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 965,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "5156:8:8"
													},
													"referencedDeclaration": 619,
													"src": "5156:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$619",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5172:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5184:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5199:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:8"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:8"
									},
									"scope": 1179,
									"src": "5124:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "5965:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1021,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "5979:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1036,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "6102:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1037,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "6108:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "6112:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1039,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "6119:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1034,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6076:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$619",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 596,
																"src": "6076:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1050,
													"nodeType": "IfStatement",
													"src": "6071:127:8",
													"trueBody": {
														"id": 1049,
														"nodeType": "Block",
														"src": "6126:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1045,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1010,
																					"src": "6180:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1043,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1042,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "6147:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1048,
																"nodeType": "RevertStatement",
																"src": "6140:47:8"
															}
														]
													}
												},
												"id": 1051,
												"nodeType": "IfStatement",
												"src": "5975:223:8",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "6000:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1027,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "6031:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1028,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "6038:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "6044:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1030,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "6048:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1026,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "6014:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1032,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$619",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1009,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1008,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "5843:8:8"
													},
													"referencedDeclaration": 619,
													"src": "5843:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$619",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5867:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5889:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5909:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5932:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:8"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:8"
									},
									"scope": 1179,
									"src": "5798:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "6971:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1066,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6985:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1080,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "7093:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1081,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "7097:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1082,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "7104:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1078,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "7072:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$619",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 618,
																"src": "7072:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1093,
													"nodeType": "IfStatement",
													"src": "7067:116:8",
													"trueBody": {
														"id": 1092,
														"nodeType": "Block",
														"src": "7111:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1088,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "7165:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1086,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1085,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "7132:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1091,
																"nodeType": "RevertStatement",
																"src": "7125:47:8"
															}
														]
													}
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "6981:202:8",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "7006:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "7033:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1073,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "7040:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1074,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "7044:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "7020:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6900:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$619",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1055,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "6900:8:8"
													},
													"referencedDeclaration": 619,
													"src": "6900:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$619",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6916:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6928:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6943:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:8"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:8"
									},
									"scope": 1179,
									"src": "6869:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "7756:650:8",
										"statements": [
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "7766:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:8"
											},
											{
												"assignments": [
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "7794:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:8",
													"nodeType": "YulBlock",
													"src": "7848:396:8",
													"statements": [
														{
															"nativeSrc": "7862:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:8"
																		},
																		"nativeSrc": "7882:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:8"
																		},
																		"nativeSrc": "7899:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:8"
																		},
																		"nativeSrc": "7916:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:8"
																},
																"nativeSrc": "7877:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:8",
																"nodeType": "YulBlock",
																"src": "7998:157:8",
																"statements": [
																	{
																		"nativeSrc": "8016:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:8"
																			},
																			"nativeSrc": "8027:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:8"
																					},
																					"nativeSrc": "8078:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:8"
																			},
																			"nativeSrc": "8055:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:8"
																		},
																		"nativeSrc": "8055:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:8"
																					},
																					"nativeSrc": "8124:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:8"
																			},
																			"nativeSrc": "8112:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:8"
																		},
																		"nativeSrc": "8112:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:8"
																},
																"nativeSrc": "7982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:8"
															},
															"nativeSrc": "7979:176:8",
															"nodeType": "YulIf",
															"src": "7979:176:8"
														},
														{
															"nativeSrc": "8168:30:8",
															"nodeType": "YulAssignment",
															"src": "8168:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:8"
																},
																"nativeSrc": "8182:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:8"
																}
															]
														},
														{
															"nativeSrc": "8211:23:8",
															"nodeType": "YulAssignment",
															"src": "8211:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:8"
																},
																"nativeSrc": "8226:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1106,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1100,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1111,
												"nodeType": "InlineAssembly",
												"src": "7823:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1112,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8258:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1123,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "8310:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1117,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "8284:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$770",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$770",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1115,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "8254:146:8",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "8328:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "8382:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$770",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$770",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "8349:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1133,
															"nodeType": "RevertStatement",
															"src": "8342:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7715:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1098,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "7715:6:8"
													},
													"referencedDeclaration": 770,
													"src": "7715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7729:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:8"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:8"
									},
									"scope": 1179,
									"src": "7686:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "8997:391:8",
										"statements": [
											{
												"assignments": [
													1149
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9007:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1148,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:8"
											},
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9029:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:8"
											},
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9057:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:8",
													"nodeType": "YulBlock",
													"src": "9111:174:8",
													"statements": [
														{
															"nativeSrc": "9125:71:8",
															"nodeType": "YulAssignment",
															"src": "9125:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:8"
																		},
																		"nativeSrc": "9141:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:8"
																		},
																		"nativeSrc": "9158:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:8"
																		},
																		"nativeSrc": "9175:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:8"
																},
																"nativeSrc": "9136:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:8"
																}
															]
														},
														{
															"nativeSrc": "9209:30:8",
															"nodeType": "YulAssignment",
															"src": "9209:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:8"
																},
																"nativeSrc": "9223:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:8"
																}
															]
														},
														{
															"nativeSrc": "9252:23:8",
															"nodeType": "YulAssignment",
															"src": "9252:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:8"
																},
																"nativeSrc": "9267:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1152,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1155,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1149,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1141,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1157,
												"nodeType": "InlineAssembly",
												"src": "9086:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1158,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "9301:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1159,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "9313:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1170,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "9364:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1164,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "9339:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$770",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$770",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1162,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1176,
												"nodeType": "Return",
												"src": "9294:87:8"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8941:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "8941:6:8"
													},
													"referencedDeclaration": 770,
													"src": "8941:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8955:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8991:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:8"
									},
									"scope": 1179,
									"src": "8908:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1180,
							"src": "698:8692:8",
							"usedErrors": [
								782,
								791
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1209
						]
					},
					"id": 1210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1209,
							"linearizedBaseContracts": [
								1209
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1187,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1189,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1209,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1196,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1195,
												"id": 1198,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1209,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1204,
												"id": 1206,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1209,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1210,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1233
						],
						"IERC165": [
							1245
						]
					},
					"id": 1234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1246,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1212,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1245,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1215,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "688:7:10"
									},
									"id": 1216,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1214,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1233,
							"linearizedBaseContracts": [
								1233,
								1245
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "845:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "862:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1226,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1245_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1245_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1225,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1245",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1230,
												"nodeType": "Return",
												"src": "855:47:10"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "790:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:10"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "839:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:10"
									},
									"scope": 1233,
									"src": "763:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1234,
							"src": "660:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1245
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1236,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1245,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1246,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/WallyStaking.sol": {
				"ast": {
					"absolutePath": "contracts/WallyStaking.sol",
					"exportedSymbols": {
						"AccessControl": [
							454
						],
						"CannotRecoverStakedTokens": [
							1276
						],
						"Context": [
							1209
						],
						"DurationAlreadyExists": [
							1272
						],
						"DurationTooLong": [
							1282
						],
						"ERC165": [
							1233
						],
						"FixedPointMathLib": [
							158
						],
						"IAccessControl": [
							537
						],
						"IERC1363": [
							619
						],
						"IERC20": [
							770
						],
						"InsufficientBalance": [
							1274
						],
						"InsufficientRewardsPool": [
							1264
						],
						"InvalidAmount": [
							1254
						],
						"InvalidDuration": [
							1256
						],
						"InvalidStakingPlan": [
							1284
						],
						"InvalidZeroAddress": [
							1266
						],
						"MaxDurationsLimitReached": [
							1278
						],
						"NoActiveStake": [
							1268
						],
						"NoRewardsAvailable": [
							1262
						],
						"ReentrancyGuard": [
							692
						],
						"SafeERC20": [
							1179
						],
						"StakingNotActive": [
							1258
						],
						"StakingStillLocked": [
							1260
						],
						"TransferFailed": [
							1270
						],
						"UnauthorizedCaller": [
							1288
						],
						"WallyStaking": [
							2597
						]
					},
					"id": 2598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2598,
							"sourceUnit": 771,
							"src": "57:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2598,
							"sourceUnit": 1180,
							"src": "114:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2598,
							"sourceUnit": 455,
							"src": "180:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2598,
							"sourceUnit": 693,
							"src": "239:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
							"file": ".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
							"id": 1252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2598,
							"sourceUnit": 159,
							"src": "302:76:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "2c5211c6",
							"id": 1254,
							"name": "InvalidAmount",
							"nameLocation": "519:13:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1253,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "532:2:12"
							},
							"src": "513:22:12"
						},
						{
							"errorSelector": "76166401",
							"id": 1256,
							"name": "InvalidDuration",
							"nameLocation": "542:15:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1255,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "557:2:12"
							},
							"src": "536:24:12"
						},
						{
							"errorSelector": "6929bcec",
							"id": 1258,
							"name": "StakingNotActive",
							"nameLocation": "567:16:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1257,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "583:2:12"
							},
							"src": "561:25:12"
						},
						{
							"errorSelector": "25e5ff65",
							"id": 1260,
							"name": "StakingStillLocked",
							"nameLocation": "593:18:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1259,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "611:2:12"
							},
							"src": "587:27:12"
						},
						{
							"errorSelector": "afb0be33",
							"id": 1262,
							"name": "NoRewardsAvailable",
							"nameLocation": "621:18:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1261,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "639:2:12"
							},
							"src": "615:27:12"
						},
						{
							"errorSelector": "447b0f67",
							"id": 1264,
							"name": "InsufficientRewardsPool",
							"nameLocation": "649:23:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1263,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "672:2:12"
							},
							"src": "643:32:12"
						},
						{
							"errorSelector": "f6b2911f",
							"id": 1266,
							"name": "InvalidZeroAddress",
							"nameLocation": "682:18:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1265,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "700:2:12"
							},
							"src": "676:27:12"
						},
						{
							"errorSelector": "fb348942",
							"id": 1268,
							"name": "NoActiveStake",
							"nameLocation": "710:13:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1267,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "723:2:12"
							},
							"src": "704:22:12"
						},
						{
							"errorSelector": "90b8ec18",
							"id": 1270,
							"name": "TransferFailed",
							"nameLocation": "733:14:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1269,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "747:2:12"
							},
							"src": "727:23:12"
						},
						{
							"errorSelector": "aee0d0ae",
							"id": 1272,
							"name": "DurationAlreadyExists",
							"nameLocation": "757:21:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1271,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "778:2:12"
							},
							"src": "751:30:12"
						},
						{
							"errorSelector": "f4d678b8",
							"id": 1274,
							"name": "InsufficientBalance",
							"nameLocation": "788:19:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1273,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "807:2:12"
							},
							"src": "782:28:12"
						},
						{
							"errorSelector": "ffc9b52b",
							"id": 1276,
							"name": "CannotRecoverStakedTokens",
							"nameLocation": "817:25:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1275,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "842:2:12"
							},
							"src": "811:34:12"
						},
						{
							"errorSelector": "5bb01e5b",
							"id": 1278,
							"name": "MaxDurationsLimitReached",
							"nameLocation": "852:24:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1277,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "876:2:12"
							},
							"src": "846:33:12"
						},
						{
							"errorSelector": "b666aeb7",
							"id": 1282,
							"name": "DurationTooLong",
							"nameLocation": "886:15:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1281,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1280,
										"mutability": "mutable",
										"name": "maxAllowedDuration",
										"nameLocation": "910:18:12",
										"nodeType": "VariableDeclaration",
										"scope": 1282,
										"src": "902:26:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1279,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "902:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "901:28:12"
							},
							"src": "880:50:12"
						},
						{
							"errorSelector": "ea48ba2b",
							"id": 1284,
							"name": "InvalidStakingPlan",
							"nameLocation": "937:18:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1283,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "955:2:12"
							},
							"src": "931:27:12"
						},
						{
							"errorSelector": "d86ad9cf",
							"id": 1288,
							"name": "UnauthorizedCaller",
							"nameLocation": "965:18:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1287,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1286,
										"mutability": "mutable",
										"name": "caller",
										"nameLocation": "992:6:12",
										"nodeType": "VariableDeclaration",
										"scope": 1288,
										"src": "984:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1285,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "984:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "983:16:12"
							},
							"src": "959:41:12"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1290,
										"name": "AccessControl",
										"nameLocations": [
											"1232:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "1232:13:12"
									},
									"id": 1291,
									"nodeType": "InheritanceSpecifier",
									"src": "1232:13:12"
								},
								{
									"baseName": {
										"id": 1292,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1247:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 692,
										"src": "1247:15:12"
									},
									"id": 1293,
									"nodeType": "InheritanceSpecifier",
									"src": "1247:15:12"
								}
							],
							"canonicalName": "WallyStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1289,
								"nodeType": "StructuredDocumentation",
								"src": "1002:204:12",
								"text": " @title WallyStaking\n @dev Allows users to stake WallyToken for a predetermined duration\n to earn rewards at a fixed APY. Features multiple staking durations\n with corresponding APY rates."
							},
							"fullyImplemented": true,
							"id": 2597,
							"linearizedBaseContracts": [
								2597,
								692,
								454,
								1233,
								1245,
								537,
								1209
							],
							"name": "WallyStaking",
							"nameLocation": "1216:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1297,
									"libraryName": {
										"id": 1294,
										"name": "SafeERC20",
										"nameLocations": [
											"1275:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1179,
										"src": "1275:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1269:27:12",
									"typeName": {
										"id": 1296,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1295,
											"name": "IERC20",
											"nameLocations": [
												"1289:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 770,
											"src": "1289:6:12"
										},
										"referencedDeclaration": 770,
										"src": "1289:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$770",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 1302,
									"mutability": "constant",
									"name": "_ADMIN_ROLE",
									"nameLocation": "1340:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "1315:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1298,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1315:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1300,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1364:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1299,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1354:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1354:23:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1307,
									"mutability": "constant",
									"name": "_REWARDS_MANAGER_ROLE",
									"nameLocation": "1408:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "1383:82:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1303,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1383:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "524557415244535f4d414e414745525f524f4c45",
												"id": 1305,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1442:22:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b",
													"typeString": "literal_string \"REWARDS_MANAGER_ROLE\""
												},
												"value": "REWARDS_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b",
													"typeString": "literal_string \"REWARDS_MANAGER_ROLE\""
												}
											],
											"id": 1304,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1432:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1306,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1432:33:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 1315,
									"name": "Staked",
									"nameLocation": "1492:6:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1515:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1499:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1529:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1521:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1553:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1537:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:64:12"
									},
									"src": "1486:77:12"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 1323,
									"name": "Unstaked",
									"nameLocation": "1574:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1599:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1583:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedAmount",
												"nameLocation": "1613:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1605:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1635:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1627:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:66:12"
									},
									"src": "1568:81:12"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1329,
									"name": "RewardClaimed",
									"nameLocation": "1660:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1690:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1674:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1704:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1696:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:38:12"
									},
									"src": "1654:58:12"
								},
								{
									"anonymous": false,
									"eventSelector": "682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364",
									"id": 1335,
									"name": "StakingPlanAdded",
									"nameLocation": "1723:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1756:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1740:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"indexed": true,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1782:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1766:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:47:12"
									},
									"src": "1717:70:12"
								},
								{
									"anonymous": false,
									"eventSelector": "ad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff1",
									"id": 1341,
									"name": "StakingPlanUpdated",
									"nameLocation": "1798:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1833:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "1817:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1859:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "1843:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1816:47:12"
									},
									"src": "1792:72:12"
								},
								{
									"anonymous": false,
									"eventSelector": "f8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312",
									"id": 1345,
									"name": "RewardsAdded",
									"nameLocation": "1875:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1896:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1888:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:16:12"
									},
									"src": "1869:35:12"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 1351,
									"name": "EmergencyWithdraw",
									"nameLocation": "1915:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1949:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1933:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1963:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1955:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:38:12"
									},
									"src": "1909:62:12"
								},
								{
									"anonymous": false,
									"eventSelector": "3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c69",
									"id": 1355,
									"name": "StakingPaused",
									"nameLocation": "1982:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "2009:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1996:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1996:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:23:12"
									},
									"src": "1976:43:12"
								},
								{
									"anonymous": false,
									"eventSelector": "8619312ed4eff1cf9f0116e6db2f49d9570a86f0350d1c5ad1bd0f7b0cf9e132",
									"id": 1363,
									"name": "ERC20Recovered",
									"nameLocation": "2030:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2061:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2045:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2076:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2068:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2100:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2084:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:59:12"
									},
									"src": "2024:80:12"
								},
								{
									"canonicalName": "WallyStaking.StakingPlan",
									"id": 1368,
									"members": [
										{
											"constant": false,
											"id": 1365,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "2165:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "2160:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1364,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2160:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1367,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "2191:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "2183:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1366,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2183:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingPlan",
									"nameLocation": "2138:11:12",
									"nodeType": "StructDefinition",
									"scope": 2597,
									"src": "2131:123:12",
									"visibility": "public"
								},
								{
									"canonicalName": "WallyStaking.UserStakingData",
									"id": 1383,
									"members": [
										{
											"constant": false,
											"id": 1370,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "2358:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2350:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1369,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2350:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1372,
											"mutability": "mutable",
											"name": "stakingStartTime",
											"nameLocation": "2388:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2380:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1371,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2380:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1374,
											"mutability": "mutable",
											"name": "lastClaimTime",
											"nameLocation": "2422:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2414:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1373,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2414:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1376,
											"mutability": "mutable",
											"name": "stakingEndTime",
											"nameLocation": "2453:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2445:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2445:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1378,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "2485:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2477:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1377,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2477:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "2511:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2503:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1379,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2503:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "2529:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1383,
											"src": "2524:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1381,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2524:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakingData",
									"nameLocation": "2324:15:12",
									"nodeType": "StructDefinition",
									"scope": 2597,
									"src": "2317:227:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1386,
									"mutability": "immutable",
									"name": "_token",
									"nameLocation": "2598:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2573:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$770",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1385,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1384,
											"name": "IERC20",
											"nameLocations": [
												"2573:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 770,
											"src": "2573:6:12"
										},
										"referencedDeclaration": 770,
										"src": "2573:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$770",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1391,
									"mutability": "mutable",
									"name": "_stakingPlans",
									"nameLocation": "2664:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2610:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
										"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan)"
									},
									"typeName": {
										"id": 1390,
										"keyName": "duration",
										"keyNameLocation": "2626:8:12",
										"keyType": {
											"id": 1387,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2618:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2610:45:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
											"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan)"
										},
										"valueName": "plan",
										"valueNameLocation": "2650:4:12",
										"valueType": {
											"id": 1389,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1388,
												"name": "StakingPlan",
												"nameLocations": [
													"2638:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1368,
												"src": "2638:11:12"
											},
											"referencedDeclaration": 1368,
											"src": "2638:11:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
												"typeString": "struct WallyStaking.StakingPlan"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1396,
									"mutability": "mutable",
									"name": "_userStakingData",
									"nameLocation": "2765:16:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2711:70:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
										"typeString": "mapping(address => struct WallyStaking.UserStakingData)"
									},
									"typeName": {
										"id": 1395,
										"keyName": "user",
										"keyNameLocation": "2727:4:12",
										"keyType": {
											"id": 1392,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2719:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2711:45:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
											"typeString": "mapping(address => struct WallyStaking.UserStakingData)"
										},
										"valueName": "data",
										"valueNameLocation": "2751:4:12",
										"valueType": {
											"id": 1394,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1393,
												"name": "UserStakingData",
												"nameLocations": [
													"2735:15:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1383,
												"src": "2735:15:12"
											},
											"referencedDeclaration": 1383,
											"src": "2735:15:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
												"typeString": "struct WallyStaking.UserStakingData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1398,
									"mutability": "mutable",
									"name": "_totalStaked",
									"nameLocation": "2831:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2815:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1397,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2815:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1400,
									"mutability": "mutable",
									"name": "_rewardsPool",
									"nameLocation": "2865:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2849:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2849:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1402,
									"mutability": "mutable",
									"name": "_stakingPaused",
									"nameLocation": "2896:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2883:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1401,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2883:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1405,
									"mutability": "mutable",
									"name": "_availableDurations",
									"nameLocation": "2934:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "2916:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2916:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1404,
										"nodeType": "ArrayTypeName",
										"src": "2916:9:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1408,
									"mutability": "constant",
									"name": "_BASIS_POINTS",
									"nameLocation": "3040:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "3015:46:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3015:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3056:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1411,
									"mutability": "constant",
									"name": "_ONE_YEAR",
									"nameLocation": "3108:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "3083:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3083:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3120:8:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1414,
									"mutability": "constant",
									"name": "_MAX_DURATIONS",
									"nameLocation": "3159:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "3134:44:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3134:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1413,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3176:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1419,
									"mutability": "constant",
									"name": "_MAX_DURATION_LENGTH",
									"nameLocation": "3265:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 2597,
									"src": "3240:60:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3240:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_157680000_by_1",
											"typeString": "int_const 157680000"
										},
										"id": 1418,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35",
											"id": 1416,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3288:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "333635",
											"id": 1417,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3292:8:12",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_31536000_by_1",
												"typeString": "int_const 31536000"
											},
											"value": "365"
										},
										"src": "3288:12:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_157680000_by_1",
											"typeString": "int_const 157680000"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "3686:795:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1427,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "3700:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3724:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3716:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1428,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3716:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3716:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3700:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "3696:59:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1433,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "3735:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3735:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1435,
													"nodeType": "RevertStatement",
													"src": "3728:27:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1437,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "3769:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3793:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3785:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3785:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3785:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3769:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "3765:59:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1443,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "3804:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3804:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1445,
													"nodeType": "RevertStatement",
													"src": "3797:27:12"
												}
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1447,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "3835:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$770",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1449,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "3851:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1448,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3844:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$770_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3844:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$770",
															"typeString": "contract IERC20"
														}
													},
													"src": "3835:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "3835:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1454,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3917:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1455,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "3937:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1453,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3906:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3906:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "3906:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "3971:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1460,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "3984:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1458,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3960:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3960:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "3960:37:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1464,
															"name": "_REWARDS_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "4018:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1465,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4041:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1463,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "4007:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "4007:47:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1469,
															"name": "_REWARDS_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "4143:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1470,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "4166:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1468,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "4129:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "4129:49:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3930",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4267:7:12",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														{
															"hexValue": "353030",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4276:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															{
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															}
														],
														"id": 1473,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "4251:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4251:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "4251:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313830",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4330:8:12",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															"value": "180"
														},
														{
															"hexValue": "383030",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4340:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_800_by_1",
																"typeString": "int_const 800"
															},
															"value": "800"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															{
																"typeIdentifier": "t_rational_800_by_1",
																"typeString": "int_const 800"
															}
														],
														"id": 1478,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "4314:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4314:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "4314:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "333635",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4393:8:12",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "31323030",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4403:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1200_by_1",
																"typeString": "int_const 1200"
															},
															"value": "1200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_rational_1200_by_1",
																"typeString": "int_const 1200"
															}
														],
														"id": 1483,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "4377:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4377:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "4377:31:12"
											},
											{
												"expression": {
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1488,
														"name": "_stakingPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "4452:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4469:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4452:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "4452:22:12"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "3341:276:12",
										"text": " @dev Constructor sets up the initial contract state\n @param tokenAddress Address of the WallyToken contract\n @param adminAddress Address of the admin who will manage the contract\n Note: Constructor is marked as payable for gas optimization"
									},
									"id": 1493,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3642:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "3634:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "adminAddress",
												"nameLocation": "3664:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "3656:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3633:44:12"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3686:0:12"
									},
									"scope": 2597,
									"src": "3622:859:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "4810:316:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1506,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "4867:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1507,
														"name": "_MAX_DURATION_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "4878:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4867:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "4863:81:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1510,
																"name": "_MAX_DURATION_LENGTH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "4923:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1509,
															"name": "DurationTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "4907:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4907:37:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1512,
													"nodeType": "RevertStatement",
													"src": "4900:44:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1514,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "5027:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1515,
														"name": "_BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "5033:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5027:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "5023:47:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1517,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5055:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5055:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1519,
													"nodeType": "RevertStatement",
													"src": "5048:22:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1522,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "5105:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1523,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "5115:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1521,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "5089:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5089:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "5089:30:12"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "4487:187:12",
										"text": " @dev Adds a staking plan with a specific duration and APR\n @param duration Duration in seconds\n @param apr Annual percentage rate in basis points (100 = 1%)"
									},
									"functionSelector": "5ef23fa9",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1500,
												"name": "nonReentrant",
												"nameLocations": [
													"4761:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "4761:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4761:12:12"
										},
										{
											"arguments": [
												{
													"id": 1503,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1302,
													"src": "4792:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "onlyRole",
												"nameLocations": [
													"4783:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "4783:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4783:21:12"
										}
									],
									"name": "addStakingPlan",
									"nameLocation": "4688:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4711:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4703:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "4729:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4721:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4702:31:12"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4810:0:12"
									},
									"scope": 2597,
									"src": "4679:447:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "5507:969:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1542,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "5581:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1543,
														"name": "_BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "5587:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5581:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"nodeType": "IfStatement",
												"src": "5577:47:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1545,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5609:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5609:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1547,
													"nodeType": "RevertStatement",
													"src": "5602:22:12"
												}
											},
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "found",
														"nameLocation": "5684:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1624,
														"src": "5679:10:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1549,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5679:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5692:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:18:12"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "durationsLength",
														"nameLocation": "5781:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 1624,
														"src": "5773:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5773:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"expression": {
														"id": 1555,
														"name": "_availableDurations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "5799:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5819:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5799:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5773:52:12"
											},
											{
												"body": {
													"id": 1580,
													"nodeType": "Block",
													"src": "5881:193:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1568,
																		"name": "_availableDurations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "5960:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1570,
																	"indexExpression": {
																		"id": 1569,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "5980:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5960:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1571,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "5986:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5960:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1579,
															"nodeType": "IfStatement",
															"src": "5956:108:12",
															"trueBody": {
																"id": 1578,
																"nodeType": "Block",
																"src": "5996:68:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1573,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "6014:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6022:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "6014:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1576,
																		"nodeType": "ExpressionStatement",
																		"src": "6014:12:12"
																	},
																	{
																		"id": 1577,
																		"nodeType": "Break",
																		"src": "6044:5:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1562,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "5855:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1563,
														"name": "durationsLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "5859:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5855:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1581,
												"initializationExpression": {
													"assignments": [
														1559
													],
													"declarations": [
														{
															"constant": false,
															"id": 1559,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5848:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1581,
															"src": "5840:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1558,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1561,
													"initialValue": {
														"hexValue": "30",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5852:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5840:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5876:3:12",
														"subExpression": {
															"id": 1565,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "5878:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1567,
													"nodeType": "ExpressionStatement",
													"src": "5876:3:12"
												},
												"nodeType": "ForStatement",
												"src": "5835:239:12"
											},
											{
												"condition": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6087:6:12",
													"subExpression": {
														"id": 1582,
														"name": "found",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "6088:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1587,
												"nodeType": "IfStatement",
												"src": "6083:36:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1584,
															"name": "InvalidDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "6102:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6102:17:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1586,
													"nodeType": "RevertStatement",
													"src": "6095:24:12"
												}
											},
											{
												"assignments": [
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "6215:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1624,
														"src": "6195:24:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 1589,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1588,
																"name": "StakingPlan",
																"nameLocations": [
																	"6195:11:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1368,
																"src": "6195:11:12"
															},
															"referencedDeclaration": 1368,
															"src": "6195:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"baseExpression": {
														"id": 1591,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "6222:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 1593,
													"indexExpression": {
														"id": 1592,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "6236:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6222:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1368_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6195:50:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1595,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "6259:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6264:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1367,
														"src": "6259:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1597,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "6271:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6259:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1606,
												"nodeType": "IfStatement",
												"src": "6255:60:12",
												"trueBody": {
													"id": 1605,
													"nodeType": "Block",
													"src": "6276:39:12",
													"statements": [
														{
															"expression": {
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1599,
																		"name": "plan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "6290:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																			"typeString": "struct WallyStaking.StakingPlan storage pointer"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6295:3:12",
																	"memberName": "apr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1367,
																	"src": "6290:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1602,
																	"name": "apr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "6301:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6290:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1604,
															"nodeType": "ExpressionStatement",
															"src": "6290:14:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1607,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "6337:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6342:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1365,
														"src": "6337:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1609,
														"name": "isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "6354:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6337:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "6333:80:12",
												"trueBody": {
													"id": 1617,
													"nodeType": "Block",
													"src": "6364:49:12",
													"statements": [
														{
															"expression": {
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1611,
																		"name": "plan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "6378:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																			"typeString": "struct WallyStaking.StakingPlan storage pointer"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6383:8:12",
																	"memberName": "isActive",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1365,
																	"src": "6378:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1614,
																	"name": "isActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "6394:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6378:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "6378:24:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1620,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "6455:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1621,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6465:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"name": "StakingPlanUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "6436:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "EmitStatement",
												"src": "6431:38:12"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "5132:221:12",
										"text": " @dev Updates an existing staking plan\n @param duration Duration of the plan to update\n @param apr New annual percentage rate in basis points\n @param isActive Whether the plan is active"
									},
									"functionSelector": "aea1b6ef",
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1536,
												"name": "nonReentrant",
												"nameLocations": [
													"5458:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "5458:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5458:12:12"
										},
										{
											"arguments": [
												{
													"id": 1539,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1302,
													"src": "5489:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "onlyRole",
												"nameLocations": [
													"5480:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "5480:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5480:21:12"
										}
									],
									"name": "updateStakingPlan",
									"nameLocation": "5367:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "5393:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5385:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5385:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "5411:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5403:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "5421:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5416:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5416:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5384:46:12"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5507:0:12"
									},
									"scope": 2597,
									"src": "5358:1118:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "6706:297:12",
										"statements": [
											{
												"assignments": [
													1637
												],
												"declarations": [
													{
														"constant": false,
														"id": 1637,
														"mutability": "mutable",
														"name": "stakingPaused",
														"nameLocation": "6755:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1653,
														"src": "6750:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1636,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6750:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"initialValue": {
													"id": 1638,
													"name": "_stakingPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1402,
													"src": "6771:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6750:35:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1640,
														"name": "stakingPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "6884:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1641,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "6901:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6884:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "6880:117:12",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "6909:88:12",
													"statements": [
														{
															"expression": {
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1643,
																	"name": "_stakingPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "6923:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1644,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "6940:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6923:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1646,
															"nodeType": "ExpressionStatement",
															"src": "6923:23:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "paused",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "6979:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1647,
																	"name": "StakingPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6965:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
																		"typeString": "function (bool)"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6965:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "EmitStatement",
															"src": "6960:26:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "6482:104:12",
										"text": " @dev Pauses or unpauses staking\n @param paused Whether staking should be paused"
									},
									"functionSelector": "15b31bbb",
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1630,
												"name": "nonReentrant",
												"nameLocations": [
													"6657:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "6657:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6657:12:12"
										},
										{
											"arguments": [
												{
													"id": 1633,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1302,
													"src": "6688:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1634,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1632,
												"name": "onlyRole",
												"nameLocations": [
													"6679:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "6679:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6679:21:12"
										}
									],
									"name": "setStakingPaused",
									"nameLocation": "6600:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "6622:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "6617:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6617:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6616:13:12"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6706:0:12"
									},
									"scope": 2597,
									"src": "6591:412:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "7236:688:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1665,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "7250:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7260:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7250:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1671,
												"nodeType": "IfStatement",
												"src": "7246:39:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1668,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "7270:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7270:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1670,
													"nodeType": "RevertStatement",
													"src": "7263:22:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1674,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7373:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7377:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7373:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1672,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "7356:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7363:9:12",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 727,
															"src": "7356:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7356:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1677,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "7387:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7356:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "7352:71:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1679,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "7402:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7402:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1681,
													"nodeType": "RevertStatement",
													"src": "7395:28:12"
												}
											},
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "7499:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "7491:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1683,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7491:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1689,
												"initialValue": {
													"arguments": [
														{
															"id": 1687,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "7514:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyStaking_$2597",
																"typeString": "contract WallyStaking"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyStaking_$2597",
																"typeString": "contract WallyStaking"
															}
														],
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7506:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1685,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7506:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7506:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7491:28:12"
											},
											{
												"assignments": [
													1691
												],
												"declarations": [
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "rewardsPool",
														"nameLocation": "7605:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "7597:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7597:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"id": 1692,
													"name": "_rewardsPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "7619:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7597:34:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7725:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7729:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7725:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "7737:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "7743:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1694,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "7701:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7708:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 842,
														"src": "7701:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7701:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "7701:49:12"
											},
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1703,
														"name": "_rewardsPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "7838:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1704,
															"name": "rewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "7853:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1705,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "7867:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7853:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7838:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "7838:35:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1710,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "7910:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1709,
														"name": "RewardsAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "7897:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7897:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "EmitStatement",
												"src": "7892:25:12"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "7009:100:12",
										"text": " @dev Adds tokens to the rewards pool\n @param amount Amount of tokens to add"
									},
									"functionSelector": "beceed39",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1659,
												"name": "nonReentrant",
												"nameLocations": [
													"7177:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "7177:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7177:12:12"
										},
										{
											"arguments": [
												{
													"id": 1662,
													"name": "_REWARDS_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "7208:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1661,
												"name": "onlyRole",
												"nameLocations": [
													"7199:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "7199:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7199:31:12"
										}
									],
									"name": "addRewards",
									"nameLocation": "7123:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7142:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "7134:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7134:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7133:16:12"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7236:0:12"
									},
									"scope": 2597,
									"src": "7114:810:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "8175:2240:12",
										"statements": [
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "stakingPaused",
														"nameLocation": "8250:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "8245:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1724,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8245:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"initialValue": {
													"id": 1726,
													"name": "_stakingPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1402,
													"src": "8266:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8245:35:12"
											},
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "totalStaked",
														"nameLocation": "8298:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "8290:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8290:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"id": 1730,
													"name": "_totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1398,
													"src": "8312:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8290:34:12"
											},
											{
												"condition": {
													"id": 1732,
													"name": "stakingPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1725,
													"src": "8361:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1736,
												"nodeType": "IfStatement",
												"src": "8357:44:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1733,
															"name": "StakingNotActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "8383:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8383:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1735,
													"nodeType": "RevertStatement",
													"src": "8376:25:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1737,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "8415:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8425:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8415:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1743,
												"nodeType": "IfStatement",
												"src": "8411:39:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1740,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "8435:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1742,
													"nodeType": "RevertStatement",
													"src": "8428:22:12"
												}
											},
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "8542:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "8522:24:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 1745,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1744,
																"name": "StakingPlan",
																"nameLocations": [
																	"8522:11:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1368,
																"src": "8522:11:12"
															},
															"referencedDeclaration": 1368,
															"src": "8522:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"id": 1747,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "8549:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 1749,
													"indexExpression": {
														"id": 1748,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "8563:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8549:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1368_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8522:50:12"
											},
											{
												"condition": {
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8586:14:12",
													"subExpression": {
														"expression": {
															"id": 1751,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "8587:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8592:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1365,
														"src": "8587:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1757,
												"nodeType": "IfStatement",
												"src": "8582:47:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1754,
															"name": "InvalidStakingPlan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "8609:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8609:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1756,
													"nodeType": "RevertStatement",
													"src": "8602:27:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1760,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8717:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8721:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8717:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1758,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "8700:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8707:9:12",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 727,
															"src": "8700:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8700:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1763,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "8731:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8700:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"nodeType": "IfStatement",
												"src": "8696:71:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1765,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "8746:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8746:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1767,
													"nodeType": "RevertStatement",
													"src": "8739:28:12"
												}
											},
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "8845:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "8837:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1769,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8837:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"arguments": [
														{
															"id": 1773,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "8860:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyStaking_$2597",
																"typeString": "contract WallyStaking"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyStaking_$2597",
																"typeString": "contract WallyStaking"
															}
														],
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8852:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1771,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8852:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8852:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8837:28:12"
											},
											{
												"assignments": [
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "8883:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "8875:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8875:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1780,
												"initialValue": {
													"expression": {
														"id": 1778,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "8897:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8903:9:12",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "8897:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8875:37:12"
											},
											{
												"assignments": [
													1783
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "9000:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "8976:32:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1782,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1781,
																"name": "UserStakingData",
																"nameLocations": [
																	"8976:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1383,
																"src": "8976:15:12"
															},
															"referencedDeclaration": 1383,
															"src": "8976:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"baseExpression": {
														"id": 1784,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "9011:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1787,
													"indexExpression": {
														"expression": {
															"id": 1785,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9028:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9032:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9028:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9011:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1383_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8976:63:12"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "isUserStakeActive",
														"nameLocation": "9054:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "9049:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1789,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9049:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1793,
												"initialValue": {
													"expression": {
														"id": 1791,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "9074:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData storage pointer"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9083:8:12",
													"memberName": "isActive",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1382,
													"src": "9074:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9049:42:12"
											},
											{
												"condition": {
													"id": 1794,
													"name": "isUserStakeActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1790,
													"src": "9196:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1828,
												"nodeType": "IfStatement",
												"src": "9192:392:12",
												"trueBody": {
													"id": 1827,
													"nodeType": "Block",
													"src": "9215:369:12",
													"statements": [
														{
															"assignments": [
																1796
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1796,
																	"mutability": "mutable",
																	"name": "stakingStartTime",
																	"nameLocation": "9237:16:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1827,
																	"src": "9229:24:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1795,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9229:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1799,
															"initialValue": {
																"expression": {
																	"id": 1797,
																	"name": "userData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "9256:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																		"typeString": "struct WallyStaking.UserStakingData storage pointer"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9265:16:12",
																"memberName": "stakingStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1372,
																"src": "9256:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9229:52:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1800,
																		"name": "stakingStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "9299:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9299:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1803,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "9324:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1804,
																		"name": "stakingStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "9339:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9324:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9299:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1826,
															"nodeType": "IfStatement",
															"src": "9295:279:12",
															"trueBody": {
																"id": 1825,
																"nodeType": "Block",
																"src": "9357:217:12",
																"statements": [
																	{
																		"assignments": [
																			1808
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1808,
																				"mutability": "mutable",
																				"name": "pendingRewards",
																				"nameLocation": "9383:14:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 1825,
																				"src": "9375:22:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1807,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9375:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1813,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1810,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "9424:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9428:6:12",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "9424:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1809,
																				"name": "calculatePendingRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2326,
																				"src": "9400:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9400:35:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9375:60:12"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1814,
																				"name": "pendingRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1808,
																				"src": "9457:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9475:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9457:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1824,
																		"nodeType": "IfStatement",
																		"src": "9453:107:12",
																		"trueBody": {
																			"id": 1823,
																			"nodeType": "Block",
																			"src": "9478:82:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1818,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "9514:3:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1819,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9518:6:12",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "9514:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1820,
																								"name": "pendingRewards",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1808,
																								"src": "9526:14:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1817,
																							"name": "_claimRewards",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2596,
																							"src": "9500:13:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 1821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9500:41:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1822,
																					"nodeType": "ExpressionStatement",
																					"src": "9500:41:12"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1830
												],
												"declarations": [
													{
														"constant": false,
														"id": 1830,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "9643:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "9635:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1829,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1831,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "9656:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1832,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "9670:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9656:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1838,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9818:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9822:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9818:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1840,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "9830:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1841,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "9836:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1835,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "9794:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9801:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 842,
														"src": "9794:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9794:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "9794:49:12"
											},
											{
												"expression": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1844,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "9956:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9965:12:12",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1370,
														"src": "9956:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1847,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "9980:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9956:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "9956:30:12"
											},
											{
												"expression": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1850,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "9996:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10005:16:12",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "9996:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1853,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "10024:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9996:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "9996:39:12"
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1856,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "10045:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10054:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "10045:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1859,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "10071:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10045:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "10045:36:12"
											},
											{
												"expression": {
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1862,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "10091:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10100:8:12",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1378,
														"src": "10091:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1865,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "10111:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10091:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "10091:28:12"
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1868,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "10129:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10138:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "10129:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1871,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "10144:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10149:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1367,
														"src": "10144:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10129:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "10129:23:12"
											},
											{
												"expression": {
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1875,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "10162:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10171:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "10162:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10182:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10162:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "10162:24:12"
											},
											{
												"expression": {
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1881,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "10196:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10205:13:12",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "10196:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1884,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "10221:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10196:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "10196:36:12"
											},
											{
												"expression": {
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1887,
														"name": "_totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "10313:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1888,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "10328:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "10342:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10328:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10313:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "10313:35:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1894,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10379:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10383:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10379:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "10391:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1897,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "10399:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1893,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "10372:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10372:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1899,
												"nodeType": "EmitStatement",
												"src": "10367:41:12"
											}
										]
									},
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "7930:146:12",
										"text": " @dev Allows a user to stake tokens\n @param amount Amount to stake\n @param duration Duration in seconds to stake for"
									},
									"functionSelector": "7b0472f0",
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1721,
												"name": "nonReentrant",
												"nameLocations": [
													"8157:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "8157:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8157:12:12"
										}
									],
									"name": "stake",
									"nameLocation": "8090:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8104:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "8096:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8096:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "8120:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "8112:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8112:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8095:34:12"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8175:0:12"
									},
									"scope": 2597,
									"src": "8081:2334:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "10573:1210:12",
										"statements": [
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "10607:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "10583:32:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1908,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1907,
																"name": "UserStakingData",
																"nameLocations": [
																	"10583:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1383,
																"src": "10583:15:12"
															},
															"referencedDeclaration": 1383,
															"src": "10583:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1914,
												"initialValue": {
													"baseExpression": {
														"id": 1910,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "10618:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1913,
													"indexExpression": {
														"expression": {
															"id": 1911,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10635:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10639:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10635:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10618:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1383_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10583:63:12"
											},
											{
												"condition": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10692:18:12",
													"subExpression": {
														"expression": {
															"id": 1915,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "10693:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10702:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "10693:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1921,
												"nodeType": "IfStatement",
												"src": "10688:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1918,
															"name": "NoActiveStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "10719:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10719:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1920,
													"nodeType": "RevertStatement",
													"src": "10712:22:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1922,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10748:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10754:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10748:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1924,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "10767:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10776:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "10767:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10748:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "10744:75:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1927,
															"name": "StakingStillLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "10799:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10799:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1929,
													"nodeType": "RevertStatement",
													"src": "10792:27:12"
												}
											},
											{
												"assignments": [
													1932
												],
												"declarations": [
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "totalStaked",
														"nameLocation": "10880:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "10872:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1931,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10872:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"id": 1933,
													"name": "_totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1398,
													"src": "10894:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10872:34:12"
											},
											{
												"assignments": [
													1936
												],
												"declarations": [
													{
														"constant": false,
														"id": 1936,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "10933:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "10925:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10925:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"expression": {
														"id": 1937,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "10948:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData storage pointer"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10957:12:12",
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1370,
													"src": "10948:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10925:44:12"
											},
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "pendingRewards",
														"nameLocation": "10987:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "10979:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10979:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1946,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1943,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11028:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11032:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11028:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1942,
														"name": "calculatePendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "11004:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10979:60:12"
											},
											{
												"expression": {
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1947,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11085:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11094:12:12",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1370,
														"src": "11085:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11109:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11085:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "11085:25:12"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1953,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11120:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11129:16:12",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "11120:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11148:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11120:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "11120:29:12"
											},
											{
												"expression": {
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1959,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11159:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11168:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "11159:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11185:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11159:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "11159:27:12"
											},
											{
												"expression": {
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1965,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11196:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11205:8:12",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1378,
														"src": "11196:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11216:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11196:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "11196:21:12"
											},
											{
												"expression": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1971,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11227:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11236:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "11227:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11242:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11227:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "11227:16:12"
											},
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1977,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11253:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11262:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "11253:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11273:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11253:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "11253:25:12"
											},
											{
												"expression": {
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1983,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11288:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11297:13:12",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "11288:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11313:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11288:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "11288:26:12"
											},
											{
												"expression": {
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1989,
														"name": "_totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "11413:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1990,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "11428:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1991,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "11442:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11428:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11413:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "11413:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11533:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11537:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11533:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2000,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "11545:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1995,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "11513:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11520:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "11513:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "11513:45:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "pendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "11616:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11634:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11616:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2013,
												"nodeType": "IfStatement",
												"src": "11612:91:12",
												"trueBody": {
													"id": 2012,
													"nodeType": "Block",
													"src": "11637:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2007,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11665:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11669:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11665:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2009,
																		"name": "pendingRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "11677:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2006,
																	"name": "_claimRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "11651:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11651:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2011,
															"nodeType": "ExpressionStatement",
															"src": "11651:41:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11735:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11739:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11735:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "11747:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2018,
															"name": "pendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "11761:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2014,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "11726:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11726:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "EmitStatement",
												"src": "11721:55:12"
											}
										]
									},
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "10421:83:12",
										"text": " @dev Allows a user to unstake their tokens after the lock period"
									},
									"functionSelector": "2def6620",
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1905,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1904,
												"name": "nonReentrant",
												"nameLocations": [
													"10555:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "10555:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10555:12:12"
										}
									],
									"name": "unstake",
									"nameLocation": "10518:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10525:2:12"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10573:0:12"
									},
									"scope": 2597,
									"src": "10509:1274:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "11934:490:12",
										"statements": [
											{
												"assignments": [
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "11968:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "11944:32:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 2029,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2028,
																"name": "UserStakingData",
																"nameLocations": [
																	"11944:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1383,
																"src": "11944:15:12"
															},
															"referencedDeclaration": 1383,
															"src": "11944:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"initialValue": {
													"baseExpression": {
														"id": 2031,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "11979:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 2034,
													"indexExpression": {
														"expression": {
															"id": 2032,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11996:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12000:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11996:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11979:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1383_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11944:63:12"
											},
											{
												"condition": {
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12053:18:12",
													"subExpression": {
														"expression": {
															"id": 2036,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "12054:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12063:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "12054:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2042,
												"nodeType": "IfStatement",
												"src": "12049:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2039,
															"name": "NoActiveStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "12080:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12080:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2041,
													"nodeType": "RevertStatement",
													"src": "12073:22:12"
												}
											},
											{
												"assignments": [
													2044
												],
												"declarations": [
													{
														"constant": false,
														"id": 2044,
														"mutability": "mutable",
														"name": "pendingRewards",
														"nameLocation": "12122:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "12114:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12114:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12163:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12167:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12163:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2045,
														"name": "calculatePendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "12139:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12139:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12114:60:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2050,
														"name": "pendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "12188:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12206:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12188:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "12184:52:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2053,
															"name": "NoRewardsAvailable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "12216:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12216:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2055,
													"nodeType": "RevertStatement",
													"src": "12209:27:12"
												}
											},
											{
												"expression": {
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2057,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "12289:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12298:13:12",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "12289:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2060,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12314:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12320:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12314:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12289:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "12289:40:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12390:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12394:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12390:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2067,
															"name": "pendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "12402:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2064,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "12376:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12376:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "12376:41:12"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "11789:71:12",
										"text": " @dev Allows users to claim rewards without unstaking"
									},
									"functionSelector": "372500ab",
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2025,
												"name": "nonReentrant",
												"nameLocations": [
													"11916:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "11916:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "11916:12:12"
										}
									],
									"name": "claimRewards",
									"nameLocation": "11874:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11886:2:12"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11934:0:12"
									},
									"scope": 2597,
									"src": "11865:559:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2175,
										"nodeType": "Block",
										"src": "12730:951:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2082,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "12744:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12760:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12752:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2083,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12752:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12752:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12744:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"nodeType": "IfStatement",
												"src": "12740:51:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2088,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "12771:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12771:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2090,
													"nodeType": "RevertStatement",
													"src": "12764:27:12"
												}
											},
											{
												"assignments": [
													2094
												],
												"declarations": [
													{
														"constant": false,
														"id": 2094,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "12834:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2175,
														"src": "12810:32:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 2093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2092,
																"name": "UserStakingData",
																"nameLocations": [
																	"12810:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1383,
																"src": "12810:15:12"
															},
															"referencedDeclaration": 1383,
															"src": "12810:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2098,
												"initialValue": {
													"baseExpression": {
														"id": 2095,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "12845:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 2097,
													"indexExpression": {
														"id": 2096,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "12862:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12845:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1383_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12810:57:12"
											},
											{
												"condition": {
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12913:18:12",
													"subExpression": {
														"expression": {
															"id": 2099,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "12914:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12923:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "12914:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "12909:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2102,
															"name": "NoActiveStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "12940:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12940:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2104,
													"nodeType": "RevertStatement",
													"src": "12933:22:12"
												}
											},
											{
												"assignments": [
													2107
												],
												"declarations": [
													{
														"constant": false,
														"id": 2107,
														"mutability": "mutable",
														"name": "totalStaked",
														"nameLocation": "13016:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2175,
														"src": "13008:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13008:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"id": 2108,
													"name": "_totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1398,
													"src": "13030:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13008:34:12"
											},
											{
												"assignments": [
													2111
												],
												"declarations": [
													{
														"constant": false,
														"id": 2111,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "13069:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2175,
														"src": "13061:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13061:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2114,
												"initialValue": {
													"expression": {
														"id": 2112,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "13084:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData storage pointer"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13093:12:12",
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1370,
													"src": "13084:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13061:44:12"
											},
											{
												"expression": {
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2115,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13195:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13204:12:12",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1370,
														"src": "13195:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13219:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13195:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "13195:25:12"
											},
											{
												"expression": {
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2121,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13230:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13239:16:12",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "13230:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13258:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13230:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "13230:29:12"
											},
											{
												"expression": {
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2127,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13269:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13278:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "13269:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13295:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13269:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "13269:27:12"
											},
											{
												"expression": {
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2133,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13306:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13315:8:12",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1378,
														"src": "13306:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13326:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13306:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2138,
												"nodeType": "ExpressionStatement",
												"src": "13306:21:12"
											},
											{
												"expression": {
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2139,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13337:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13346:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "13337:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13352:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13337:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "13337:16:12"
											},
											{
												"expression": {
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2145,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13363:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13372:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "13363:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13383:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13363:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2150,
												"nodeType": "ExpressionStatement",
												"src": "13363:25:12"
											},
											{
												"expression": {
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2151,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "13398:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13407:13:12",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "13398:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13423:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13398:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2156,
												"nodeType": "ExpressionStatement",
												"src": "13398:26:12"
											},
											{
												"expression": {
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2157,
														"name": "_totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "13474:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2158,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "13489:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2159,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "13503:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13489:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13474:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "13474:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2166,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "13594:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2167,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "13600:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2163,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "13574:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13581:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "13574:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13574:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "13574:39:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2171,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "13655:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2172,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "13661:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2170,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "13637:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13637:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "EmitStatement",
												"src": "13632:42:12"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "12430:179:12",
										"text": " @dev Emergency withdraw function in case of critical issues\n Note: This doesn't calculate or distribute rewards\n @notice Only callable by admin role"
									},
									"functionSelector": "6ff1c9bc",
									"id": 2176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2076,
												"name": "nonReentrant",
												"nameLocations": [
													"12682:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "12682:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12682:12:12"
										},
										{
											"arguments": [
												{
													"id": 2079,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1302,
													"src": "12713:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2080,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2078,
												"name": "onlyRole",
												"nameLocations": [
													"12704:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "12704:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12704:21:12"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "12623:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12649:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "12641:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12641:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12640:14:12"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12730:0:12"
									},
									"scope": 2597,
									"src": "12614:1067:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "14046:640:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2189,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "14089:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14113:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2190,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14105:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14105:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14089:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2198,
												"nodeType": "IfStatement",
												"src": "14085:59:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2195,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "14124:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14124:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2197,
													"nodeType": "RevertStatement",
													"src": "14117:27:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2199,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "14158:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14168:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14158:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2205,
												"nodeType": "IfStatement",
												"src": "14154:39:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2202,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "14178:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14178:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2204,
													"nodeType": "RevertStatement",
													"src": "14171:22:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2206,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "14273:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 2209,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "14297:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14289:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2207,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14289:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14289:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14273:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2215,
												"nodeType": "IfStatement",
												"src": "14269:71:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2212,
															"name": "CannotRecoverStakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "14313:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14313:27:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2214,
													"nodeType": "RevertStatement",
													"src": "14306:34:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2222,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "14452:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WallyStaking_$2597",
																			"typeString": "contract WallyStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WallyStaking_$2597",
																			"typeString": "contract WallyStaking"
																		}
																	],
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14444:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2220,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14444:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14444:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2217,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2179,
																		"src": "14420:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2216,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "14413:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$770_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14413:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14434:9:12",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 727,
															"src": "14413:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14413:45:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2225,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "14461:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14413:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2230,
												"nodeType": "IfStatement",
												"src": "14409:88:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2227,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "14476:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14476:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2229,
													"nodeType": "RevertStatement",
													"src": "14469:28:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14588:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14592:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14588:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2237,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "14600:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2232,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "14561:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2231,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "14554:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$770_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14554:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14575:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "14554:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14554:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2239,
												"nodeType": "ExpressionStatement",
												"src": "14554:53:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2241,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "14646:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2242,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "14660:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2243,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14668:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14672:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14668:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2240,
														"name": "ERC20Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "14631:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14631:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "EmitStatement",
												"src": "14626:53:12"
											}
										]
									},
									"documentation": {
										"id": 2177,
										"nodeType": "StructuredDocumentation",
										"src": "13687:219:12",
										"text": " @dev Recover ERC20 tokens accidentally sent to the contract\n @param tokenAddress Address of the token to recover\n @param amount Amount to recover\n @notice Only callable by admin role"
									},
									"functionSelector": "8980f11f",
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2183,
												"name": "nonReentrant",
												"nameLocations": [
													"13998:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "13998:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "13998:12:12"
										},
										{
											"arguments": [
												{
													"id": 2186,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1302,
													"src": "14029:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2185,
												"name": "onlyRole",
												"nameLocations": [
													"14020:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "14020:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "14020:21:12"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "13920:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "13941:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "13933:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13933:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13963:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "13955:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13932:38:12"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14046:0:12"
									},
									"scope": 2597,
									"src": "13911:775:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "14951:1231:12",
										"statements": [
											{
												"assignments": [
													2258
												],
												"declarations": [
													{
														"constant": false,
														"id": 2258,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "14985:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "14961:32:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 2257,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2256,
																"name": "UserStakingData",
																"nameLocations": [
																	"14961:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1383,
																"src": "14961:15:12"
															},
															"referencedDeclaration": 1383,
															"src": "14961:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2262,
												"initialValue": {
													"baseExpression": {
														"id": 2259,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "14996:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 2261,
													"indexExpression": {
														"id": 2260,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "15013:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14996:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1383_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14961:57:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15041:18:12",
														"subExpression": {
															"expression": {
																"id": 2263,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "15042:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15051:8:12",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1382,
															"src": "15042:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2266,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "15063:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15072:12:12",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1370,
															"src": "15063:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15088:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15063:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15041:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2274,
												"nodeType": "IfStatement",
												"src": "15037:87:12",
												"trueBody": {
													"id": 2273,
													"nodeType": "Block",
													"src": "15091:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15112:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2255,
															"id": 2272,
															"nodeType": "Return",
															"src": "15105:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "endTime",
														"nameLocation": "15327:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "15319:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15319:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2279,
												"initialValue": {
													"expression": {
														"id": 2277,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "15337:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15343:9:12",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "15337:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15319:33:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2280,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "15366:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 2281,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "15377:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15386:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "15377:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15366:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2290,
												"nodeType": "IfStatement",
												"src": "15362:98:12",
												"trueBody": {
													"id": 2289,
													"nodeType": "Block",
													"src": "15402:58:12",
													"statements": [
														{
															"expression": {
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2284,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "15416:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2285,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2258,
																		"src": "15426:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																			"typeString": "struct WallyStaking.UserStakingData storage pointer"
																		}
																	},
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15435:14:12",
																	"memberName": "stakingEndTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1376,
																	"src": "15426:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15416:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2288,
															"nodeType": "ExpressionStatement",
															"src": "15416:33:12"
														}
													]
												}
											},
											{
												"assignments": [
													2292
												],
												"declarations": [
													{
														"constant": false,
														"id": 2292,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "15486:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "15478:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15478:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2297,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2293,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "15500:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2294,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "15510:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15519:13:12",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "15510:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15500:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15478:54:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2298,
														"name": "timeElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "15546:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15561:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15546:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "15542:55:12",
												"trueBody": {
													"id": 2303,
													"nodeType": "Block",
													"src": "15564:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15585:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2255,
															"id": 2302,
															"nodeType": "Return",
															"src": "15578:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2306
												],
												"declarations": [
													{
														"constant": false,
														"id": 2306,
														"mutability": "mutable",
														"name": "stakedAmountTimeApr",
														"nameLocation": "15743:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "15735:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15735:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2315,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2309,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "15807:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15816:12:12",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1370,
															"src": "15807:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2311,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "15843:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15852:3:12",
															"memberName": "apr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1380,
															"src": "15843:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2313,
															"name": "_BASIS_POINTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "15870:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2307,
															"name": "FixedPointMathLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "15765:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$158_$",
																"typeString": "type(library FixedPointMathLib)"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15783:10:12",
														"memberName": "mulDivDown",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "15765:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15765:128:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15735:158:12"
											},
											{
												"expression": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2316,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "15975:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2319,
																"name": "stakedAmountTimeApr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "16027:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2320,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "16060:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2321,
																"name": "_ONE_YEAR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "16085:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2317,
																"name": "FixedPointMathLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "15985:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$158_$",
																	"typeString": "type(library FixedPointMathLib)"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16003:10:12",
															"memberName": "mulDivDown",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 89,
															"src": "15985:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15985:119:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15975:129:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "15975:129:12"
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "14692:137:12",
										"text": " @dev Calculates pending rewards for a user\n @param user Address of the user\n @return rewards Reward amount"
									},
									"functionSelector": "097aad10",
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePendingRewards",
									"nameLocation": "14843:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14875:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "14867:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14866:14:12"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "14937:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "14929:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14929:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14928:17:12"
									},
									"scope": 2597,
									"src": "14834:1348:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "WallyStaking.UserStakingInfo",
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "16188:131:12",
										"text": " @dev Get user staking information\n @param user Address of the user\n @return User staking information"
									},
									"id": 2342,
									"members": [
										{
											"constant": false,
											"id": 2329,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "16431:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16423:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2328,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16423:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2331,
											"mutability": "mutable",
											"name": "stakingStartTime",
											"nameLocation": "16461:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16453:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2330,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16453:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2333,
											"mutability": "mutable",
											"name": "stakingEndTime",
											"nameLocation": "16496:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16488:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2332,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16488:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2335,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "16528:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16520:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2334,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16520:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2337,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "16554:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16546:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16546:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2339,
											"mutability": "mutable",
											"name": "pendingRewards",
											"nameLocation": "16575:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16567:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2338,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16567:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2341,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "16604:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "16599:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2340,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "16599:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakingInfo",
									"nameLocation": "16397:15:12",
									"nodeType": "StructDefinition",
									"scope": 2597,
									"src": "16390:229:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "16750:531:12",
										"statements": [
											{
												"assignments": [
													2352
												],
												"declarations": [
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "16784:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2413,
														"src": "16760:32:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 2351,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2350,
																"name": "UserStakingData",
																"nameLocations": [
																	"16760:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1383,
																"src": "16760:15:12"
															},
															"referencedDeclaration": 1383,
															"src": "16760:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2356,
												"initialValue": {
													"baseExpression": {
														"id": 2353,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "16795:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1383_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 2355,
													"indexExpression": {
														"id": 2354,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "16812:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16795:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1383_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16760:57:12"
											},
											{
												"assignments": [
													2359
												],
												"declarations": [
													{
														"constant": false,
														"id": 2359,
														"mutability": "mutable",
														"name": "userInfo",
														"nameLocation": "16859:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2413,
														"src": "16836:31:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
															"typeString": "struct WallyStaking.UserStakingInfo"
														},
														"typeName": {
															"id": 2358,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2357,
																"name": "UserStakingInfo",
																"nameLocations": [
																	"16836:15:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2342,
																"src": "16836:15:12"
															},
															"referencedDeclaration": 2342,
															"src": "16836:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2360,
												"nodeType": "VariableDeclarationStatement",
												"src": "16836:31:12"
											},
											{
												"expression": {
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2361,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "16877:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16886:12:12",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2329,
														"src": "16877:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2364,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "16901:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16910:12:12",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1370,
														"src": "16901:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16877:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "16877:45:12"
											},
											{
												"expression": {
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2368,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "16932:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16941:16:12",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2331,
														"src": "16932:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2371,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "16960:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16969:16:12",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "16960:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16932:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "16932:53:12"
											},
											{
												"expression": {
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2375,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "16995:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2377,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17004:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2333,
														"src": "16995:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2378,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "17021:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17030:14:12",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "17021:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16995:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2381,
												"nodeType": "ExpressionStatement",
												"src": "16995:49:12"
											},
											{
												"expression": {
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2382,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "17054:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17063:8:12",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2335,
														"src": "17054:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2385,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "17074:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17083:8:12",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1378,
														"src": "17074:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17054:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "17054:37:12"
											},
											{
												"expression": {
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2389,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "17101:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17110:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "17101:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2392,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "17116:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2393,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17125:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "17116:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17101:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "17101:27:12"
											},
											{
												"expression": {
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2396,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "17138:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17147:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2341,
														"src": "17138:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2399,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "17158:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1383_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17167:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "17158:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17138:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "17138:37:12"
											},
											{
												"expression": {
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2403,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "17185:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17194:14:12",
														"memberName": "pendingRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "17185:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2407,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "17235:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2406,
															"name": "calculatePendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "17211:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17211:29:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17185:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2410,
												"nodeType": "ExpressionStatement",
												"src": "17185:55:12"
											},
											{
												"expression": {
													"id": 2411,
													"name": "userInfo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2359,
													"src": "17266:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
														"typeString": "struct WallyStaking.UserStakingInfo memory"
													}
												},
												"functionReturnParameters": 2349,
												"id": 2412,
												"nodeType": "Return",
												"src": "17259:15:12"
											}
										]
									},
									"functionSelector": "80933608",
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStakingInfo",
									"nameLocation": "16638:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "16665:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "16657:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16657:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16656:14:12"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "16721:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserStakingInfo_$2342_memory_ptr",
													"typeString": "struct WallyStaking.UserStakingInfo"
												},
												"typeName": {
													"id": 2347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2346,
														"name": "UserStakingInfo",
														"nameLocations": [
															"16721:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2342,
														"src": "16721:15:12"
													},
													"referencedDeclaration": 2342,
													"src": "16721:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingInfo_$2342_storage_ptr",
														"typeString": "struct WallyStaking.UserStakingInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16720:24:12"
									},
									"scope": 2597,
									"src": "16629:652:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2437,
										"nodeType": "Block",
										"src": "17611:109:12",
										"statements": [
											{
												"assignments": [
													2426
												],
												"declarations": [
													{
														"constant": false,
														"id": 2426,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "17641:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2437,
														"src": "17621:24:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 2425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2424,
																"name": "StakingPlan",
																"nameLocations": [
																	"17621:11:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1368,
																"src": "17621:11:12"
															},
															"referencedDeclaration": 1368,
															"src": "17621:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"baseExpression": {
														"id": 2427,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "17648:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 2429,
													"indexExpression": {
														"id": 2428,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2417,
														"src": "17662:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17648:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1368_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17621:50:12"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 2431,
																"name": "plan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "17689:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																	"typeString": "struct WallyStaking.StakingPlan storage pointer"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17694:8:12",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1365,
															"src": "17689:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2433,
																"name": "plan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "17704:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																	"typeString": "struct WallyStaking.StakingPlan storage pointer"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17709:3:12",
															"memberName": "apr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1367,
															"src": "17704:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2435,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17688:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2423,
												"id": 2436,
												"nodeType": "Return",
												"src": "17681:32:12"
											}
										]
									},
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "17287:194:12",
										"text": " @dev Get staking plan details\n @param duration Duration of the plan\n @return isActive Whether the plan is active\n @return apr APR of the plan in basis points"
									},
									"functionSelector": "9fca9c22",
									"id": 2438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingPlan",
									"nameLocation": "17495:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "17518:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "17510:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17510:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17509:18:12"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "17583:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "17578:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17578:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "17601:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "17593:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17593:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17577:28:12"
									},
									"scope": 2597,
									"src": "17486:234:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2447,
										"nodeType": "Block",
										"src": "17950:43:12",
										"statements": [
											{
												"expression": {
													"id": 2445,
													"name": "_availableDurations",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "17967:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 2444,
												"id": 2446,
												"nodeType": "Return",
												"src": "17960:26:12"
											}
										]
									},
									"documentation": {
										"id": 2439,
										"nodeType": "StructuredDocumentation",
										"src": "17726:113:12",
										"text": " @dev Get all available staking durations\n @return durations Array of available durations"
									},
									"functionSelector": "b6b365c2",
									"id": 2448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableDurations",
									"nameLocation": "17853:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17874:2:12"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "17927:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17927:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2442,
													"nodeType": "ArrayTypeName",
													"src": "17927:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17926:18:12"
									},
									"scope": 2597,
									"src": "17844:149:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "18305:68:12",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 2458,
															"name": "_totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "18323:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2459,
															"name": "_rewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "18337:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2460,
															"name": "_stakingPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "18351:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2461,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "18322:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 2457,
												"id": 2462,
												"nodeType": "Return",
												"src": "18315:51:12"
											}
										]
									},
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "17999:194:12",
										"text": " @dev Get contract stats\n @return totalStaked Total tokens staked\n @return rewardsPool Available rewards pool\n @return stakingPaused Whether staking is paused"
									},
									"functionSelector": "dfe6b5d6",
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractStats",
									"nameLocation": "18207:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18223:2:12"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "18276:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18276:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "18285:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18285:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "18294:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18294:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18275:24:12"
									},
									"scope": 2597,
									"src": "18198:175:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2540,
										"nodeType": "Block",
										"src": "18625:729:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2472,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "18639:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18651:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18639:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2478,
												"nodeType": "IfStatement",
												"src": "18635:43:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2475,
															"name": "InvalidDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "18661:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18661:17:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2477,
													"nodeType": "RevertStatement",
													"src": "18654:24:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2479,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "18692:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2480,
														"name": "_MAX_DURATION_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "18703:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18692:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2486,
												"nodeType": "IfStatement",
												"src": "18688:81:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 2483,
																"name": "_MAX_DURATION_LENGTH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "18748:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2482,
															"name": "DurationTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "18732:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18732:37:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2485,
													"nodeType": "RevertStatement",
													"src": "18725:44:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2487,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2469,
														"src": "18783:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2488,
														"name": "_BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "18789:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18783:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2493,
												"nodeType": "IfStatement",
												"src": "18779:47:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2490,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "18811:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18811:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2492,
													"nodeType": "RevertStatement",
													"src": "18804:22:12"
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 2494,
															"name": "_stakingPlans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "18840:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
																"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
															}
														},
														"id": 2496,
														"indexExpression": {
															"id": 2495,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "18854:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18840:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1368_storage",
															"typeString": "struct WallyStaking.StakingPlan storage ref"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18864:8:12",
													"memberName": "isActive",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1365,
													"src": "18840:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2501,
												"nodeType": "IfStatement",
												"src": "18836:68:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2498,
															"name": "DurationAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "18881:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18881:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2500,
													"nodeType": "RevertStatement",
													"src": "18874:30:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2502,
															"name": "_availableDurations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "18994:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19014:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18994:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2504,
														"name": "_MAX_DURATIONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "19024:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18994:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2509,
												"nodeType": "IfStatement",
												"src": "18990:83:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2506,
															"name": "MaxDurationsLimitReached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "19047:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19047:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2508,
													"nodeType": "RevertStatement",
													"src": "19040:33:12"
												}
											},
											{
												"assignments": [
													2512
												],
												"declarations": [
													{
														"constant": false,
														"id": 2512,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "19155:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2540,
														"src": "19135:24:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 2511,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2510,
																"name": "StakingPlan",
																"nameLocations": [
																	"19135:11:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1368,
																"src": "19135:11:12"
															},
															"referencedDeclaration": 1368,
															"src": "19135:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2516,
												"initialValue": {
													"baseExpression": {
														"id": 2513,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "19162:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1368_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 2515,
													"indexExpression": {
														"id": 2514,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "19176:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19162:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1368_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19135:50:12"
											},
											{
												"expression": {
													"id": 2521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2517,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "19195:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19200:8:12",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1365,
														"src": "19195:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19211:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19195:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2522,
												"nodeType": "ExpressionStatement",
												"src": "19195:20:12"
											},
											{
												"expression": {
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2523,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "19225:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1368_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 2525,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19230:3:12",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1367,
														"src": "19225:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2526,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2469,
														"src": "19236:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19225:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2528,
												"nodeType": "ExpressionStatement",
												"src": "19225:14:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2532,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "19283:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2529,
															"name": "_availableDurations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "19258:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19278:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "19258:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19258:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "19258:34:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2536,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "19333:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2537,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2469,
															"src": "19343:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2535,
														"name": "StakingPlanAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "19316:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19316:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2539,
												"nodeType": "EmitStatement",
												"src": "19311:36:12"
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "18379:163:12",
										"text": " @dev Internal function to add a staking plan\n @param duration Duration in seconds\n @param apr Annual percentage rate in basis points"
									},
									"id": 2541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addStakingPlan",
									"nameLocation": "18556:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "18580:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "18572:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18572:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "18598:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "18590:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18590:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18571:31:12"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18625:0:12"
									},
									"scope": 2597,
									"src": "18547:807:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "19585:592:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2549,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "19599:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19615:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19607:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2550,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19607:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19607:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19599:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2558,
												"nodeType": "IfStatement",
												"src": "19595:51:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2555,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "19626:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19626:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2557,
													"nodeType": "RevertStatement",
													"src": "19619:27:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2559,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "19660:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19670:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19660:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2565,
												"nodeType": "IfStatement",
												"src": "19656:39:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2562,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "19680:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19680:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2564,
													"nodeType": "RevertStatement",
													"src": "19673:22:12"
												}
											},
											{
												"assignments": [
													2567
												],
												"declarations": [
													{
														"constant": false,
														"id": 2567,
														"mutability": "mutable",
														"name": "rewardsPool",
														"nameLocation": "19781:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2595,
														"src": "19773:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19773:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2569,
												"initialValue": {
													"id": 2568,
													"name": "_rewardsPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "19795:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19773:34:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2570,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "19830:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2571,
														"name": "rewardsPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2567,
														"src": "19840:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19830:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2576,
												"nodeType": "IfStatement",
												"src": "19826:59:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2573,
															"name": "InsufficientRewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "19860:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19860:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2575,
													"nodeType": "RevertStatement",
													"src": "19853:32:12"
												}
											},
											{
												"expression": {
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2577,
														"name": "_rewardsPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "20002:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2578,
															"name": "rewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "20017:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "20031:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20017:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20002:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "20002:35:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2586,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "20106:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "20112:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2583,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "20086:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 2585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20093:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "20086:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20086:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2589,
												"nodeType": "ExpressionStatement",
												"src": "20086:33:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2591,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "20157:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "20163:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2590,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "20143:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20143:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2594,
												"nodeType": "EmitStatement",
												"src": "20138:32:12"
											}
										]
									},
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "19360:145:12",
										"text": " @dev Internal function to claim rewards\n @param user Address of the user\n @param amount Amount of rewards to claim"
									},
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRewards",
									"nameLocation": "19519:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "19541:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "19533:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19533:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19555:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "19547:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19547:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19532:30:12"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19585:0:12"
									},
									"scope": 2597,
									"src": "19510:667:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2598,
							"src": "1207:18972:12",
							"usedErrors": [
								464,
								467,
								782,
								1254,
								1256,
								1258,
								1260,
								1262,
								1264,
								1266,
								1268,
								1272,
								1274,
								1276,
								1278,
								1282,
								1284
							],
							"usedEvents": [
								476,
								485,
								494,
								1315,
								1323,
								1329,
								1335,
								1341,
								1345,
								1351,
								1355,
								1363
							]
						}
					],
					"src": "32:20147:12"
				},
				"id": 12
			}
		}
	}
}