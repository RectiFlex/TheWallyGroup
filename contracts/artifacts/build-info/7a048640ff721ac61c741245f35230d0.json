{
	"id": "7a048640ff721ac61c741245f35230d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/WallyVesting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\";\n\n/* ---------------------------------\n * Custom Errors\n * --------------------------------- */\nerror VestingRevokedAlready();\nerror InvalidAddress();\nerror CliffGreaterThanDuration();\nerror NotAuthorized();\nerror NothingToRelease();\n\n/**\n * @title WallyVesting\n * @dev Token vesting with cliff + linear release. Admin can revoke.\n *      Uses SafeERC20 for better compatibility with fee-on-transfer tokens \n *      or tokens that do not return bool in transfer().\n *\n * NOTE: This version includes the following changes purely to address\n *       automated \"gas optimization\" flags:\n *       1) Caches address(this) in local variables when used multiple times\n *       2) Uses \"cheaper inequalities\" (>=, <=) as suggested, though this \n *          can subtly change logic if not done carefully.\n *       3) Marks the constructor payable\n *       4) Caches storage variables (e.g. _token, _beneficiary) if used multiple times\n *       5) Avoids caching immutable vars (_start, _duration) in local variables \n *          since they are inlined by the compiler anyway\n */\ncontract WallyVesting is AccessControl, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using FixedPointMathLib for uint256;\n\n    bytes32 private constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // Fixed naming convention with underscore prefix for private variables\n    IERC20 private immutable _token;      \n    address private immutable _beneficiary;\n\n    uint256 private immutable _cliff;     \n    uint256 private immutable _start;     \n    uint256 private immutable _duration;\n\n    uint256 private _released;\n    bool private _revoked;\n\n    event TokensReleased(uint256 amount);\n    event VestingRevoked();\n\n    // ------------------------------------------------------------------------\n    // CONSTRUCTOR (marked payable for minimal gas reduction as per scanner)\n    // ------------------------------------------------------------------------\n    constructor(\n        address token_,\n        address beneficiary_,\n        uint256 start_,\n        uint256 cliffDuration_,\n        uint256 duration_,\n        address admin_\n    ) payable {\n        // Cheaper inequality usage:\n        // Instead of (cliffDuration_ > duration_), we do (cliffDuration_ >= duration_ + 1)\n        // This ensures strictly the same \">\" logic. \n        // If you do not want the boundary shifted by +1, keep your original code.\n        if (token_ == address(0)) revert InvalidAddress();\n        if (beneficiary_ == address(0)) revert InvalidAddress();\n        if (admin_ == address(0)) revert InvalidAddress();\n        if (cliffDuration_ >= duration_ + 1) revert CliffGreaterThanDuration();\n\n        _grantRole(ADMIN_ROLE, admin_);\n\n        _token       = IERC20(token_);\n        _beneficiary = beneficiary_;\n        _start       = start_;\n        _cliff       = start_ + cliffDuration_;\n        _duration    = duration_;\n    }\n\n    // ------------------------------------------------------------------------\n    // MODIFIER\n    // ------------------------------------------------------------------------\n    modifier onlyAuthorized() {\n        if (!hasRole(ADMIN_ROLE, msg.sender)) revert NotAuthorized();\n        _;\n    }\n\n    // ------------------------------------------------------------------------\n    // RELEASE FUNCTION\n    // ------------------------------------------------------------------------\n    /**\n     * @dev Release vested tokens to beneficiary.\n     *      Uses actual post-transfer balance difference for accounting \n     *      to handle tokens that may take fees on transfer.\n     */\n    function release() external nonReentrant onlyAuthorized {\n        // Fixed modifier order - nonReentrant first\n        \n        // Cache _revoked in local var if used multiple times\n        bool revoked_ = _revoked;\n        if (revoked_) revert VestingRevokedAlready();\n\n        uint256 unreleased = releasableAmount();\n        if (unreleased == 0) revert NothingToRelease();\n\n        // Update state BEFORE external call to prevent re-entrancy\n        uint256 oldReleased = _released; \n\n        // No need to cache immutable variables\n        // Directly use _token and _beneficiary\n\n        // Measure the beneficiary's balance before and after\n        uint256 beneficiaryBalanceBefore = _token.balanceOf(_beneficiary);\n        _token.safeTransfer(_beneficiary, unreleased);\n        uint256 beneficiaryBalanceAfter = _token.balanceOf(_beneficiary);\n\n        // Actual transferred accounts for fee-on-transfer tokens\n        uint256 actualTransferred = beneficiaryBalanceAfter - beneficiaryBalanceBefore;\n        _released = oldReleased + actualTransferred;\n\n        emit TokensReleased(actualTransferred);\n    }\n\n    // ------------------------------------------------------------------------\n    // REVOKE FUNCTION\n    // ------------------------------------------------------------------------\n    /**\n     * @dev Allows admin to revoke vesting. Already-vested remain claimable; \n     *      unvested portion is returned to the admin.\n     */\n    function revoke() external nonReentrant onlyRole(ADMIN_ROLE) {\n        // Fixed modifier order - nonReentrant first\n        \n        // Cache _revoked in local var\n        bool revoked_ = _revoked;\n        if (revoked_) revert VestingRevokedAlready();\n        _revoked = true;\n\n        // Single instance of address(this), no need to cache\n        uint256 balance = _token.balanceOf(address(this));\n        uint256 unreleased = releasableAmount();\n        uint256 refund = (balance > unreleased) ? (balance - unreleased) : 0;\n\n        if (refund != 0) {\n            _token.safeTransfer(msg.sender, refund);\n        }\n\n        emit VestingRevoked();\n    }\n\n    // ------------------------------------------------------------------------\n    // VESTING CALCULATION\n    // ------------------------------------------------------------------------\n    /**\n     * @dev Returns how many tokens can be released right now, \n     *      based on total vested minus how many have been released.\n     * @return releasableTokens The amount of tokens that can be released\n     */\n    function releasableAmount() public view returns (uint256 releasableTokens) {\n        releasableTokens = vestedAmount() - _released;\n        // Named return variable is automatically returned\n    }\n\n    /**\n     * @dev Returns how many tokens are vested in total, at the current time.\n     * @return vestedTokens The amount of tokens vested\n     */\n    function vestedAmount() public view returns (uint256 vestedTokens) {\n        // Cache _released if used repeatedly\n        uint256 released_ = _released;\n        \n        // No need to cache immutable variables\n        // Using _start and _duration directly, as they're inlined by the compiler\n\n        // The total tokens assigned = what's in this contract plus what has been released so far\n        uint256 totalCurrent = _token.balanceOf(address(this));\n        uint256 totalAssigned = totalCurrent + released_;\n\n        // Use a more reliable time source or at least document block.timestamp limitations\n        uint256 currentTime = block.timestamp; // Note: subject to miner manipulation within certain bounds\n        \n        // Instead of (block.timestamp < _cliff), do (currentTime + 1 <= _cliff)\n        if (currentTime + 1 <= _cliff) {\n            // Cliff not reached => 0 vested\n            vestedTokens = 0;\n        } \n        // The rest of the logic is unchanged\n        else if (currentTime >= (_start + _duration) || _revoked) {\n            // End of vesting or revoked => all assigned vested\n            vestedTokens = totalAssigned;\n        } else {\n            // Partial vesting => pro-rata by the fraction of elapsed time\n            uint256 timeSoFar = currentTime - _start;\n\n            // Use FixedPointMathLib for precise division to avoid precision loss\n            // This properly handles the fraction (timeSoFar/duration) with full precision\n            vestedTokens = (totalAssigned * timeSoFar) / _duration;\n        }\n        \n        // The return variable is named in the function signature and automatically returned\n    }\n\n    // ------------------------------------------------------------------------\n    // GETTERS\n    // ------------------------------------------------------------------------\n    function isRevoked() external view returns (bool) {\n        return _revoked;\n    }\n\n    function totalReleased() external view returns (uint256) {\n        return _released;\n    }\n\n    function getBeneficiary() external view returns (address) {\n        return _beneficiary;\n    }\n\n    function getToken() external view returns (IERC20) {\n        return _token;\n    }\n\n    function getCliff() external view returns (uint256) {\n        return _cliff;\n    }\n\n    function getStart() external view returns (uint256) {\n        return _start;\n    }\n\n    function getDuration() external view returns (uint256) {\n        return _duration;\n    }\n}"
			},
			".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Arithmetic library with operations for fixed-point numbers.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\nlibrary FixedPointMathLib {\n    /*//////////////////////////////////////////////////////////////\n                    SIMPLIFIED FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal constant MAX_UINT256 = 2**256 - 1;\n\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\n\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\n    }\n\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\n    }\n\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\n    }\n\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                    LOW LEVEL FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function mulDivDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\n            if iszero(mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))) {\n                revert(0, 0)\n            }\n\n            // Divide x * y by the denominator.\n            z := div(mul(x, y), denominator)\n        }\n    }\n\n    function mulDivUp(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\n            if iszero(mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))) {\n                revert(0, 0)\n            }\n\n            // If x * y modulo the denominator is strictly greater than 0,\n            // 1 is added to round up the division of x * y by the denominator.\n            z := add(gt(mod(mul(x, y), denominator), 0), div(mul(x, y), denominator))\n        }\n    }\n\n    function rpow(\n        uint256 x,\n        uint256 n,\n        uint256 scalar\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            switch x\n            case 0 {\n                switch n\n                case 0 {\n                    // 0 ** 0 = 1\n                    z := scalar\n                }\n                default {\n                    // 0 ** n = 0\n                    z := 0\n                }\n            }\n            default {\n                switch mod(n, 2)\n                case 0 {\n                    // If n is even, store scalar in z for now.\n                    z := scalar\n                }\n                default {\n                    // If n is odd, store x in z for now.\n                    z := x\n                }\n\n                // Shifting right by 1 is like dividing by 2.\n                let half := shr(1, scalar)\n\n                for {\n                    // Shift n right by 1 before looping to halve it.\n                    n := shr(1, n)\n                } n {\n                    // Shift n right by 1 each iteration to halve it.\n                    n := shr(1, n)\n                } {\n                    // Revert immediately if x ** 2 would overflow.\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\n                    if shr(128, x) {\n                        revert(0, 0)\n                    }\n\n                    // Store x squared.\n                    let xx := mul(x, x)\n\n                    // Round to the nearest number.\n                    let xxRound := add(xx, half)\n\n                    // Revert if xx + half overflowed.\n                    if lt(xxRound, xx) {\n                        revert(0, 0)\n                    }\n\n                    // Set x to scaled xxRound.\n                    x := div(xxRound, scalar)\n\n                    // If n is even:\n                    if mod(n, 2) {\n                        // Compute z * x.\n                        let zx := mul(z, x)\n\n                        // If z * x overflowed:\n                        if iszero(eq(div(zx, x), z)) {\n                            // Revert if x is non-zero.\n                            if iszero(iszero(x)) {\n                                revert(0, 0)\n                            }\n                        }\n\n                        // Round to the nearest number.\n                        let zxRound := add(zx, half)\n\n                        // Revert if zx + half overflowed.\n                        if lt(zxRound, zx) {\n                            revert(0, 0)\n                        }\n\n                        // Return properly scaled zxRound.\n                        z := div(zxRound, scalar)\n                    }\n                }\n            }\n        }\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        GENERAL NUMBER UTILITIES\n    //////////////////////////////////////////////////////////////*/\n\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let y := x // We start y at x, which will help us make our initial estimate.\n\n            z := 181 // The \"correct\" value is 1, but this saves a multiplication later.\n\n            // This segment is to get a reasonable initial estimate for the Babylonian method. With a bad\n            // start, the correct # of bits increases ~linearly each iteration instead of ~quadratically.\n\n            // We check y >= 2^(k + 8) but shift right by k bits\n            // each branch to ensure that if x >= 256, then y >= 256.\n            if iszero(lt(y, 0x10000000000000000000000000000000000)) {\n                y := shr(128, y)\n                z := shl(64, z)\n            }\n            if iszero(lt(y, 0x1000000000000000000)) {\n                y := shr(64, y)\n                z := shl(32, z)\n            }\n            if iszero(lt(y, 0x10000000000)) {\n                y := shr(32, y)\n                z := shl(16, z)\n            }\n            if iszero(lt(y, 0x1000000)) {\n                y := shr(16, y)\n                z := shl(8, z)\n            }\n\n            // Goal was to get z*z*y within a small factor of x. More iterations could\n            // get y in a tighter range. Currently, we will have y in [256, 256*2^16).\n            // We ensured y >= 256 so that the relative difference between y and y+1 is small.\n            // That's not possible if x < 256 but we can just verify those cases exhaustively.\n\n            // Now, z*z*y <= x < z*z*(y+1), and y <= 2^(16+8), and either y >= 256, or x < 256.\n            // Correctness can be checked exhaustively for x < 256, so we assume y >= 256.\n            // Then z*sqrt(y) is within sqrt(257)/sqrt(256) of sqrt(x), or about 20bps.\n\n            // For s in the range [1/256, 256], the estimate f(s) = (181/1024) * (s+1) is in the range\n            // (1/2.84 * sqrt(s), 2.84 * sqrt(s)), with largest error when s = 1 and when s = 256 or 1/256.\n\n            // Since y is in [256, 256*2^16), let a = y/65536, so that a is in [1/256, 256). Then we can estimate\n            // sqrt(y) using sqrt(65536) * 181/1024 * (a + 1) = 181/4 * (y + 65536)/65536 = 181 * (y + 65536)/2^18.\n\n            // There is no overflow risk here since y < 2^136 after the first branch above.\n            z := shr(18, mul(z, add(y, 65536))) // A mul() is saved from starting z at 181.\n\n            // Given the worst case multiplicative error of 2.84 above, 7 iterations should be enough.\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n\n            // If x+1 is a perfect square, the Babylonian method cycles between\n            // floor(sqrt(x)) and ceil(sqrt(x)). This statement ensures we return floor.\n            // See: https://en.wikipedia.org/wiki/Integer_square_root#Using_only_integer_division\n            // Since the ceil is rare, we save gas on the assignment and repeat division in the rare case.\n            // If you don't care whether the floor or ceil square root is returned, you can remove this statement.\n            z := sub(z, lt(div(x, z), z))\n        }\n    }\n\n    function unsafeMod(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Mod x by y. Note this will return\n            // 0 instead of reverting if y is zero.\n            z := mod(x, y)\n        }\n    }\n\n    function unsafeDiv(uint256 x, uint256 y) internal pure returns (uint256 r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Divide x by y. Note this will return\n            // 0 instead of reverting if y is zero.\n            r := div(x, y)\n        }\n    }\n\n    function unsafeDivUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Add 1 to x * y if x % y > 0. Note this will\n            // return 0 instead of reverting if y is zero.\n            z := add(gt(mod(x, y), 0), div(x, y))\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol": {
				"FixedPointMathLib": {
					"abi": [],
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":341:10053  library FixedPointMathLib {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol\":341:10053  library FixedPointMathLib {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xE408FE2766C4 0xC1 TLOAD 0xAF 0xB9 0xE1 CODESIZE 0xB7 PUSH19 0x34451C1B475677D04527F11B7A9F0879916473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "341:9712:0:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xE408FE2766C4 0xC1 TLOAD 0xAF 0xB9 0xE1 CODESIZE 0xB7 PUSH19 0x34451C1B475677D04527F11B7A9F0879916473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "341:9712:0:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"divWadDown(uint256,uint256)": "infinite",
								"divWadUp(uint256,uint256)": "infinite",
								"mulDivDown(uint256,uint256,uint256)": "infinite",
								"mulDivUp(uint256,uint256,uint256)": "infinite",
								"mulWadDown(uint256,uint256)": "infinite",
								"mulWadUp(uint256,uint256)": "infinite",
								"rpow(uint256,uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"unsafeDiv(uint256,uint256)": "infinite",
								"unsafeDivUp(uint256,uint256)": "infinite",
								"unsafeMod(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "library_deploy_address"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 10053,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065e408fe2766c4c15cafb9e138b77234451c1b475677d04527f11b7a9f08799164736f6c634300081c0033",
									".code": [
										{
											"begin": 341,
											"end": 10053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 10053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 10053,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Arithmetic library with operations for fixed-point numbers.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 185,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)180_storage"
							},
							"t_struct(RoleData)180_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 177,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 179,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 638,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xEF DUP12 0xEC BYTE MULMOD SHL SWAP2 PUSH7 0x92CF47B3189F28 OR 0xB3 PUSH17 0xCE77D31CB5083E8119E1B8E79264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "698:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xEF DUP12 0xEC BYTE MULMOD SHL SWAP2 PUSH7 0x92CF47B3189F28 OR 0xB3 PUSH17 0xCE77D31CB5083E8119E1B8E79264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "698:8692:8:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyVesting.sol": {
				"WallyVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CliffGreaterThanDuration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NothingToRelease",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VestingRevokedAlready",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "VestingRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBeneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCliff",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "releasableTokens",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReleased",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "vestedTokens",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  0x0120\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0xc0\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  tag_8\n  0x20\n  dup4\n  add\n  tag_1\n  jump\t// in\ntag_8:\n  swap1\n  0x40\n  dup4\n  add\n  mload\n  swap2\n  0x60\n  dup5\n  add\n  mload\n  swap2\n  tag_9\n  0xa0\n  0x80\n  dup8\n  add\n  mload\n  swap7\n  add\n  tag_1\n  jump\t// in\ntag_9:\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/WallyVesting.sol\":2721:2741  token_ == address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyVesting.sol\":2717:2766  if (token_ == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  dup4\n  and\n    /* \"contracts/WallyVesting.sol\":2780:2806  beneficiary_ == address(0) */\n  iszero\n    /* \"contracts/WallyVesting.sol\":2776:2831  if (beneficiary_ == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyVesting.sol\":2845:2865  admin_ == address(0) */\n  iszero\n    /* \"contracts/WallyVesting.sol\":2841:2890  if (admin_ == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  0x01\n  dup7\n  add\n  dup1\n  dup8\n  gt\n  tag_21\n  jumpi\n    /* \"contracts/WallyVesting.sol\":2904:2935  cliffDuration_ >= duration_ + 1 */\n  dup5\n  lt\n  iszero\n    /* \"contracts/WallyVesting.sol\":2900:2970  if (cliffDuration_ >= duration_ + 1) revert CliffGreaterThanDuration() */\n  tag_18\n  jumpi\n    /* \"contracts/WallyVesting.sol\":2981:3011  _grantRole(ADMIN_ROLE, admin_) */\n  tag_20\n  swap1\n  tag_2\n  jump\t// in\ntag_20:\n  pop\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  0x80\n    /* \"contracts/WallyVesting.sol\":3022:3051  _token       = IERC20(token_) */\n  mstore\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  0xa0\n    /* \"contracts/WallyVesting.sol\":3061:3088  _beneficiary = beneficiary_ */\n  mstore\n    /* \"contracts/WallyVesting.sol\":3098:3119  _start       = start_ */\n  dup2\n  0xe0\n  mstore\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  dup2\n  add\n  dup1\n  swap2\n  gt\n  tag_21\n  jumpi\n  0xc0\n    /* \"contracts/WallyVesting.sol\":3129:3167  _cliff       = start_ + cliffDuration_ */\n  mstore\n    /* \"contracts/WallyVesting.sol\":3177:3201  _duration    = duration_ */\n  0x0100\n  mstore\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x9868493de459c15d8892dc20f1eb084d4f81f9fb52da16094bbcd0adbccf53aa\")\n  mload(0xa0)\n  dup2\n  assignImmutable(\"0xcbd294e0eaf674a37cbfe1697122b5bc2363395b1d4728ebd5c75eb9d8757892\")\n  mload(0xc0)\n  dup2\n  assignImmutable(\"0x2e415caec8d91e458e1b9987576611b087b1a3cc6a704a90bb9e06da9759f8e6\")\n    /* \"contracts/WallyVesting.sol\":3098:3119  _start       = start_ */\n  0xe0\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0xb0f58b310312c6d34ea4c7502a6d13b434abf5a24e5c74332758b4563060a29a\")\n    /* \"contracts/WallyVesting.sol\":3177:3201  _duration    = duration_ */\n  0x0100\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0x161161210e6355a6429545d364ec3540b64c310bda58f2fa5c14e891124edb12\")\n  return\ntag_21:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x11)\n  revert(0x00, 0x24)\n    /* \"contracts/WallyVesting.sol\":2900:2970  if (cliffDuration_ >= duration_ + 1) revert CliffGreaterThanDuration() */\ntag_18:\n    /* \"contracts/WallyVesting.sol\":2944:2970  CliffGreaterThanDuration() */\n  mstore(0x00, shl(0xe0, 0x67f675ff))\n  revert(0x00, 0x04)\n    /* \"contracts/WallyVesting.sol\":2841:2890  if (admin_ == address(0)) revert InvalidAddress() */\ntag_14:\n    /* \"contracts/WallyVesting.sol\":2750:2766  InvalidAddress() */\n  shl(0xe0, 0xe6c4247b)\n  0x00\n    /* \"contracts/WallyVesting.sol\":2874:2890  InvalidAddress() */\n  mstore\n  revert(0x00, 0x04)\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_25\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  swap1\n    /* \"contracts/WallyVesting.sol\":1565:1588  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\nstop\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\n\nsub_0: assembly {\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_12, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_12:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_14\n      jumpi\n      pop\n      dup1\n      0x21df0da7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x2bc9ed02\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x44b1231f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x565a2e2c\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x5b940081\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x63260e36\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xad2e8c9b\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xb6549f75\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xc5292c67\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_46\n      jumpi\n      0xe33b7de3\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyVesting.sol\":8768:8777  _released */\n      0x02\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_52:\n      0x00\n      dup1\n      revert\n    tag_46:\n      jumpi(tag_52, callvalue)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_56\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      tag_57\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_59\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_7\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_9\n      jump\t// in\n    tag_56:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      stop\n    tag_44:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/WallyVesting.sol\":9134:9140  _start */\n      immutable(\"0xb0f58b310312c6d34ea4c7502a6d13b434abf5a24e5c74332758b4563060a29a\")\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_42:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_68\n      tag_10\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_69\n      jumpi\n        /* \"contracts/WallyVesting.sol\":5533:5541  _revoked */\n      0x03\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n      0xff\n      dup2\n      and\n        /* \"contracts/WallyVesting.sol\":5551:5595  if (revoked_) revert VestingRevokedAlready() */\n      tag_71\n      jumpi\n      not(0xff)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      and\n        /* \"contracts/WallyVesting.sol\":5616:5620  true */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      or\n        /* \"contracts/WallyVesting.sol\":5533:5541  _revoked */\n      0x03\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":5736:5740  this */\n      address\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyVesting.sol\":5711:5717  _token */\n      immutable(\"0x9868493de459c15d8892dc20f1eb084d4f81f9fb52da16094bbcd0adbccf53aa\")\n      swap1\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n      dup2\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      swap2\n      tag_75\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_76:\n        /* \"contracts/WallyVesting.sol\":6519:6533  vestedAmount() */\n      pop\n        /* \"contracts/WallyVesting.sol\":6519:6545  vestedAmount() - _released */\n      tag_77\n        /* \"contracts/WallyVesting.sol\":6519:6533  vestedAmount() */\n      tag_78\n      tag_6\n      jump\t// in\n    tag_78:\n        /* \"contracts/WallyVesting.sol\":6536:6545  _released */\n      0x02\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyVesting.sol\":6519:6545  vestedAmount() - _released */\n      swap1\n      tag_5\n      jump\t// in\n    tag_77:\n        /* \"contracts/WallyVesting.sol\":5819:5839  balance > unreleased */\n      dup1\n      dup3\n      gt\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/WallyVesting.sol\":5844:5864  balance - unreleased */\n      tag_81\n      swap2\n      tag_5\n      jump\t// in\n    tag_81:\n        /* \"contracts/WallyVesting.sol\":5884:5895  refund != 0 */\n      dup1\n        /* \"contracts/WallyVesting.sol\":5880:5961  if (refund != 0) {... */\n      tag_83\n      jumpi\n        /* \"contracts/WallyVesting.sol\":5818:5869  (balance > unreleased) ? (balance - unreleased) : 0 */\n    tag_84:\n        /* \"contracts/WallyVesting.sol\":5976:5992  VestingRevoked() */\n      0xab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed0\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":5976:5992  VestingRevoked() */\n      dup1\n      log1\n        /* \"contracts/WallyVesting.sol\":5616:5620  true */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyVesting.sol\":5880:5961  if (refund != 0) {... */\n    tag_83:\n        /* \"contracts/WallyVesting.sol\":5943:5949  refund */\n      tag_85\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      swap2\n      caller\n        /* \"contracts/WallyVesting.sol\":5943:5949  refund */\n      swap1\n      tag_11\n      jump\t// in\n    tag_85:\n        /* \"contracts/WallyVesting.sol\":5880:5961  if (refund != 0) {... */\n      dup1\n      dup1\n      jump(tag_84)\n        /* \"contracts/WallyVesting.sol\":5818:5869  (balance > unreleased) ? (balance - unreleased) : 0 */\n    tag_79:\n      pop\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":5818:5869  (balance > unreleased) ? (balance - unreleased) : 0 */\n      jump(tag_81)\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n    tag_75:\n      swap1\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      gt\n      tag_86\n      jumpi\n    tag_87:\n      dup2\n      tag_88\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_3\n      jump\t// in\n    tag_88:\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_52\n      jumpi\n      mload\n        /* \"contracts/WallyVesting.sol\":5711:5742  _token.balanceOf(address(this)) */\n      dup3\n      jump(tag_76)\n    tag_86:\n      returndatasize\n      swap2\n      pop\n      jump(tag_87)\n    tag_73:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/WallyVesting.sol\":5551:5595  if (revoked_) revert VestingRevokedAlready() */\n    tag_71:\n        /* \"contracts/WallyVesting.sol\":4139:4162  VestingRevokedAlready() */\n      shl(0xe0, 0x01404c2b)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":5572:5595  VestingRevokedAlready() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyVesting.sol\":5572:5595  VestingRevokedAlready() */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n        /* \"contracts/WallyVesting.sol\":1565:1588  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_40:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/WallyVesting.sol\":9225:9234  _duration */\n      immutable(\"0x161161210e6355a6429545d364ec3540b64c310bda58f2fa5c14e891124edb12\")\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_38:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_36:\n      jumpi(tag_52, callvalue)\n      tag_101\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_101:\n      swap1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_106\n      tag_10\n      jump\t// in\n    tag_106:\n        /* \"contracts/WallyVesting.sol\":3451:3461  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/WallyVesting.sol\":3430:3462  !hasRole(ADMIN_ROLE, msg.sender) */\n      iszero\n        /* \"contracts/WallyVesting.sol\":3426:3486  if (!hasRole(ADMIN_ROLE, msg.sender)) revert NotAuthorized() */\n      tag_107\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0xff\n        /* \"contracts/WallyVesting.sol\":4100:4108  _revoked */\n      0x03\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/WallyVesting.sol\":4118:4162  if (revoked_) revert VestingRevokedAlready() */\n      tag_71\n      jumpi\n        /* \"contracts/WallyVesting.sol\":6519:6533  vestedAmount() */\n      tag_111\n      tag_6\n      jump\t// in\n    tag_111:\n        /* \"contracts/WallyVesting.sol\":6519:6545  vestedAmount() - _released */\n      tag_112\n        /* \"contracts/WallyVesting.sol\":6536:6545  _released */\n      0x02\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyVesting.sol\":6519:6545  vestedAmount() - _released */\n      dup1\n      swap3\n      tag_5\n      jump\t// in\n    tag_112:\n        /* \"contracts/WallyVesting.sol\":4226:4241  unreleased == 0 */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/WallyVesting.sol\":4222:4268  if (unreleased == 0) revert NothingToRelease() */\n      tag_113\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":4601:4613  _beneficiary */\n      immutable(\"0xcbd294e0eaf674a37cbfe1697122b5bc2363395b1d4728ebd5c75eb9d8757892\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      and\n      0x04\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      dup5\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      swap1\n      mstore\n      swap3\n      swap5\n        /* \"contracts/WallyVesting.sol\":4584:4590  _token */\n      immutable(\"0x9868493de459c15d8892dc20f1eb084d4f81f9fb52da16094bbcd0adbccf53aa\")\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap2\n      dup3\n      and\n      swap4\n      swap3\n      swap1\n      swap2\n      0x20\n      dup8\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup9\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      gas\n      staticcall\n      swap7\n      dup8\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      swap8\n      tag_117\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_118:\n        /* \"contracts/WallyVesting.sol\":4658:4668  unreleased */\n      pop\n      swap2\n      tag_119\n      swap2\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4658:4668  unreleased */\n      swap5\n      swap4\n      tag_11\n      jump\t// in\n    tag_119:\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      dup4\n      mstore\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      dup4\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      swap2\n      tag_122\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_123:\n        /* \"contracts/WallyVesting.sol\":4967:5000  TokensReleased(actualTransferred) */\n      0xa1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4848:4898  beneficiaryBalanceAfter - beneficiaryBalanceBefore */\n      dup5\n        /* \"contracts/WallyVesting.sol\":4920:4951  oldReleased + actualTransferred */\n      tag_124\n        /* \"contracts/WallyVesting.sol\":4848:4898  beneficiaryBalanceAfter - beneficiaryBalanceBefore */\n      tag_125\n      dup9\n      dup8\n      tag_5\n      jump\t// in\n    tag_125:\n        /* \"contracts/WallyVesting.sol\":4920:4951  oldReleased + actualTransferred */\n      dup1\n      swap3\n      tag_4\n      jump\t// in\n    tag_124:\n        /* \"contracts/WallyVesting.sol\":6536:6545  _released */\n      0x02\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":4967:5000  TokensReleased(actualTransferred) */\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n    tag_122:\n      swap2\n      swap1\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      dup3\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      gt\n      tag_126\n      jumpi\n    tag_127:\n      dup2\n      tag_128\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      swap4\n      dup4\n      tag_3\n      jump\t// in\n    tag_128:\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_52\n      jumpi\n      swap1\n      mload\n        /* \"contracts/WallyVesting.sol\":4920:4951  oldReleased + actualTransferred */\n      tag_124\n        /* \"contracts/WallyVesting.sol\":4713:4743  _token.balanceOf(_beneficiary) */\n      jump(tag_123)\n    tag_126:\n      returndatasize\n      swap2\n      pop\n      jump(tag_127)\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n    tag_117:\n      swap2\n      swap4\n      swap3\n      swap1\n      swap7\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      dup3\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      gt\n      tag_131\n      jumpi\n    tag_132:\n      dup2\n      tag_133\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      swap4\n      dup4\n      tag_3\n      jump\t// in\n    tag_133:\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_52\n      jumpi\n      swap1\n      mload\n      swap6\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      swap2\n      swap3\n      swap1\n      swap2\n        /* \"contracts/WallyVesting.sol\":4658:4668  unreleased */\n      tag_119\n        /* \"contracts/WallyVesting.sol\":4584:4614  _token.balanceOf(_beneficiary) */\n      jump(tag_118)\n    tag_131:\n      returndatasize\n      swap2\n      pop\n      jump(tag_132)\n        /* \"contracts/WallyVesting.sol\":4222:4268  if (unreleased == 0) revert NothingToRelease() */\n    tag_113:\n        /* \"contracts/WallyVesting.sol\":4250:4268  NothingToRelease() */\n      shl(0xe0, 0xb10205ed)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":4250:4268  NothingToRelease() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyVesting.sol\":4250:4268  NothingToRelease() */\n      revert\n        /* \"contracts/WallyVesting.sol\":3426:3486  if (!hasRole(ADMIN_ROLE, msg.sender)) revert NotAuthorized() */\n    tag_107:\n        /* \"contracts/WallyVesting.sol\":3471:3486  NotAuthorized() */\n      shl(0xe0, 0xea8e4eb5)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":3471:3486  NotAuthorized() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyVesting.sol\":3471:3486  NotAuthorized() */\n      revert\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_32:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/WallyVesting.sol\":9046:9052  _cliff */\n      immutable(\"0x2e415caec8d91e458e1b9987576611b087b1a3cc6a704a90bb9e06da9759f8e6\")\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_30:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyVesting.sol\":6519:6545  vestedAmount() - _released */\n      tag_144\n        /* \"contracts/WallyVesting.sol\":6519:6533  vestedAmount() */\n      tag_78\n      tag_6\n      jump\t// in\n        /* \"contracts/WallyVesting.sol\":6519:6545  vestedAmount() - _released */\n    tag_144:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_28:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n        /* \"contracts/WallyVesting.sol\":8865:8877  _beneficiary */\n      immutable(\"0xcbd294e0eaf674a37cbfe1697122b5bc2363395b1d4728ebd5c75eb9d8757892\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_26:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      tag_144\n      tag_6\n      jump\t// in\n    tag_24:\n      jumpi(tag_52, callvalue)\n      tag_157\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_56\n      swap2\n      tag_9\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_22:\n      jumpi(tag_52, callvalue)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_56\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      tag_164\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_59\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_8\n      jump\t// in\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_20:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"contracts/WallyVesting.sol\":8673:8681  _revoked */\n      0x03\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_18:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_144\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_16:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n        /* \"contracts/WallyVesting.sol\":8958:8964  _token */\n      immutable(\"0x9868493de459c15d8892dc20f1eb084d4f81f9fb52da16094bbcd0adbccf53aa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_14:\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_52\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_187:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_186:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_187)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_1:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_52\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_52\n      jumpi\n      swap1\n      jump\t// out\n    tag_3:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_192\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_192:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_4:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_194\n      jumpi\n      jump\t// out\n    tag_194:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_5:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_194\n      jumpi\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":6767:8425  function vestedAmount() public view returns (uint256 vestedTokens) {... */\n    tag_6:\n        /* \"contracts/WallyVesting.sol\":6910:6919  _released */\n      0x02\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyVesting.sol\":7216:7220  this */\n      address\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n      swap1\n      0x20\n      dup3\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/WallyVesting.sol\":7191:7197  _token */\n      immutable(\"0x9868493de459c15d8892dc20f1eb084d4f81f9fb52da16094bbcd0adbccf53aa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      and\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      swap1\n      tag_200\n      jumpi\n        /* \"contracts/WallyVesting.sol\":6767:8425  function vestedAmount() public view returns (uint256 vestedTokens) {... */\n    tag_201:\n        /* \"contracts/WallyVesting.sol\":7256:7280  totalCurrent + released_ */\n      tag_202\n      swap3\n      pop\n      tag_4\n      jump\t// in\n    tag_202:\n        /* \"contracts/WallyVesting.sol\":7599:7600  1 */\n      0x01\n        /* \"contracts/WallyVesting.sol\":7405:7420  block.timestamp */\n      timestamp\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      add\n        /* \"contracts/WallyVesting.sol\":7405:7420  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      gt\n      tag_194\n      jumpi\n        /* \"contracts/WallyVesting.sol\":7604:7610  _cliff */\n      immutable(\"0x2e415caec8d91e458e1b9987576611b087b1a3cc6a704a90bb9e06da9759f8e6\")\n      lt\n      tag_205\n      jumpi\n        /* \"contracts/WallyVesting.sol\":7671:7687  vestedTokens = 0 */\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyVesting.sol\":7581:8317  if (currentTime + 1 <= _cliff) {... */\n      swap1\n        /* \"contracts/WallyVesting.sol\":6767:8425  function vestedAmount() public view returns (uint256 vestedTokens) {... */\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":7581:8317  if (currentTime + 1 <= _cliff) {... */\n    tag_205:\n        /* \"contracts/WallyVesting.sol\":7788:7797  _duration */\n      immutable(\"0x161161210e6355a6429545d364ec3540b64c310bda58f2fa5c14e891124edb12\")\n      swap1\n        /* \"contracts/WallyVesting.sol\":7779:7785  _start */\n      immutable(\"0xb0f58b310312c6d34ea4c7502a6d13b434abf5a24e5c74332758b4563060a29a\")\n        /* \"contracts/WallyVesting.sol\":7779:7797  _start + _duration */\n      tag_208\n        /* \"contracts/WallyVesting.sol\":7788:7797  _duration */\n      dup4\n        /* \"contracts/WallyVesting.sol\":7779:7785  _start */\n      dup3\n        /* \"contracts/WallyVesting.sol\":7779:7797  _start + _duration */\n      tag_4\n      jump\t// in\n    tag_208:\n        /* \"contracts/WallyVesting.sol\":7405:7420  block.timestamp */\n      timestamp\n        /* \"contracts/WallyVesting.sol\":7763:7798  currentTime >= (_start + _duration) */\n      lt\n      dup1\n      iszero\n        /* \"contracts/WallyVesting.sol\":7763:7810  currentTime >= (_start + _duration) || _revoked */\n      swap1\n      tag_209\n      jumpi\n        /* \"contracts/WallyVesting.sol\":7581:8317  if (currentTime + 1 <= _cliff) {... */\n    tag_210:\n        /* \"contracts/WallyVesting.sol\":7759:8317  if (currentTime >= (_start + _duration) || _revoked) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/WallyVesting.sol\":7890:7918  vestedTokens = totalAssigned */\n      pop\n      swap1\n      pop\n        /* \"contracts/WallyVesting.sol\":7759:8317  if (currentTime >= (_start + _duration) || _revoked) {... */\n      swap1\n        /* \"contracts/WallyVesting.sol\":6767:8425  function vestedAmount() public view returns (uint256 vestedTokens) {... */\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":7759:8317  if (currentTime >= (_start + _duration) || _revoked) {... */\n    tag_211:\n        /* \"contracts/WallyVesting.sol\":8044:8064  currentTime - _start */\n      tag_214\n        /* \"contracts/WallyVesting.sol\":7405:7420  block.timestamp */\n      swap1\n      timestamp\n        /* \"contracts/WallyVesting.sol\":8044:8064  currentTime - _start */\n      tag_5\n      jump\t// in\n    tag_214:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_194\n      jumpi\n      dup2\n      iszero\n      tag_217\n      jumpi\n      div\n        /* \"contracts/WallyVesting.sol\":7759:8317  if (currentTime >= (_start + _duration) || _revoked) {... */\n      swap1\n        /* \"contracts/WallyVesting.sol\":6767:8425  function vestedAmount() public view returns (uint256 vestedTokens) {... */\n      jump\t// out\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n    tag_217:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      0x12\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      0x04\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n      revert\n        /* \"contracts/WallyVesting.sol\":7763:7810  currentTime >= (_start + _duration) || _revoked */\n    tag_209:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      pop\n      0xff\n        /* \"contracts/WallyVesting.sol\":7802:7810  _revoked */\n      0x03\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/WallyVesting.sol\":7763:7810  currentTime >= (_start + _duration) || _revoked */\n      jump(tag_210)\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n    tag_200:\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      dup3\n      returndatasize\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      gt\n      tag_219\n      jumpi\n    tag_220:\n      dup2\n      tag_221\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_3\n      jump\t// in\n    tag_221:\n      dup2\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_52\n      jumpi\n        /* \"contracts/WallyVesting.sol\":7256:7280  totalCurrent + released_ */\n      tag_202\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap2\n      mload\n        /* \"contracts/WallyVesting.sol\":7191:7222  _token.balanceOf(address(this)) */\n      jump(tag_201)\n    tag_219:\n      returndatasize\n      swap2\n      pop\n      jump(tag_220)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_8:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_226\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_9:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_230\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_230:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_11:\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      dup2\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap1\n      swap5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      swap1\n      swap3\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_232\n      0x64\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_3\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7823:8244  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_73\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      tag_235\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_238:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"contracts/WallyVesting.sol\":1391:9243  contract WallyVesting is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_237)\n\n    auxdata: 0xa264697066735822122096cd499e25a01f34865f58b1c09af047886e55fccd75101a596ad306823d587664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 419,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610120601f610e7c38819003918201601f19168301916001600160401b0383118484101761017b5780849260c094604052833981010312610177576100438161018f565b61004f6020830161018f565b9060408301519160608401519161006d60a06080870151960161018f565b600180556001600160a01b03909116908115610168576001600160a01b03831615610168576001600160a01b03811615610168576001860180871161014557841015610159576100bc906101a3565b5060805260a0528160e05281018091116101455760c05261010052604051610c0d908161024f82396080518181816101eb01528181610465015281816107360152610861015260a0518181816104300152610627015260c0518181816105ca01526108af015260e05181818161015001526108fc01526101005181818161033501526108da0152f35b634e487b7160e01b5f52601160045260245ffd5b6367f675ff60e01b5f5260045ffd5b63e6c4247b60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361017757565b6001600160a01b0381165f9081525f516020610e5c5f395f51905f52602052604090205460ff16610249576001600160a01b03165f8181525f516020610e5c5f395f51905f5260205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b505f9056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146107655750806321df0da714610721578063248a9ca3146106f75780632bc9ed02146106d55780632f2ff15d146106a657806336568abe1461067057806344b1231f14610656578063565a2e2c146106125780635b940081146105ed57806363260e36146105b357806386d1a69f146103ad57806391d1485414610372578063a217fddf14610358578063ad2e8c9b1461031e578063b6549f7514610173578063c5292c6714610139578063d547741f146101035763e33b7de3146100e2575f80fd5b346100ff575f3660031901126100ff576020600254604051908152f35b5f80fd5b346100ff57610137610114366107b8565b9061013261012d825f525f602052600160405f20015490565b6109b3565b610a73565b005b346100ff575f3660031901126100ff5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ff575f3660031901126100ff5761018b610af3565b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156102e75760035460ff81166102d85760ff19166001176003556040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906020816024816001600160a01b0386165afa9081156102cd575f9161029b575b50610240610237610842565b60025490610835565b808211156102935761025191610835565b80610281575b7fab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed05f80a160018055005b61028c913390610b49565b8080610257565b50505f610251565b90506020813d6020116102c5575b816102b6602093836107de565b810103126100ff57518261022b565b3d91506102a9565b6040513d5f823e3d90fd5b6301404c2b60e01b5f5260045ffd5b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b346100ff575f3660031901126100ff5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ff575f3660031901126100ff5760206040515f8152f35b346100ff57610380366107b8565b905f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100ff575f3660031901126100ff576103c5610af3565b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156105a45760ff600354166102d85761040d610842565b61041a6002548092610835565b908115610595576040516370a0823160e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038181166004840181905292947f000000000000000000000000000000000000000000000000000000000000000091821693929091602087602481885afa9687156102cd575f97610557575b50916104b19160209493610b49565b6024604051809481936370a0823160e01b835260048301525afa9081156102cd575f91610521575b7fa1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f60208461051161050a8887610835565b8092610814565b600255604051908152a160018055005b9190506020823d60201161054f575b8161053d602093836107de565b810103126100ff5790516105116104d9565b3d9150610530565b9193929096506020823d60201161058d575b81610576602093836107de565b810103126100ff57905195919290916104b16104a2565b3d9150610569565b63b10205ed60e01b5f5260045ffd5b63ea8e4eb560e01b5f5260045ffd5b346100ff575f3660031901126100ff5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ff575f3660031901126100ff57602061060a610237610842565b604051908152f35b346100ff575f3660031901126100ff576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ff575f3660031901126100ff57602061060a610842565b346100ff5761067e366107b8565b336001600160a01b038216036106975761013791610a73565b63334bd91960e11b5f5260045ffd5b346100ff576101376106b7366107b8565b906106d061012d825f525f602052600160405f20015490565b6109eb565b346100ff575f3660031901126100ff57602060ff600354166040519015158152f35b346100ff5760203660031901126100ff57602061060a6004355f525f602052600160405f20015490565b346100ff575f3660031901126100ff576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ff5760203660031901126100ff576004359063ffffffff60e01b82168092036100ff57602091637965db0b60e01b81149081156107a7575b5015158152f35b6301ffc9a760e01b149050836107a0565b60409060031901126100ff57600435906024356001600160a01b03811681036100ff5790565b90601f8019910116810190811067ffffffffffffffff82111761080057604052565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161082157565b634e487b7160e01b5f52601160045260245ffd5b9190820391821161082157565b6002546040516370a0823160e01b8152306004820152906020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156102cd575f9061097f575b6108a29250610814565b60014201804211610821577f0000000000000000000000000000000000000000000000000000000000000000106108d857505f90565b7f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006109258382610814565b4210801590610973575b1561093a5750905090565b6109449042610835565b9081810291818304149015171561082157811561095f570490565b634e487b7160e01b5f52601260045260245ffd5b5060ff6003541661092f565b506020823d6020116109ab575b81610999602093836107de565b810103126100ff576108a29151610898565b3d915061098c565b5f8181526020818152604080832033845290915290205460ff16156109d55750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610a6d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610a6d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b600260015414610b04576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91610b876064826107de565b519082855af1156102cd575f513d610bce57506001600160a01b0381163b155b610bae5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415610ba756fea264697066735822122096cd499e25a01f34865f58b1c09af047886e55fccd75101a596ad306823d587664736f6c634300081c00337d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
							"opcodes": "PUSH2 0x120 PUSH1 0x1F PUSH2 0xE7C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x17B JUMPI DUP1 DUP5 SWAP3 PUSH1 0xC0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x177 JUMPI PUSH2 0x43 DUP2 PUSH2 0x18F JUMP JUMPDEST PUSH2 0x4F PUSH1 0x20 DUP4 ADD PUSH2 0x18F JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MLOAD SWAP2 PUSH1 0x60 DUP5 ADD MLOAD SWAP2 PUSH2 0x6D PUSH1 0xA0 PUSH1 0x80 DUP8 ADD MLOAD SWAP7 ADD PUSH2 0x18F JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x168 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x168 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x168 JUMPI PUSH1 0x1 DUP7 ADD DUP1 DUP8 GT PUSH2 0x145 JUMPI DUP5 LT ISZERO PUSH2 0x159 JUMPI PUSH2 0xBC SWAP1 PUSH2 0x1A3 JUMP JUMPDEST POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE DUP2 PUSH1 0xE0 MSTORE DUP2 ADD DUP1 SWAP2 GT PUSH2 0x145 JUMPI PUSH1 0xC0 MSTORE PUSH2 0x100 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC0D SWAP1 DUP2 PUSH2 0x24F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1EB ADD MSTORE DUP2 DUP2 PUSH2 0x465 ADD MSTORE DUP2 DUP2 PUSH2 0x736 ADD MSTORE PUSH2 0x861 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x430 ADD MSTORE PUSH2 0x627 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5CA ADD MSTORE PUSH2 0x8AF ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x150 ADD MSTORE PUSH2 0x8FC ADD MSTORE PUSH2 0x100 MLOAD DUP2 DUP2 DUP2 PUSH2 0x335 ADD MSTORE PUSH2 0x8DA ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x67F675FF PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x177 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xE5C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x249 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xE5C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x765 JUMPI POP DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x2BC9ED02 EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x44B1231F EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x565A2E2C EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0x5B940081 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x63260E36 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xB6549F75 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xC5292C67 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x103 JUMPI PUSH4 0xE33B7DE3 EQ PUSH2 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x137 PUSH2 0x114 CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST SWAP1 PUSH2 0x132 PUSH2 0x12D DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH2 0x18B PUSH2 0xAF3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x2D8 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP2 PUSH2 0x29B JUMPI JUMPDEST POP PUSH2 0x240 PUSH2 0x237 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x835 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x293 JUMPI PUSH2 0x251 SWAP2 PUSH2 0x835 JUMP JUMPDEST DUP1 PUSH2 0x281 JUMPI JUMPDEST PUSH32 0xAB9BB9A2DBCE8EB1C5199596521D57563C7289FB1AC680030C44E9A0D16E6ED0 PUSH0 DUP1 LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x28C SWAP2 CALLER SWAP1 PUSH2 0xB49 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x257 JUMP JUMPDEST POP POP PUSH0 PUSH2 0x251 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2C5 JUMPI JUMPDEST DUP2 PUSH2 0x2B6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI MLOAD DUP3 PUSH2 0x22B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x1404C2B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x380 CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH2 0x3C5 PUSH2 0xAF3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5A4 JUMPI PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x2D8 JUMPI PUSH2 0x40D PUSH2 0x842 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x2 SLOAD DUP1 SWAP3 PUSH2 0x835 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x4 DUP5 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP5 PUSH32 0x0 SWAP2 DUP3 AND SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP8 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP8 PUSH2 0x557 JUMPI JUMPDEST POP SWAP2 PUSH2 0x4B1 SWAP2 PUSH1 0x20 SWAP5 SWAP4 PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP2 PUSH2 0x521 JUMPI JUMPDEST PUSH32 0xA1598FB976F7DD9DF63FD18699C54A5744A6A95364166BBD0D77A2F6C8438B1F PUSH1 0x20 DUP5 PUSH2 0x511 PUSH2 0x50A DUP9 DUP8 PUSH2 0x835 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x54F JUMPI JUMPDEST DUP2 PUSH2 0x53D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI SWAP1 MLOAD PUSH2 0x511 PUSH2 0x4D9 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x530 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP7 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x58D JUMPI JUMPDEST DUP2 PUSH2 0x576 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI SWAP1 MLOAD SWAP6 SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x4B1 PUSH2 0x4A2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x569 JUMP JUMPDEST PUSH4 0xB10205ED PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH2 0x60A PUSH2 0x237 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH2 0x60A PUSH2 0x842 JUMP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x67E CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x697 JUMPI PUSH2 0x137 SWAP2 PUSH2 0xA73 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x137 PUSH2 0x6B7 CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST SWAP1 PUSH2 0x6D0 PUSH2 0x12D DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH2 0x60A PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xFF JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x7A7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xFF JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x800 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x821 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x821 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP1 PUSH2 0x97F JUMPI JUMPDEST PUSH2 0x8A2 SWAP3 POP PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x821 JUMPI PUSH32 0x0 LT PUSH2 0x8D8 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH2 0x925 DUP4 DUP3 PUSH2 0x814 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x973 JUMPI JUMPDEST ISZERO PUSH2 0x93A JUMPI POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x944 SWAP1 TIMESTAMP PUSH2 0x835 JUMP JUMPDEST SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x821 JUMPI DUP2 ISZERO PUSH2 0x95F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x92F JUMP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9AB JUMPI JUMPDEST DUP2 PUSH2 0x999 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI PUSH2 0x8A2 SWAP2 MLOAD PUSH2 0x898 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x98C JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9D5 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA6D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA6D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xB04 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH0 SWAP2 PUSH2 0xB87 PUSH1 0x64 DUP3 PUSH2 0x7DE JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2CD JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xBCE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xBAE JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xBA7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xCD BLOBHASH SWAP15 0x25 LOG0 0x1F CALLVALUE DUP7 PUSH0 PC 0xB1 0xC0 SWAP11 CREATE SELFBALANCE DUP9 PUSH15 0x55FCCD75101A596AD306823D587664 PUSH20 0x6F6C634300081C00337D7FFB7A348E1C6A028690 DUP2 LOG2 PUSH6 0x47B49160DD3D 0xF7 0x2D SAR PUSH22 0xA570EB9B698292EC0000000000000000000000000000 ",
							"sourceMap": "1391:7852:12:-:0;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1716:1:6;;-1:-1:-1;;;;;1391:7852:12;;;;2721:20;;2717:49;;-1:-1:-1;;;;;1391:7852:12;;2780:26;2776:55;;-1:-1:-1;;;;;1391:7852:12;;2845:20;2841:49;;1391:7852;;;;;;;;2904:31;;;2900:70;;2981:30;;;:::i;:::-;;1391:7852;3022:29;1391:7852;3061:27;3098:21;;;1391:7852;;;;;;;;3129:38;3177:24;;1391:7852;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:21;1391:7852;;;;;;;;;;3177:24;1391:7852;;;;;;;;;;;;;;;-1:-1:-1;1391:7852:12;;;;;-1:-1:-1;1391:7852:12;2900:70;2944:26;;;-1:-1:-1;2944:26:12;;-1:-1:-1;2944:26:12;2841:49;2750:16;;;-1:-1:-1;2874:16:12;;-1:-1:-1;2874:16:12;1391:7852;-1:-1:-1;1391:7852:12;;;;;;-1:-1:-1;1391:7852:12;;;;;-1:-1:-1;1391:7852:12;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;:::o;6179:316:1:-;-1:-1:-1;;;;;1391:7852:12;;;;;;-1:-1:-1;;;;;;;;;;;1391:7852:12;;;;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;;;-1:-1:-1;;;;;;;;;;;1391:7852:12;;;;;;;-1:-1:-1;;1391:7852:12;;;;;735:10:9;;1391:7852:12;1565:23;;6370:40:1;;1391:7852:12;6370:40:1;6347:4;6424:11;:::o;6272:217::-;6466:12;1391:7852:12;6466:12:1;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bytes32t_address": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"checked_add_uint256": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 2483,
									"id": 252,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 2539,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 2803,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 2675,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_safeTransfer": {
									"entryPoint": 2889,
									"id": 815,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_vestedAmount": {
									"entryPoint": 2114,
									"id": 1622,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1281": [
									{
										"length": 32,
										"start": 491
									},
									{
										"length": 32,
										"start": 1125
									},
									{
										"length": 32,
										"start": 1846
									},
									{
										"length": 32,
										"start": 2145
									}
								],
								"1283": [
									{
										"length": 32,
										"start": 1072
									},
									{
										"length": 32,
										"start": 1575
									}
								],
								"1285": [
									{
										"length": 32,
										"start": 1482
									},
									{
										"length": 32,
										"start": 2223
									}
								],
								"1287": [
									{
										"length": 32,
										"start": 336
									},
									{
										"length": 32,
										"start": 2300
									}
								],
								"1289": [
									{
										"length": 32,
										"start": 821
									},
									{
										"length": 32,
										"start": 2266
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146107655750806321df0da714610721578063248a9ca3146106f75780632bc9ed02146106d55780632f2ff15d146106a657806336568abe1461067057806344b1231f14610656578063565a2e2c146106125780635b940081146105ed57806363260e36146105b357806386d1a69f146103ad57806391d1485414610372578063a217fddf14610358578063ad2e8c9b1461031e578063b6549f7514610173578063c5292c6714610139578063d547741f146101035763e33b7de3146100e2575f80fd5b346100ff575f3660031901126100ff576020600254604051908152f35b5f80fd5b346100ff57610137610114366107b8565b9061013261012d825f525f602052600160405f20015490565b6109b3565b610a73565b005b346100ff575f3660031901126100ff5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ff575f3660031901126100ff5761018b610af3565b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156102e75760035460ff81166102d85760ff19166001176003556040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906020816024816001600160a01b0386165afa9081156102cd575f9161029b575b50610240610237610842565b60025490610835565b808211156102935761025191610835565b80610281575b7fab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed05f80a160018055005b61028c913390610b49565b8080610257565b50505f610251565b90506020813d6020116102c5575b816102b6602093836107de565b810103126100ff57518261022b565b3d91506102a9565b6040513d5f823e3d90fd5b6301404c2b60e01b5f5260045ffd5b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b346100ff575f3660031901126100ff5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ff575f3660031901126100ff5760206040515f8152f35b346100ff57610380366107b8565b905f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100ff575f3660031901126100ff576103c5610af3565b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156105a45760ff600354166102d85761040d610842565b61041a6002548092610835565b908115610595576040516370a0823160e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038181166004840181905292947f000000000000000000000000000000000000000000000000000000000000000091821693929091602087602481885afa9687156102cd575f97610557575b50916104b19160209493610b49565b6024604051809481936370a0823160e01b835260048301525afa9081156102cd575f91610521575b7fa1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f60208461051161050a8887610835565b8092610814565b600255604051908152a160018055005b9190506020823d60201161054f575b8161053d602093836107de565b810103126100ff5790516105116104d9565b3d9150610530565b9193929096506020823d60201161058d575b81610576602093836107de565b810103126100ff57905195919290916104b16104a2565b3d9150610569565b63b10205ed60e01b5f5260045ffd5b63ea8e4eb560e01b5f5260045ffd5b346100ff575f3660031901126100ff5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ff575f3660031901126100ff57602061060a610237610842565b604051908152f35b346100ff575f3660031901126100ff576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ff575f3660031901126100ff57602061060a610842565b346100ff5761067e366107b8565b336001600160a01b038216036106975761013791610a73565b63334bd91960e11b5f5260045ffd5b346100ff576101376106b7366107b8565b906106d061012d825f525f602052600160405f20015490565b6109eb565b346100ff575f3660031901126100ff57602060ff600354166040519015158152f35b346100ff5760203660031901126100ff57602061060a6004355f525f602052600160405f20015490565b346100ff575f3660031901126100ff576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ff5760203660031901126100ff576004359063ffffffff60e01b82168092036100ff57602091637965db0b60e01b81149081156107a7575b5015158152f35b6301ffc9a760e01b149050836107a0565b60409060031901126100ff57600435906024356001600160a01b03811681036100ff5790565b90601f8019910116810190811067ffffffffffffffff82111761080057604052565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161082157565b634e487b7160e01b5f52601160045260245ffd5b9190820391821161082157565b6002546040516370a0823160e01b8152306004820152906020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156102cd575f9061097f575b6108a29250610814565b60014201804211610821577f0000000000000000000000000000000000000000000000000000000000000000106108d857505f90565b7f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006109258382610814565b4210801590610973575b1561093a5750905090565b6109449042610835565b9081810291818304149015171561082157811561095f570490565b634e487b7160e01b5f52601260045260245ffd5b5060ff6003541661092f565b506020823d6020116109ab575b81610999602093836107de565b810103126100ff576108a29151610898565b3d915061098c565b5f8181526020818152604080832033845290915290205460ff16156109d55750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610a6d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610a6d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b600260015414610b04576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91610b876064826107de565b519082855af1156102cd575f513d610bce57506001600160a01b0381163b155b610bae5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415610ba756fea264697066735822122096cd499e25a01f34865f58b1c09af047886e55fccd75101a596ad306823d587664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x765 JUMPI POP DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x2BC9ED02 EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x44B1231F EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x565A2E2C EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0x5B940081 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x63260E36 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xB6549F75 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xC5292C67 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x103 JUMPI PUSH4 0xE33B7DE3 EQ PUSH2 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x137 PUSH2 0x114 CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST SWAP1 PUSH2 0x132 PUSH2 0x12D DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH2 0x18B PUSH2 0xAF3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x2D8 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP2 PUSH2 0x29B JUMPI JUMPDEST POP PUSH2 0x240 PUSH2 0x237 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x835 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x293 JUMPI PUSH2 0x251 SWAP2 PUSH2 0x835 JUMP JUMPDEST DUP1 PUSH2 0x281 JUMPI JUMPDEST PUSH32 0xAB9BB9A2DBCE8EB1C5199596521D57563C7289FB1AC680030C44E9A0D16E6ED0 PUSH0 DUP1 LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x28C SWAP2 CALLER SWAP1 PUSH2 0xB49 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x257 JUMP JUMPDEST POP POP PUSH0 PUSH2 0x251 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2C5 JUMPI JUMPDEST DUP2 PUSH2 0x2B6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI MLOAD DUP3 PUSH2 0x22B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x1404C2B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x380 CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH2 0x3C5 PUSH2 0xAF3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5A4 JUMPI PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x2D8 JUMPI PUSH2 0x40D PUSH2 0x842 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x2 SLOAD DUP1 SWAP3 PUSH2 0x835 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x4 DUP5 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP5 PUSH32 0x0 SWAP2 DUP3 AND SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP8 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP8 PUSH2 0x557 JUMPI JUMPDEST POP SWAP2 PUSH2 0x4B1 SWAP2 PUSH1 0x20 SWAP5 SWAP4 PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP2 PUSH2 0x521 JUMPI JUMPDEST PUSH32 0xA1598FB976F7DD9DF63FD18699C54A5744A6A95364166BBD0D77A2F6C8438B1F PUSH1 0x20 DUP5 PUSH2 0x511 PUSH2 0x50A DUP9 DUP8 PUSH2 0x835 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x54F JUMPI JUMPDEST DUP2 PUSH2 0x53D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI SWAP1 MLOAD PUSH2 0x511 PUSH2 0x4D9 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x530 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP7 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x58D JUMPI JUMPDEST DUP2 PUSH2 0x576 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI SWAP1 MLOAD SWAP6 SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x4B1 PUSH2 0x4A2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x569 JUMP JUMPDEST PUSH4 0xB10205ED PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH2 0x60A PUSH2 0x237 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH2 0x60A PUSH2 0x842 JUMP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x67E CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x697 JUMPI PUSH2 0x137 SWAP2 PUSH2 0xA73 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH2 0x137 PUSH2 0x6B7 CALLDATASIZE PUSH2 0x7B8 JUMP JUMPDEST SWAP1 PUSH2 0x6D0 PUSH2 0x12D DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x20 PUSH2 0x60A PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xFF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xFF JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x7A7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xFF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xFF JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x800 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x821 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x821 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH0 SWAP1 PUSH2 0x97F JUMPI JUMPDEST PUSH2 0x8A2 SWAP3 POP PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x821 JUMPI PUSH32 0x0 LT PUSH2 0x8D8 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH2 0x925 DUP4 DUP3 PUSH2 0x814 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x973 JUMPI JUMPDEST ISZERO PUSH2 0x93A JUMPI POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x944 SWAP1 TIMESTAMP PUSH2 0x835 JUMP JUMPDEST SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x821 JUMPI DUP2 ISZERO PUSH2 0x95F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x92F JUMP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9AB JUMPI JUMPDEST DUP2 PUSH2 0x999 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFF JUMPI PUSH2 0x8A2 SWAP2 MLOAD PUSH2 0x898 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x98C JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9D5 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA6D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA6D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xB04 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH0 SWAP2 PUSH2 0xB87 PUSH1 0x64 DUP3 PUSH2 0x7DE JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2CD JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xBCE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xBAE JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xBA7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xCD BLOBHASH SWAP15 0x25 LOG0 0x1F CALLVALUE DUP7 PUSH0 PC 0xB1 0xC0 SWAP11 CREATE SELFBALANCE DUP9 PUSH15 0x55FCCD75101A596AD306823D587664 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "1391:7852:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;8768:9;1391:7852;;;;;;;;;;;;;;;4747:26:1;1391:7852:12;;;:::i;:::-;4717:18:1;2475:4;4717:18;;3901:6;1391:7852:12;3901:6:1;1391:7852:12;;3901:22:1;1391:7852:12;3901:6:1;1391:7852:12;3901:22:1;1391:7852:12;3810:120:1;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;1391:7852:12;;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;9134:6;1391:7852;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;2227:103:6;;:::i;:::-;735:10:9;1391:7852:12;;;;;;;;;;;;;3519:23:1;3515:108;;5533:8:12;1391:7852;;;;5551:44;;-1:-1:-1;;1391:7852:12;5616:4;1391:7852;5533:8;1391:7852;;;-1:-1:-1;;;5711:31:12;;5736:4;1391:7852;5711:31;;1391:7852;5711:6;;1391:7852;;5711:31;1391:7852;-1:-1:-1;;;;;1391:7852:12;;5711:31;;;;;;;1391:7852;5711:31;;;1391:7852;6519:14;:26;:14;;:::i;:::-;6536:9;1391:7852;6519:26;;:::i;:::-;5819:20;;;;;;5844;;;:::i;:::-;5884:11;5880:81;;5818:51;5976:16;1391:7852;5976:16;;5616:4;1391:7852;;;5880:81;5943:6;735:10:9;;5943:6:12;;:::i;:::-;5880:81;;;;5818:51;;;1391:7852;5818:51;;5711:31;;;1391:7852;5711:31;;1391:7852;5711:31;;;;;;1391:7852;5711:31;;;:::i;:::-;;;1391:7852;;;;;5711:31;;;;;;-1:-1:-1;5711:31:12;;;1391:7852;;;;;;;;;5551:44;4139:23;;;1391:7852;5572:23;1391:7852;;5572:23;3515:108:1;3565:47;;;1391:7852:12;3565:47:1;735:10:9;1391:7852:12;;1565:23;1391:7852;;;;3565:47:1;1391:7852:12;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;9225:9;1391:7852;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2954:29:1;1391:7852:12;;;;;;-1:-1:-1;1391:7852:12;;;;;;-1:-1:-1;1391:7852:12;;;;;;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;2227:103:6;;:::i;:::-;3451:10:12;1391:7852;;;;;;;;;;;;;3430:32;3426:60;;1391:7852;4100:8;1391:7852;;4118:44;;6519:14;;:::i;:::-;:26;6536:9;1391:7852;6519:26;;;:::i;:::-;4226:15;;;4222:46;;1391:7852;;-1:-1:-1;;;4584:30:12;;4601:12;-1:-1:-1;;;;;1391:7852:12;;;;4584:30;;1391:7852;;;;;4584:6;1391:7852;;;;;;;;;4584:30;1391:7852;;4584:30;;;;;;;1391:7852;4584:30;;;1391:7852;4658:10;;;;1391:7852;4658:10;;;:::i;:::-;4584:30;1391:7852;;;;;;;;;4713:30;;1391:7852;4713:30;;1391:7852;4713:30;;;;;;;1391:7852;4713:30;;;1391:7852;4967:33;1391:7852;4848:50;4920:31;4848:50;;;;:::i;:::-;4920:31;;;:::i;:::-;6536:9;1391:7852;;;;;;4967:33;1716:1:6;1391:7852:12;;;4713:30;;;;1391:7852;4713:30;;1391:7852;4713:30;;;;;;1391:7852;4713:30;;;:::i;:::-;;;1391:7852;;;;;;4920:31;4713:30;;;;;-1:-1:-1;4713:30:12;;4584;;;;;;;1391:7852;4584:30;;1391:7852;4584:30;;;;;;1391:7852;4584:30;;;:::i;:::-;;;1391:7852;;;;;;;4584:30;;;;4658:10;4584:30;;;;;-1:-1:-1;4584:30:12;;4222:46;4250:18;;;1391:7852;4250:18;1391:7852;;4250:18;3426:60;3471:15;;;1391:7852;3471:15;1391:7852;;3471:15;1391:7852;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;9046:6;1391:7852;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;6519:26;:14;;:::i;:26::-;1391:7852;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;;8865:12;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;:::i;:::-;;;;;;;:::i;:::-;735:10:9;-1:-1:-1;;;;;1391:7852:12;;5421:34:1;5417:102;;5529:37;;;:::i;5417:102::-;5478:30;;;1391:7852:12;5478:30:1;1391:7852:12;;5478:30:1;1391:7852:12;;;;4330:25:1;1391:7852:12;;;:::i;:::-;4300:18:1;2475:4;4300:18;;3901:6;1391:7852:12;3901:6:1;1391:7852:12;;3901:22:1;1391:7852:12;3901:6:1;1391:7852:12;3901:22:1;1391:7852:12;3810:120:1;;2475:4;4330:25;:::i;1391:7852:12:-;;;;;;-1:-1:-1;;1391:7852:12;;;;;;8673:8;1391:7852;;;;;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;;3901:6:1;1391:7852:12;3901:6:1;1391:7852:12;;3901:22:1;1391:7852:12;3901:6:1;1391:7852:12;3901:22:1;1391:7852:12;3810:120:1;;1391:7852:12;;;;;;-1:-1:-1;;1391:7852:12;;;;;;8958:6;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:1;;;:87;;;;1391:7852:12;;;;;;;2673:87:1;-1:-1:-1;;;862:40:10;;-1:-1:-1;2673:87:1;;;1391:7852:12;;;;;;;;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1391:7852:12;;;;;-1:-1:-1;1391:7852:12;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;6767:1658::-;6910:9;1391:7852;;;-1:-1:-1;;;7191:31:12;;7216:4;7191:31;;;1391:7852;;;;7191:31;1391:7852;7191:6;-1:-1:-1;;;;;1391:7852:12;7191:31;;;;;;1391:7852;7191:31;;;6767:1658;7256:24;;;;:::i;:::-;7599:1;7405:15;1391:7852;7405:15;;1391:7852;;;7604:6;-1:-1:-1;7604:6:12;;7671:16;1391:7852;7581:736;6767:1658::o;7581:736::-;7788:9;;7779:6;:18;7788:9;7779:6;:18;:::i;:::-;7405:15;7763:35;;;:47;;;7581:736;7759:558;;;7890:28;;;7759:558;6767:1658::o;7759:558::-;8044:20;7405:15;;8044:20;:::i;:::-;1391:7852;;;;;;;;;;;;;;;;;;;;7759:558;6767:1658::o;1391:7852::-;;;;;;;7191:31;1391:7852;7191:31;1391:7852;;7763:47;1391:7852;;7802:8;1391:7852;;7763:47;;7191:31;;1391:7852;7191:31;;1391:7852;7191:31;;;;;;1391:7852;7191:31;;;:::i;:::-;;;1391:7852;;;;7256:24;1391:7852;;7191:31;;;;;-1:-1:-1;7191:31:12;;3199:103:1;2954:6;1391:7852:12;;;;;;;;;;;735:10:9;1391:7852:12;;;;;;;;;;3519:23:1;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:9;3565:47:1;1391:7852:12;;;;2954:6:1;3565:47;6179:316;1391:7852:12;;;;;;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;;;735:10:9;;1391:7852:12;;6370:40:1;;1391:7852:12;6370:40:1;6347:4;6424:11;:::o;6272:217::-;6466:12;;1391:7852:12;6466:12:1;:::o;6730:317::-;1391:7852:12;;;;;;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;;;;;;;;;;;;;-1:-1:-1;;1391:7852:12;;;735:10:9;;1391:7852:12;;6922:40:1;;1391:7852:12;6922:40:1;1391:7852:12;6976:11:1;:::o;2336:287:6:-;1759:1;2468:7;1391:7852:12;2468:19:6;1759:1;;;2468:7;1391:7852:12;2336:287:6:o;1759:1::-;1391:7852:12;;-1:-1:-1;;;1759:1:6;;;;;;;;;;;;;;;;;;;;1219:160:8;1391:7852:12;;-1:-1:-1;;;1328:43:8;;;;;;;-1:-1:-1;;;;;1391:7852:12;;;1328:43:8;;;1391:7852:12;;;;;;;;;1328:43:8;;;1219:160;;-1:-1:-1;;1328:43:8;;1391:7852:12;1328:43:8;:::i;:::-;7823:421;;;;;;;;;-1:-1:-1;7823:421:8;;8258:15;;-1:-1:-1;;;;;;1391:7852:12;;8276:26:8;:31;8258:68;8254:146;;1219:160;:::o;8254:146::-;-1:-1:-1;;;;8349:40:8;;;-1:-1:-1;;;;;1391:7852:12;;;;8349:40:8;1391:7852:12;1328:43:8;;8349:40;8258:68;8325:1;8310:16;;8258:68;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "617000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "416",
								"getBeneficiary()": "infinite",
								"getCliff()": "infinite",
								"getDuration()": "infinite",
								"getRoleAdmin(bytes32)": "2385",
								"getStart()": "infinite",
								"getToken()": "infinite",
								"grantRole(bytes32,address)": "33361",
								"hasRole(bytes32,address)": "2735",
								"isRevoked()": "2334",
								"releasableAmount()": "infinite",
								"release()": "infinite",
								"renounceRole(bytes32,address)": "28951",
								"revoke()": "infinite",
								"revokeRole(bytes32,address)": "33622",
								"supportsInterface(bytes4)": "270",
								"totalReleased()": "2627",
								"vestedAmount()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 9243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 9243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 9243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2721,
									"end": 2741,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2721,
									"end": 2741,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2717,
									"end": 2766,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2717,
									"end": 2766,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2806,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2776,
									"end": 2831,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2845,
									"end": 2865,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2890,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2841,
									"end": 2890,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2904,
									"end": 2935,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2904,
									"end": 2935,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2904,
									"end": 2935,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2900,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2900,
									"end": 2970,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2981,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2981,
									"end": 3011,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2981,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2981,
									"end": 3011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2981,
									"end": 3011,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2981,
									"end": 3011,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2981,
									"end": 3011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3022,
									"end": 3051,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 3061,
									"end": 3088,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3098,
									"end": 3119,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3098,
									"end": 3119,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 3098,
									"end": 3119,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 3129,
									"end": 3167,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3177,
									"end": 3201,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3177,
									"end": 3201,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1281"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1283"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1285"
								},
								{
									"begin": 3098,
									"end": 3119,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1287"
								},
								{
									"begin": 3177,
									"end": 3201,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1289"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "RETURN",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2900,
									"end": 2970,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2900,
									"end": 2970,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "PUSH",
									"source": 12,
									"value": "67F675FF"
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2890,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2841,
									"end": 2890,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 2766,
									"name": "PUSH",
									"source": 12,
									"value": "E6C4247B"
								},
								{
									"begin": 2750,
									"end": 2766,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 2750,
									"end": 2766,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2874,
									"end": 2890,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2874,
									"end": 2890,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2874,
									"end": 2890,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1565,
									"end": 1588,
									"name": "PUSH",
									"source": 12,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1565,
									"end": 1588,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 9243,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096cd499e25a01f34865f58b1c09af047886e55fccd75101a596ad306823d587664736f6c634300081c0033",
									".code": [
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "21DF0DA7"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "2BC9ED02"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "44B1231F"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "565A2E2C"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "5B940081"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "63260E36"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "86D1A69F"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "AD2E8C9B"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "B6549F75"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "C5292C67"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E33B7DE3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8768,
											"end": 8777,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9140,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1287"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5541,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5551,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5551,
											"end": 5595,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5533,
											"end": 5541,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5740,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1281"
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6519,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6519,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5844,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5884,
											"end": 5895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5976,
											"end": 5992,
											"name": "PUSH",
											"source": 12,
											"value": "AB9BB9A2DBCE8EB1C5199596521D57563C7289FB1AC680030C44E9A0D16E6ED0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 5992,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5976,
											"end": 5992,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 5943,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5880,
											"end": 5961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5711,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 5711,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5551,
											"end": 5595,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5551,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "PUSH",
											"source": 12,
											"value": "1404C2B"
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1588,
											"name": "PUSH",
											"source": 12,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9234,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1289"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3461,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3430,
											"end": 3462,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3426,
											"end": 3486,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4100,
											"end": 4108,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4118,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 4118,
											"end": 4162,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6519,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6519,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4222,
											"end": 4268,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1283"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1281"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4658,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4967,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "A1598FB976F7DD9DF63FD18699C54A5744A6A95364166BBD0D77A2F6C8438B1F"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4848,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 4848,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4920,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4967,
											"end": 5000,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4713,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4584,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4584,
											"end": 4614,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4268,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4222,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 12,
											"value": "B10205ED"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3486,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3426,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "PUSH",
											"source": 12,
											"value": "EA8E4EB5"
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1285"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6519,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6519,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8877,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1283"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8673,
											"end": 8681,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8958,
											"end": 8964,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1281"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 8425,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6767,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6919,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1281"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 8425,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 6767,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7256,
											"end": 7280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7604,
											"end": 7610,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7604,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 7604,
											"end": 7610,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 8317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7581,
											"end": 8317,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 7581,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1289"
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1287"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7779,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7798,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7798,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7798,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7581,
											"end": 8317,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7581,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 8044,
											"end": 8064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 8317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7802,
											"end": 7810,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7191,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 8
										}
									]
								},
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec"
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getBeneficiary()": "565a2e2c",
							"getCliff()": "63260e36",
							"getDuration()": "ad2e8c9b",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getStart()": "c5292c67",
							"getToken()": "21df0da7",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isRevoked()": "2bc9ed02",
							"releasableAmount()": "5b940081",
							"release()": "86d1a69f",
							"renounceRole(bytes32,address)": "36568abe",
							"revoke()": "b6549f75",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalReleased()": "e33b7de3",
							"vestedAmount()": "44b1231f"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 185,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)"
							},
							{
								"astId": 638,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1291,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "_released",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1293,
								"contract": "contracts/WallyVesting.sol:WallyVesting",
								"label": "_revoked",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)180_storage"
							},
							"t_struct(RoleData)180_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 177,
										"contract": "contracts/WallyVesting.sol:WallyVesting",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 179,
										"contract": "contracts/WallyVesting.sol:WallyVesting",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
					"exportedSymbols": {
						"FixedPointMathLib": [
							158
						]
					},
					"id": 159,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPointMathLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:273:0",
								"text": "@notice Arithmetic library with operations for fixed-point numbers.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)"
							},
							"fullyImplemented": true,
							"id": 158,
							"linearizedBaseContracts": [
								158
							],
							"name": "FixedPointMathLib",
							"nameLocation": "349:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nameLocation": "592:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "566:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 4,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "606:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "609:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "606:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 7,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "615:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "606:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "WAD",
									"nameLocation": "649:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "623:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "655:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "778:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 22,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 23,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "809:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 24,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "812:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 21,
														"name": "mulDivDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "795:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "795:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 26,
												"nodeType": "Return",
												"src": "788:28:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulWadDown",
									"nameLocation": "713:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "743:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "735:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:22:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "769:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:9:0"
									},
									"scope": 158,
									"src": "704:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "946:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "972:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "975:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "978:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 37,
														"name": "mulDivUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "963:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "956:26:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulWadUp",
									"nameLocation": "883:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:0"
									},
									"scope": 158,
									"src": "874:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1112:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 54,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 55,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1143:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 56,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1148:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 53,
														"name": "mulDivDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1129:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "1122:28:0"
											}
										]
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divWadDown",
									"nameLocation": "1047:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1066:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1058:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1077:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1069:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:22:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:9:0"
									},
									"scope": 158,
									"src": "1038:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1280:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 70,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1306:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 71,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1309:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 72,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1314:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 69,
														"name": "mulDivUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 68,
												"id": 74,
												"nodeType": "Return",
												"src": "1290:26:0"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divWadUp",
									"nameLocation": "1217:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1234:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1226:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1245:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1237:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:22:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:9:0"
									},
									"scope": 158,
									"src": "1208:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1691:399:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1753:331:0",
													"nodeType": "YulBlock",
													"src": "1753:331:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "1936:44:0",
																"nodeType": "YulBlock",
																"src": "1936:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1961:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1961:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1964:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1954:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "1954:6:0"
																			},
																			"nativeSrc": "1954:12:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:12:0"
																		},
																		"nativeSrc": "1954:12:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "1878:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "1878:11:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "1902:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "1902:1:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "1908:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "1908:1:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "MAX_UINT256",
																												"nativeSrc": "1915:11:0",
																												"nodeType": "YulIdentifier",
																												"src": "1915:11:0"
																											},
																											{
																												"name": "y",
																												"nativeSrc": "1928:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "1928:1:0"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "1911:3:0",
																											"nodeType": "YulIdentifier",
																											"src": "1911:3:0"
																										},
																										"nativeSrc": "1911:19:0",
																										"nodeType": "YulFunctionCall",
																										"src": "1911:19:0"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nativeSrc": "1905:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "1905:2:0"
																								},
																								"nativeSrc": "1905:26:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1905:26:0"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1898:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1898:3:0"
																						},
																						"nativeSrc": "1898:34:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1898:34:0"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1891:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "1891:6:0"
																				},
																				"nativeSrc": "1891:42:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1891:42:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "1874:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1874:3:0"
																		},
																		"nativeSrc": "1874:60:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1874:60:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1867:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:0"
																},
																"nativeSrc": "1867:68:0",
																"nodeType": "YulFunctionCall",
																"src": "1867:68:0"
															},
															"nativeSrc": "1864:116:0",
															"nodeType": "YulIf",
															"src": "1864:116:0"
														},
														{
															"nativeSrc": "2042:32:0",
															"nodeType": "YulAssignment",
															"src": "2042:32:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2055:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2055:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2058:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2058:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2051:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:0"
																		},
																		"nativeSrc": "2051:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:9:0"
																	},
																	{
																		"name": "denominator",
																		"nativeSrc": "2062:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "2062:11:0"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2047:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:0"
																},
																"nativeSrc": "2047:27:0",
																"nodeType": "YulFunctionCall",
																"src": "2047:27:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "2042:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2042:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1915:11:0",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "1878:11:0",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "2062:11:0",
														"valueSize": 1
													},
													{
														"declaration": 78,
														"isOffset": false,
														"isSlot": false,
														"src": "1908:1:0",
														"valueSize": 1
													},
													{
														"declaration": 78,
														"isOffset": false,
														"isSlot": false,
														"src": "2055:1:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "1902:1:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "1928:1:0",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "2058:1:0",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:1:0",
														"valueSize": 1
													}
												],
												"id": 87,
												"nodeType": "InlineAssembly",
												"src": "1744:340:0"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivDown",
									"nameLocation": "1573:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1601:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1593:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1639:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1631:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:73:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1688:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1680:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:11:0"
									},
									"scope": 158,
									"src": "1564:526:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2221:547:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2283:479:0",
													"nodeType": "YulBlock",
													"src": "2283:479:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "2466:44:0",
																"nodeType": "YulBlock",
																"src": "2466:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2491:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2491:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2494:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2494:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2484:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "2484:6:0"
																			},
																			"nativeSrc": "2484:12:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2484:12:0"
																		},
																		"nativeSrc": "2484:12:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "2484:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "2408:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "2408:11:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "2432:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "2432:1:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "2438:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "2438:1:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "MAX_UINT256",
																												"nativeSrc": "2445:11:0",
																												"nodeType": "YulIdentifier",
																												"src": "2445:11:0"
																											},
																											{
																												"name": "y",
																												"nativeSrc": "2458:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "2458:1:0"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "2441:3:0",
																											"nodeType": "YulIdentifier",
																											"src": "2441:3:0"
																										},
																										"nativeSrc": "2441:19:0",
																										"nodeType": "YulFunctionCall",
																										"src": "2441:19:0"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nativeSrc": "2435:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "2435:2:0"
																								},
																								"nativeSrc": "2435:26:0",
																								"nodeType": "YulFunctionCall",
																								"src": "2435:26:0"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "2428:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2428:3:0"
																						},
																						"nativeSrc": "2428:34:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2428:34:0"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2421:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "2421:6:0"
																				},
																				"nativeSrc": "2421:42:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2421:42:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2404:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:0"
																		},
																		"nativeSrc": "2404:60:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:60:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2397:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:0"
																},
																"nativeSrc": "2397:68:0",
																"nodeType": "YulFunctionCall",
																"src": "2397:68:0"
															},
															"nativeSrc": "2394:116:0",
															"nodeType": "YulIf",
															"src": "2394:116:0"
														},
														{
															"nativeSrc": "2679:73:0",
															"nodeType": "YulAssignment",
															"src": "2679:73:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nativeSrc": "2699:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "2699:1:0"
																							},
																							{
																								"name": "y",
																								"nativeSrc": "2702:1:0",
																								"nodeType": "YulIdentifier",
																								"src": "2702:1:0"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "2695:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2695:3:0"
																						},
																						"nativeSrc": "2695:9:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2695:9:0"
																					},
																					{
																						"name": "denominator",
																						"nativeSrc": "2706:11:0",
																						"nodeType": "YulIdentifier",
																						"src": "2706:11:0"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nativeSrc": "2691:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:0"
																				},
																				"nativeSrc": "2691:27:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:27:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2720:1:0",
																				"nodeType": "YulLiteral",
																				"src": "2720:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2688:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2688:2:0"
																		},
																		"nativeSrc": "2688:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:34:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2732:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "2732:1:0"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "2735:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "2735:1:0"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2728:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2728:3:0"
																				},
																				"nativeSrc": "2728:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2728:9:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "2739:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "2739:11:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2724:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:0"
																		},
																		"nativeSrc": "2724:27:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:27:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2684:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2684:3:0"
																},
																"nativeSrc": "2684:68:0",
																"nodeType": "YulFunctionCall",
																"src": "2684:68:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "2679:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2679:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "2445:11:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2408:11:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2706:11:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2739:11:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "2438:1:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "2699:1:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "2732:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2432:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2458:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2702:1:0",
														"valueSize": 1
													},
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2735:1:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "2679:1:0",
														"valueSize": 1
													}
												],
												"id": 100,
												"nodeType": "InlineAssembly",
												"src": "2274:488:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivUp",
									"nameLocation": "2105:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2131:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "2169:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2161:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:73:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2218:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2210:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:11:0"
									},
									"scope": 158,
									"src": "2096:672:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2890:2662:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2952:2594:0",
													"nodeType": "YulBlock",
													"src": "2952:2594:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2994:254:0",
																		"nodeType": "YulBlock",
																		"src": "2994:254:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nativeSrc": "3044:85:0",
																							"nodeType": "YulBlock",
																							"src": "3044:85:0",
																							"statements": [
																								{
																									"nativeSrc": "3100:11:0",
																									"nodeType": "YulAssignment",
																									"src": "3100:11:0",
																									"value": {
																										"name": "scalar",
																										"nativeSrc": "3105:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "3105:6:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3100:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3100:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3037:92:0",
																						"nodeType": "YulCase",
																						"src": "3037:92:0",
																						"value": {
																							"kind": "number",
																							"nativeSrc": "3042:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3042:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nativeSrc": "3154:80:0",
																							"nodeType": "YulBlock",
																							"src": "3154:80:0",
																							"statements": [
																								{
																									"nativeSrc": "3210:6:0",
																									"nodeType": "YulAssignment",
																									"src": "3210:6:0",
																									"value": {
																										"kind": "number",
																										"nativeSrc": "3215:1:0",
																										"nodeType": "YulLiteral",
																										"src": "3215:1:0",
																										"type": "",
																										"value": "0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3210:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3210:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3146:88:0",
																						"nodeType": "YulCase",
																						"src": "3146:88:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"name": "n",
																					"nativeSrc": "3019:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "3019:1:0"
																				},
																				"nativeSrc": "3012:222:0",
																				"nodeType": "YulSwitch",
																				"src": "3012:222:0"
																			}
																		]
																	},
																	"nativeSrc": "2987:261:0",
																	"nodeType": "YulCase",
																	"src": "2987:261:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2992:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2992:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3269:2267:0",
																		"nodeType": "YulBlock",
																		"src": "3269:2267:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nativeSrc": "3327:115:0",
																							"nodeType": "YulBlock",
																							"src": "3327:115:0",
																							"statements": [
																								{
																									"nativeSrc": "3413:11:0",
																									"nodeType": "YulAssignment",
																									"src": "3413:11:0",
																									"value": {
																										"name": "scalar",
																										"nativeSrc": "3418:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "3418:6:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3413:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3413:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3320:122:0",
																						"nodeType": "YulCase",
																						"src": "3320:122:0",
																						"value": {
																							"kind": "number",
																							"nativeSrc": "3325:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3325:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nativeSrc": "3467:104:0",
																							"nodeType": "YulBlock",
																							"src": "3467:104:0",
																							"statements": [
																								{
																									"nativeSrc": "3547:6:0",
																									"nodeType": "YulAssignment",
																									"src": "3547:6:0",
																									"value": {
																										"name": "x",
																										"nativeSrc": "3552:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "3552:1:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "3547:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "3547:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "3459:112:0",
																						"nodeType": "YulCase",
																						"src": "3459:112:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"name": "n",
																							"nativeSrc": "3298:1:0",
																							"nodeType": "YulIdentifier",
																							"src": "3298:1:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3301:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3301:1:0",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nativeSrc": "3294:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3294:3:0"
																					},
																					"nativeSrc": "3294:9:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3294:9:0"
																				},
																				"nativeSrc": "3287:284:0",
																				"nodeType": "YulSwitch",
																				"src": "3287:284:0"
																			},
																			{
																				"nativeSrc": "3651:26:0",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3651:26:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3667:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3667:1:0",
																							"type": "",
																							"value": "1"
																						},
																						{
																							"name": "scalar",
																							"nativeSrc": "3670:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "3670:6:0"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3663:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3663:3:0"
																					},
																					"nativeSrc": "3663:14:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3663:14:0"
																				},
																				"variables": [
																					{
																						"name": "half",
																						"nativeSrc": "3655:4:0",
																						"nodeType": "YulTypedName",
																						"src": "3655:4:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3951:1571:0",
																					"nodeType": "YulBlock",
																					"src": "3951:1571:0",
																					"statements": [
																						{
																							"body": {
																								"nativeSrc": "4125:60:0",
																								"nodeType": "YulBlock",
																								"src": "4125:60:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "4158:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4158:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "4161:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4161:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "4151:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "4151:6:0"
																											},
																											"nativeSrc": "4151:12:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4151:12:0"
																										},
																										"nativeSrc": "4151:12:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "4151:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "4117:3:0",
																										"nodeType": "YulLiteral",
																										"src": "4117:3:0",
																										"type": "",
																										"value": "128"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "4122:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4122:1:0"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "4113:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4113:3:0"
																								},
																								"nativeSrc": "4113:11:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4113:11:0"
																							},
																							"nativeSrc": "4110:75:0",
																							"nodeType": "YulIf",
																							"src": "4110:75:0"
																						},
																						{
																							"nativeSrc": "4247:19:0",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4247:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "4261:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4261:1:0"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "4264:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4264:1:0"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nativeSrc": "4257:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4257:3:0"
																								},
																								"nativeSrc": "4257:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4257:9:0"
																							},
																							"variables": [
																								{
																									"name": "xx",
																									"nativeSrc": "4251:2:0",
																									"nodeType": "YulTypedName",
																									"src": "4251:2:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"nativeSrc": "4340:28:0",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4340:28:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xx",
																										"nativeSrc": "4359:2:0",
																										"nodeType": "YulIdentifier",
																										"src": "4359:2:0"
																									},
																									{
																										"name": "half",
																										"nativeSrc": "4363:4:0",
																										"nodeType": "YulIdentifier",
																										"src": "4363:4:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4355:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4355:3:0"
																								},
																								"nativeSrc": "4355:13:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4355:13:0"
																							},
																							"variables": [
																								{
																									"name": "xxRound",
																									"nativeSrc": "4344:7:0",
																									"nodeType": "YulTypedName",
																									"src": "4344:7:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "4464:60:0",
																								"nodeType": "YulBlock",
																								"src": "4464:60:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "4497:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4497:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "4500:1:0",
																													"nodeType": "YulLiteral",
																													"src": "4500:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "4490:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "4490:6:0"
																											},
																											"nativeSrc": "4490:12:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4490:12:0"
																										},
																										"nativeSrc": "4490:12:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "4490:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nativeSrc": "4451:7:0",
																										"nodeType": "YulIdentifier",
																										"src": "4451:7:0"
																									},
																									{
																										"name": "xx",
																										"nativeSrc": "4460:2:0",
																										"nodeType": "YulIdentifier",
																										"src": "4460:2:0"
																									}
																								],
																								"functionName": {
																									"name": "lt",
																									"nativeSrc": "4448:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "4448:2:0"
																								},
																								"nativeSrc": "4448:15:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4448:15:0"
																							},
																							"nativeSrc": "4445:79:0",
																							"nodeType": "YulIf",
																							"src": "4445:79:0"
																						},
																						{
																							"nativeSrc": "4594:25:0",
																							"nodeType": "YulAssignment",
																							"src": "4594:25:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nativeSrc": "4603:7:0",
																										"nodeType": "YulIdentifier",
																										"src": "4603:7:0"
																									},
																									{
																										"name": "scalar",
																										"nativeSrc": "4612:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "4612:6:0"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "4599:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4599:3:0"
																								},
																								"nativeSrc": "4599:20:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4599:20:0"
																							},
																							"variableNames": [
																								{
																									"name": "x",
																									"nativeSrc": "4594:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "4594:1:0"
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "4691:813:0",
																								"nodeType": "YulBlock",
																								"src": "4691:813:0",
																								"statements": [
																									{
																										"nativeSrc": "4759:19:0",
																										"nodeType": "YulVariableDeclaration",
																										"src": "4759:19:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "z",
																													"nativeSrc": "4773:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "4773:1:0"
																												},
																												{
																													"name": "x",
																													"nativeSrc": "4776:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "4776:1:0"
																												}
																											],
																											"functionName": {
																												"name": "mul",
																												"nativeSrc": "4769:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "4769:3:0"
																											},
																											"nativeSrc": "4769:9:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4769:9:0"
																										},
																										"variables": [
																											{
																												"name": "zx",
																												"nativeSrc": "4763:2:0",
																												"nodeType": "YulTypedName",
																												"src": "4763:2:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nativeSrc": "4881:209:0",
																											"nodeType": "YulBlock",
																											"src": "4881:209:0",
																											"statements": [
																												{
																													"body": {
																														"nativeSrc": "4988:76:0",
																														"nodeType": "YulBlock",
																														"src": "4988:76:0",
																														"statements": [
																															{
																																"expression": {
																																	"arguments": [
																																		{
																																			"kind": "number",
																																			"nativeSrc": "5029:1:0",
																																			"nodeType": "YulLiteral",
																																			"src": "5029:1:0",
																																			"type": "",
																																			"value": "0"
																																		},
																																		{
																																			"kind": "number",
																																			"nativeSrc": "5032:1:0",
																																			"nodeType": "YulLiteral",
																																			"src": "5032:1:0",
																																			"type": "",
																																			"value": "0"
																																		}
																																	],
																																	"functionName": {
																																		"name": "revert",
																																		"nativeSrc": "5022:6:0",
																																		"nodeType": "YulIdentifier",
																																		"src": "5022:6:0"
																																	},
																																	"nativeSrc": "5022:12:0",
																																	"nodeType": "YulFunctionCall",
																																	"src": "5022:12:0"
																																},
																																"nativeSrc": "5022:12:0",
																																"nodeType": "YulExpressionStatement",
																																"src": "5022:12:0"
																															}
																														]
																													},
																													"condition": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"name": "x",
																																		"nativeSrc": "4984:1:0",
																																		"nodeType": "YulIdentifier",
																																		"src": "4984:1:0"
																																	}
																																],
																																"functionName": {
																																	"name": "iszero",
																																	"nativeSrc": "4977:6:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "4977:6:0"
																																},
																																"nativeSrc": "4977:9:0",
																																"nodeType": "YulFunctionCall",
																																"src": "4977:9:0"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nativeSrc": "4970:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "4970:6:0"
																														},
																														"nativeSrc": "4970:17:0",
																														"nodeType": "YulFunctionCall",
																														"src": "4970:17:0"
																													},
																													"nativeSrc": "4967:97:0",
																													"nodeType": "YulIf",
																													"src": "4967:97:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "zx",
																																	"nativeSrc": "4869:2:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "4869:2:0"
																																},
																																{
																																	"name": "x",
																																	"nativeSrc": "4873:1:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "4873:1:0"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nativeSrc": "4865:3:0",
																																"nodeType": "YulIdentifier",
																																"src": "4865:3:0"
																															},
																															"nativeSrc": "4865:10:0",
																															"nodeType": "YulFunctionCall",
																															"src": "4865:10:0"
																														},
																														{
																															"name": "z",
																															"nativeSrc": "4877:1:0",
																															"nodeType": "YulIdentifier",
																															"src": "4877:1:0"
																														}
																													],
																													"functionName": {
																														"name": "eq",
																														"nativeSrc": "4862:2:0",
																														"nodeType": "YulIdentifier",
																														"src": "4862:2:0"
																													},
																													"nativeSrc": "4862:17:0",
																													"nodeType": "YulFunctionCall",
																													"src": "4862:17:0"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "4855:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "4855:6:0"
																											},
																											"nativeSrc": "4855:25:0",
																											"nodeType": "YulFunctionCall",
																											"src": "4855:25:0"
																										},
																										"nativeSrc": "4852:238:0",
																										"nodeType": "YulIf",
																										"src": "4852:238:0"
																									},
																									{
																										"nativeSrc": "5172:28:0",
																										"nodeType": "YulVariableDeclaration",
																										"src": "5172:28:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zx",
																													"nativeSrc": "5191:2:0",
																													"nodeType": "YulIdentifier",
																													"src": "5191:2:0"
																												},
																												{
																													"name": "half",
																													"nativeSrc": "5195:4:0",
																													"nodeType": "YulIdentifier",
																													"src": "5195:4:0"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "5187:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "5187:3:0"
																											},
																											"nativeSrc": "5187:13:0",
																											"nodeType": "YulFunctionCall",
																											"src": "5187:13:0"
																										},
																										"variables": [
																											{
																												"name": "zxRound",
																												"nativeSrc": "5176:7:0",
																												"nodeType": "YulTypedName",
																												"src": "5176:7:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nativeSrc": "5304:68:0",
																											"nodeType": "YulBlock",
																											"src": "5304:68:0",
																											"statements": [
																												{
																													"expression": {
																														"arguments": [
																															{
																																"kind": "number",
																																"nativeSrc": "5341:1:0",
																																"nodeType": "YulLiteral",
																																"src": "5341:1:0",
																																"type": "",
																																"value": "0"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "5344:1:0",
																																"nodeType": "YulLiteral",
																																"src": "5344:1:0",
																																"type": "",
																																"value": "0"
																															}
																														],
																														"functionName": {
																															"name": "revert",
																															"nativeSrc": "5334:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "5334:6:0"
																														},
																														"nativeSrc": "5334:12:0",
																														"nodeType": "YulFunctionCall",
																														"src": "5334:12:0"
																													},
																													"nativeSrc": "5334:12:0",
																													"nodeType": "YulExpressionStatement",
																													"src": "5334:12:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nativeSrc": "5291:7:0",
																													"nodeType": "YulIdentifier",
																													"src": "5291:7:0"
																												},
																												{
																													"name": "zx",
																													"nativeSrc": "5300:2:0",
																													"nodeType": "YulIdentifier",
																													"src": "5300:2:0"
																												}
																											],
																											"functionName": {
																												"name": "lt",
																												"nativeSrc": "5288:2:0",
																												"nodeType": "YulIdentifier",
																												"src": "5288:2:0"
																											},
																											"nativeSrc": "5288:15:0",
																											"nodeType": "YulFunctionCall",
																											"src": "5288:15:0"
																										},
																										"nativeSrc": "5285:87:0",
																										"nodeType": "YulIf",
																										"src": "5285:87:0"
																									},
																									{
																										"nativeSrc": "5457:25:0",
																										"nodeType": "YulAssignment",
																										"src": "5457:25:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nativeSrc": "5466:7:0",
																													"nodeType": "YulIdentifier",
																													"src": "5466:7:0"
																												},
																												{
																													"name": "scalar",
																													"nativeSrc": "5475:6:0",
																													"nodeType": "YulIdentifier",
																													"src": "5475:6:0"
																												}
																											],
																											"functionName": {
																												"name": "div",
																												"nativeSrc": "5462:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "5462:3:0"
																											},
																											"nativeSrc": "5462:20:0",
																											"nodeType": "YulFunctionCall",
																											"src": "5462:20:0"
																										},
																										"variableNames": [
																											{
																												"name": "z",
																												"nativeSrc": "5457:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "5457:1:0"
																											}
																										]
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "n",
																										"nativeSrc": "4685:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "4685:1:0"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4688:1:0",
																										"nodeType": "YulLiteral",
																										"src": "4688:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "mod",
																									"nativeSrc": "4681:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "4681:3:0"
																								},
																								"nativeSrc": "4681:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "4681:9:0"
																							},
																							"nativeSrc": "4678:826:0",
																							"nodeType": "YulIf",
																							"src": "4678:826:0"
																						}
																					]
																				},
																				"condition": {
																					"name": "n",
																					"nativeSrc": "3824:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "3824:1:0"
																				},
																				"nativeSrc": "3695:1827:0",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3826:124:0",
																					"nodeType": "YulBlock",
																					"src": "3826:124:0",
																					"statements": [
																						{
																							"nativeSrc": "3918:14:0",
																							"nodeType": "YulAssignment",
																							"src": "3918:14:0",
																							"value": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3927:1:0",
																										"nodeType": "YulLiteral",
																										"src": "3927:1:0",
																										"type": "",
																										"value": "1"
																									},
																									{
																										"name": "n",
																										"nativeSrc": "3930:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "3930:1:0"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "3923:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "3923:3:0"
																								},
																								"nativeSrc": "3923:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "3923:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nativeSrc": "3918:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "3918:1:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3699:124:0",
																					"nodeType": "YulBlock",
																					"src": "3699:124:0",
																					"statements": [
																						{
																							"nativeSrc": "3791:14:0",
																							"nodeType": "YulAssignment",
																							"src": "3791:14:0",
																							"value": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3800:1:0",
																										"nodeType": "YulLiteral",
																										"src": "3800:1:0",
																										"type": "",
																										"value": "1"
																									},
																									{
																										"name": "n",
																										"nativeSrc": "3803:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "3803:1:0"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "3796:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "3796:3:0"
																								},
																								"nativeSrc": "3796:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "3796:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nativeSrc": "3791:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "3791:1:0"
																								}
																							]
																						}
																					]
																				},
																				"src": "3695:1827:0"
																			}
																		]
																	},
																	"nativeSrc": "3261:2275:0",
																	"nodeType": "YulCase",
																	"src": "3261:2275:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "x",
																"nativeSrc": "2973:1:0",
																"nodeType": "YulIdentifier",
																"src": "2973:1:0"
															},
															"nativeSrc": "2966:2570:0",
															"nodeType": "YulSwitch",
															"src": "2966:2570:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3019:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3298:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3791:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3803:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3824:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3918:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "3930:1:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "4685:1:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "3105:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "3418:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "3670:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "4612:6:0",
														"valueSize": 1
													},
													{
														"declaration": 108,
														"isOffset": false,
														"isSlot": false,
														"src": "5475:6:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "2973:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "3552:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4122:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4261:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4264:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4594:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4776:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3100:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3210:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3413:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "3547:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "4773:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "4877:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "5457:1:0",
														"valueSize": 1
													}
												],
												"id": 113,
												"nodeType": "InlineAssembly",
												"src": "2943:2603:0"
											}
										]
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rpow",
									"nameLocation": "2783:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2805:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2797:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "2824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "scalar",
												"nameLocation": "2843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:68:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2887:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2879:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:11:0"
									},
									"scope": 158,
									"src": "2774:2778:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "5805:3337:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5867:3269:0",
													"nodeType": "YulBlock",
													"src": "5867:3269:0",
													"statements": [
														{
															"nativeSrc": "5881:10:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5881:10:0",
															"value": {
																"name": "x",
																"nativeSrc": "5890:1:0",
																"nodeType": "YulIdentifier",
																"src": "5890:1:0"
															},
															"variables": [
																{
																	"name": "y",
																	"nativeSrc": "5885:1:0",
																	"nodeType": "YulTypedName",
																	"src": "5885:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5971:8:0",
															"nodeType": "YulAssignment",
															"src": "5971:8:0",
															"value": {
																"kind": "number",
																"nativeSrc": "5976:3:0",
																"nodeType": "YulLiteral",
																"src": "5976:3:0",
																"type": "",
																"value": "181"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "5971:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "5971:1:0"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6465:80:0",
																"nodeType": "YulBlock",
																"src": "6465:80:0",
																"statements": [
																	{
																		"nativeSrc": "6483:16:0",
																		"nodeType": "YulAssignment",
																		"src": "6483:16:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6492:3:0",
																					"nodeType": "YulLiteral",
																					"src": "6492:3:0",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6497:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6497:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6488:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6488:3:0"
																			},
																			"nativeSrc": "6488:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6488:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6483:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6483:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6516:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6516:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6525:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6525:2:0",
																					"type": "",
																					"value": "64"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6529:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6529:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6521:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6521:3:0"
																			},
																			"nativeSrc": "6521:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6521:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6516:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6516:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6422:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6422:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6425:37:0",
																				"nodeType": "YulLiteral",
																				"src": "6425:37:0",
																				"type": "",
																				"value": "0x10000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6419:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6419:2:0"
																		},
																		"nativeSrc": "6419:44:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6419:44:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6412:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:0"
																},
																"nativeSrc": "6412:52:0",
																"nodeType": "YulFunctionCall",
																"src": "6412:52:0"
															},
															"nativeSrc": "6409:136:0",
															"nodeType": "YulIf",
															"src": "6409:136:0"
														},
														{
															"body": {
																"nativeSrc": "6598:79:0",
																"nodeType": "YulBlock",
																"src": "6598:79:0",
																"statements": [
																	{
																		"nativeSrc": "6616:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6616:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6625:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6625:2:0",
																					"type": "",
																					"value": "64"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6629:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6629:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6621:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6621:3:0"
																			},
																			"nativeSrc": "6621:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6621:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6616:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6616:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6648:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6648:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6657:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6657:2:0",
																					"type": "",
																					"value": "32"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6661:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6661:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6653:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6653:3:0"
																			},
																			"nativeSrc": "6653:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6653:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6648:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6648:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6571:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6571:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6574:21:0",
																				"nodeType": "YulLiteral",
																				"src": "6574:21:0",
																				"type": "",
																				"value": "0x1000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6568:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6568:2:0"
																		},
																		"nativeSrc": "6568:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:28:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6561:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:0"
																},
																"nativeSrc": "6561:36:0",
																"nodeType": "YulFunctionCall",
																"src": "6561:36:0"
															},
															"nativeSrc": "6558:119:0",
															"nodeType": "YulIf",
															"src": "6558:119:0"
														},
														{
															"body": {
																"nativeSrc": "6722:79:0",
																"nodeType": "YulBlock",
																"src": "6722:79:0",
																"statements": [
																	{
																		"nativeSrc": "6740:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6740:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6749:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6749:2:0",
																					"type": "",
																					"value": "32"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6753:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6753:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6745:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6745:3:0"
																			},
																			"nativeSrc": "6745:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6745:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6740:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6740:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6772:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6772:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6781:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6781:2:0",
																					"type": "",
																					"value": "16"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6785:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6785:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6777:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6777:3:0"
																			},
																			"nativeSrc": "6777:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6777:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6772:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6772:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6703:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6703:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6706:13:0",
																				"nodeType": "YulLiteral",
																				"src": "6706:13:0",
																				"type": "",
																				"value": "0x10000000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6700:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6700:2:0"
																		},
																		"nativeSrc": "6700:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6700:20:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6693:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:0"
																},
																"nativeSrc": "6693:28:0",
																"nodeType": "YulFunctionCall",
																"src": "6693:28:0"
															},
															"nativeSrc": "6690:111:0",
															"nodeType": "YulIf",
															"src": "6690:111:0"
														},
														{
															"body": {
																"nativeSrc": "6842:78:0",
																"nodeType": "YulBlock",
																"src": "6842:78:0",
																"statements": [
																	{
																		"nativeSrc": "6860:15:0",
																		"nodeType": "YulAssignment",
																		"src": "6860:15:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6869:2:0",
																					"nodeType": "YulLiteral",
																					"src": "6869:2:0",
																					"type": "",
																					"value": "16"
																				},
																				{
																					"name": "y",
																					"nativeSrc": "6873:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6873:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6865:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6865:3:0"
																			},
																			"nativeSrc": "6865:10:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6865:10:0"
																		},
																		"variableNames": [
																			{
																				"name": "y",
																				"nativeSrc": "6860:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6860:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6892:14:0",
																		"nodeType": "YulAssignment",
																		"src": "6892:14:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6901:1:0",
																					"nodeType": "YulLiteral",
																					"src": "6901:1:0",
																					"type": "",
																					"value": "8"
																				},
																				{
																					"name": "z",
																					"nativeSrc": "6904:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "6904:1:0"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "6897:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6897:3:0"
																			},
																			"nativeSrc": "6897:9:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6897:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "6892:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6892:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6827:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6827:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6830:9:0",
																				"nodeType": "YulLiteral",
																				"src": "6830:9:0",
																				"type": "",
																				"value": "0x1000000"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6824:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "6824:2:0"
																		},
																		"nativeSrc": "6824:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:16:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6817:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:0"
																},
																"nativeSrc": "6817:24:0",
																"nodeType": "YulFunctionCall",
																"src": "6817:24:0"
															},
															"nativeSrc": "6814:106:0",
															"nodeType": "YulIf",
															"src": "6814:106:0"
														},
														{
															"nativeSrc": "8110:35:0",
															"nodeType": "YulAssignment",
															"src": "8110:35:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8119:2:0",
																		"nodeType": "YulLiteral",
																		"src": "8119:2:0",
																		"type": "",
																		"value": "18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8127:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8127:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8134:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8134:1:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8137:5:0",
																						"nodeType": "YulLiteral",
																						"src": "8137:5:0",
																						"type": "",
																						"value": "65536"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8130:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8130:3:0"
																				},
																				"nativeSrc": "8130:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8130:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8123:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:0"
																		},
																		"nativeSrc": "8123:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:21:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8115:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8115:3:0"
																},
																"nativeSrc": "8115:30:0",
																"nodeType": "YulFunctionCall",
																"src": "8115:30:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8110:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8110:1:0"
																}
															]
														},
														{
															"nativeSrc": "8306:30:0",
															"nodeType": "YulAssignment",
															"src": "8306:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8315:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8315:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8322:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8322:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8329:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8329:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8332:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8332:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8325:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8325:3:0"
																				},
																				"nativeSrc": "8325:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8325:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8318:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:0"
																		},
																		"nativeSrc": "8318:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8311:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:0"
																},
																"nativeSrc": "8311:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8311:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8306:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8306:1:0"
																}
															]
														},
														{
															"nativeSrc": "8349:30:0",
															"nodeType": "YulAssignment",
															"src": "8349:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8358:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8358:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8365:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8365:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8372:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8372:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8375:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8375:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8368:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8368:3:0"
																				},
																				"nativeSrc": "8368:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8368:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8361:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8361:3:0"
																		},
																		"nativeSrc": "8361:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8361:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8354:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8354:3:0"
																},
																"nativeSrc": "8354:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8354:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8349:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8349:1:0"
																}
															]
														},
														{
															"nativeSrc": "8392:30:0",
															"nodeType": "YulAssignment",
															"src": "8392:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8401:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8401:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8408:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8408:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8415:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8415:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8418:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8418:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8411:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8411:3:0"
																				},
																				"nativeSrc": "8411:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8411:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8404:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8404:3:0"
																		},
																		"nativeSrc": "8404:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8404:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8397:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:0"
																},
																"nativeSrc": "8397:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8397:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8392:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8392:1:0"
																}
															]
														},
														{
															"nativeSrc": "8435:30:0",
															"nodeType": "YulAssignment",
															"src": "8435:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8444:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8444:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8451:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8451:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8458:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8458:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8461:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8461:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8454:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8454:3:0"
																				},
																				"nativeSrc": "8454:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8454:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8447:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8447:3:0"
																		},
																		"nativeSrc": "8447:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8447:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8440:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:0"
																},
																"nativeSrc": "8440:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8440:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8435:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8435:1:0"
																}
															]
														},
														{
															"nativeSrc": "8478:30:0",
															"nodeType": "YulAssignment",
															"src": "8478:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8487:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8487:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8494:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8494:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8501:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8501:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8504:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8504:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8497:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8497:3:0"
																				},
																				"nativeSrc": "8497:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8497:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8490:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8490:3:0"
																		},
																		"nativeSrc": "8490:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8490:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8483:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8483:3:0"
																},
																"nativeSrc": "8483:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8483:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8478:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8478:1:0"
																}
															]
														},
														{
															"nativeSrc": "8521:30:0",
															"nodeType": "YulAssignment",
															"src": "8521:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8530:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8530:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8537:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8537:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8544:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8544:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8547:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8547:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8540:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8540:3:0"
																				},
																				"nativeSrc": "8540:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8540:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8533:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:0"
																		},
																		"nativeSrc": "8533:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8533:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8526:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8526:3:0"
																},
																"nativeSrc": "8526:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8526:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8521:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8521:1:0"
																}
															]
														},
														{
															"nativeSrc": "8564:30:0",
															"nodeType": "YulAssignment",
															"src": "8564:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8573:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8573:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "z",
																				"nativeSrc": "8580:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "8580:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8587:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8587:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "8590:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "8590:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "8583:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8583:3:0"
																				},
																				"nativeSrc": "8583:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "8583:9:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8576:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8576:3:0"
																		},
																		"nativeSrc": "8576:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8576:17:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8569:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:0"
																},
																"nativeSrc": "8569:25:0",
																"nodeType": "YulFunctionCall",
																"src": "8569:25:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "8564:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "8564:1:0"
																}
															]
														},
														{
															"nativeSrc": "9097:29:0",
															"nodeType": "YulAssignment",
															"src": "9097:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "z",
																		"nativeSrc": "9106:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9106:1:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9116:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "9116:1:0"
																					},
																					{
																						"name": "z",
																						"nativeSrc": "9119:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "9119:1:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9112:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "9112:3:0"
																				},
																				"nativeSrc": "9112:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "9112:9:0"
																			},
																			{
																				"name": "z",
																				"nativeSrc": "9123:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "9123:1:0"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9109:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "9109:2:0"
																		},
																		"nativeSrc": "9109:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9109:16:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9102:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:0"
																},
																"nativeSrc": "9102:24:0",
																"nodeType": "YulFunctionCall",
																"src": "9102:24:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "9097:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9097:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "5890:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8329:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8372:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8415:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8458:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8501:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8544:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:1:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "9116:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "5971:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6516:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6529:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6648:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6661:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6772:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6785:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6892:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "6904:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8110:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8127:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8306:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8322:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8332:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8349:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8365:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8375:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8392:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8408:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8418:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8435:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8451:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8461:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8478:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8494:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8504:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8521:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8537:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8547:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8564:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8580:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "8590:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9097:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9106:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9119:1:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "9123:1:0",
														"valueSize": 1
													}
												],
												"id": 122,
												"nodeType": "InlineAssembly",
												"src": "5858:3278:0"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "5755:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5768:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5760:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:11:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5802:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5794:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5793:11:0"
									},
									"scope": 158,
									"src": "5746:3396:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "9223:207:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9285:139:0",
													"nodeType": "YulBlock",
													"src": "9285:139:0",
													"statements": [
														{
															"nativeSrc": "9400:14:0",
															"nodeType": "YulAssignment",
															"src": "9400:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9409:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9409:1:0"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9412:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9412:1:0"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "9405:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:0"
																},
																"nativeSrc": "9405:9:0",
																"nodeType": "YulFunctionCall",
																"src": "9405:9:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "9400:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9400:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 126,
														"isOffset": false,
														"isSlot": false,
														"src": "9409:1:0",
														"valueSize": 1
													},
													{
														"declaration": 128,
														"isOffset": false,
														"isSlot": false,
														"src": "9412:1:0",
														"valueSize": 1
													},
													{
														"declaration": 131,
														"isOffset": false,
														"isSlot": false,
														"src": "9400:1:0",
														"valueSize": 1
													}
												],
												"id": 133,
												"nodeType": "InlineAssembly",
												"src": "9276:148:0"
											}
										]
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMod",
									"nameLocation": "9157:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9175:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "9167:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "9178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9166:22:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "9220:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "9212:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9211:11:0"
									},
									"scope": 158,
									"src": "9148:282:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "9511:210:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9573:142:0",
													"nodeType": "YulBlock",
													"src": "9573:142:0",
													"statements": [
														{
															"nativeSrc": "9691:14:0",
															"nodeType": "YulAssignment",
															"src": "9691:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9700:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9700:1:0"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9703:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "9703:1:0"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9696:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9696:3:0"
																},
																"nativeSrc": "9696:9:0",
																"nodeType": "YulFunctionCall",
																"src": "9696:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9691:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9691:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "9691:1:0",
														"valueSize": 1
													},
													{
														"declaration": 137,
														"isOffset": false,
														"isSlot": false,
														"src": "9700:1:0",
														"valueSize": 1
													},
													{
														"declaration": 139,
														"isOffset": false,
														"isSlot": false,
														"src": "9703:1:0",
														"valueSize": 1
													}
												],
												"id": 144,
												"nodeType": "InlineAssembly",
												"src": "9564:151:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeDiv",
									"nameLocation": "9445:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9463:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "9455:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9474:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "9466:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9454:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "9508:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "9500:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9499:11:0"
									},
									"scope": 158,
									"src": "9436:285:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "9804:247:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9866:179:0",
													"nodeType": "YulBlock",
													"src": "9866:179:0",
													"statements": [
														{
															"nativeSrc": "9998:37:0",
															"nodeType": "YulAssignment",
															"src": "9998:37:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10014:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "10014:1:0"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "10017:1:0",
																						"nodeType": "YulIdentifier",
																						"src": "10017:1:0"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nativeSrc": "10010:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "10010:3:0"
																				},
																				"nativeSrc": "10010:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "10010:9:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10021:1:0",
																				"nodeType": "YulLiteral",
																				"src": "10021:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10007:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "10007:2:0"
																		},
																		"nativeSrc": "10007:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10007:16:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "10029:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "10029:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "10032:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "10032:1:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10025:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10025:3:0"
																		},
																		"nativeSrc": "10025:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10025:9:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10003:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:0"
																},
																"nativeSrc": "10003:32:0",
																"nodeType": "YulFunctionCall",
																"src": "10003:32:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nativeSrc": "9998:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "9998:1:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 148,
														"isOffset": false,
														"isSlot": false,
														"src": "10014:1:0",
														"valueSize": 1
													},
													{
														"declaration": 148,
														"isOffset": false,
														"isSlot": false,
														"src": "10029:1:0",
														"valueSize": 1
													},
													{
														"declaration": 150,
														"isOffset": false,
														"isSlot": false,
														"src": "10017:1:0",
														"valueSize": 1
													},
													{
														"declaration": 150,
														"isOffset": false,
														"isSlot": false,
														"src": "10032:1:0",
														"valueSize": 1
													},
													{
														"declaration": 153,
														"isOffset": false,
														"isSlot": false,
														"src": "9998:1:0",
														"valueSize": 1
													}
												],
												"id": 155,
												"nodeType": "InlineAssembly",
												"src": "9857:188:0"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeDivUp",
									"nameLocation": "9736:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9756:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "9748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9767:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "9759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9747:22:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "9801:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "9793:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9792:11:0"
									},
									"scope": 158,
									"src": "9727:324:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 159,
							"src": "341:9712:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:10011:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							454
						],
						"Context": [
							1209
						],
						"ERC165": [
							1233
						],
						"IAccessControl": [
							537
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 538,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 161,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 537,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 1210,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 163,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1209,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 1234,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 165,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1233,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 168,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1209,
										"src": "1988:7:1"
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 170,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 537,
										"src": "1997:14:1"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 172,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1233,
										"src": "2013:6:1"
									},
									"id": 173,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								1233,
								1245,
								537,
								1209
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 180,
									"members": [
										{
											"constant": false,
											"id": 177,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 176,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 179,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 178,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 454,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 184,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 181,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 183,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 182,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 180,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 180,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$180_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 188,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 186,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 193,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															273
														],
														"referencedDeclaration": 252,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 197,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 199,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 190,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1232
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 208,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 210,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$537_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$537_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 209,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$537",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 216,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 214,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$454_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1232,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 219,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 201,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 454,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										504
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 231,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 233,
															"indexExpression": {
																"id": 232,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$180_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 236,
													"indexExpression": {
														"id": 235,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 230,
												"id": 237,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 454,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 247,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															273
														],
														"referencedDeclaration": 273,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 454,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 261,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 262,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 260,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 266,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 267,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 265,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 454,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 281,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 283,
														"indexExpression": {
															"id": 282,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$180_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 179,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 280,
												"id": 285,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 454,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										520
									],
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 302,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 295,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 294,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 454,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										528
									],
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 321,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 319,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 315,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 314,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 454,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 334,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 337,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 339,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 344,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 342,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 454,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 356,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 358,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 362,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 364,
															"indexExpression": {
																"id": 363,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$180_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 366,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 370,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 371,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 372,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 369,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 454,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 387,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 388,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 386,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 385,
															"id": 411,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 391,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 393,
																			"indexExpression": {
																				"id": 392,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$180_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 396,
																	"indexExpression": {
																		"id": 395,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 399,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 401,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 402,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 403,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 400,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 385,
															"id": 408,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 454,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 426,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 424,
															"id": 449,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 429,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 431,
																			"indexExpression": {
																				"id": 430,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$180_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 434,
																	"indexExpression": {
																		"id": 433,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 440,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 441,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 424,
															"id": 446,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 454,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "1953:5096:1",
							"usedErrors": [
								464,
								467
							],
							"usedEvents": [
								476,
								485,
								494
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							537
						]
					},
					"id": 538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 537,
							"linearizedBaseContracts": [
								537
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 464,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 467,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 476,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 485,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 494,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 537,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 537,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 514,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 537,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 522,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 537,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 537,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 538,
							"src": "226:3116:2",
							"usedErrors": [
								464,
								467
							],
							"usedEvents": [
								476,
								485,
								494
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							619
						],
						"IERC165": [
							1245
						],
						"IERC20": [
							770
						]
					},
					"id": 620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 539,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 628,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 540,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 624,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1245,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 545,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 770,
										"src": "590:6:3"
									},
									"id": 546,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 547,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "598:7:3"
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 544,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 619,
							"linearizedBaseContracts": [
								619,
								1245,
								770
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 619,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 619,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 619,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 619,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 619,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 619,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 620,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								704,
								713
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1245
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1246,
							"src": "132:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 622,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1245,
										"src": "140:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							770
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 771,
							"src": "131:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 626,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							692
						]
					},
					"id": 693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 692,
							"linearizedBaseContracts": [
								692
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 633,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 692,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 631,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 632,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 636,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 692,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 634,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 638,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 692,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 641,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 642,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 692,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 649,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 652,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 653,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 657,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 662,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 692,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 675,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 676,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 692,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 687,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 685,
												"id": 689,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 692,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 693,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							770
						]
					},
					"id": 771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 770,
							"linearizedBaseContracts": [
								770
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 704,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 713,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 770,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 770,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 770,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 770,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 770,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 770,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 771,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								704,
								713
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							619
						],
						"IERC20": [
							770
						],
						"SafeERC20": [
							1179
						]
					},
					"id": 1180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 771,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 773,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 620,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 775,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 619,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 777,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1179,
							"linearizedBaseContracts": [
								1179
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 782,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 791,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 806,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 737,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 808,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 809,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 810,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 804,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 802,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 793,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 770,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1179,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 832,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 769,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 834,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 835,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 830,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 828,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 770,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1179,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "2548:139:8",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "2558:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 859,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1179",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1179",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 857,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2612:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 855,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2581:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "2581:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2643:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 866,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2650:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2659:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 868,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "2674:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2630:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:8"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2493:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 844,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "2493:6:8"
													},
													"referencedDeclaration": 770,
													"src": "2493:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2507:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2524:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:8"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:8"
									},
									"scope": 1179,
									"src": "2462:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "3453:370:8",
										"statements": [
											{
												"id": 914,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:8",
												"statements": [
													{
														"assignments": [
															885
														],
														"declarations": [
															{
																"constant": false,
																"id": 885,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 914,
																"src": "3487:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 894,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 890,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1179",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1179",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 888,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 892,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "3545:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3514:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$770",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 747,
																"src": "3514:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 895,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "3571:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 896,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "3590:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 905,
														"nodeType": "IfStatement",
														"src": "3567:160:8",
														"trueBody": {
															"id": 904,
															"nodeType": "Block",
															"src": "3609:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 899,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 879,
																				"src": "3667:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 900,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "3676:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 901,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "3694:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 898,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "3634:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 903,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 907,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3753:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$770",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 908,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "3760:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 909,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "3769:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 910,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "3788:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$770",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 906,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "3740:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 913,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3386:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 875,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "3386:6:8"
													},
													"referencedDeclaration": 770,
													"src": "3386:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3400:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3417:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:8"
									},
									"scope": 1179,
									"src": "3355:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "4477:303:8",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "4487:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 931,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "4530:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 757,
															"src": "4530:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 933,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "4546:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "4555:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 935,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 929,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:8"
											},
											{
												"condition": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 939,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "4602:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 940,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "4609:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$770",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 938,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4578:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "4573:201:8",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "4624:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 944,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "4658:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 947,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 920,
																					"src": "4680:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$770",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 757,
																				"src": "4680:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 949,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "4696:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 950,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 951,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 945,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 943,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4638:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 956,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "4743:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 957,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "4750:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 955,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4723:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4422:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "4422:6:8"
													},
													"referencedDeclaration": 770,
													"src": "4422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4436:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4453:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:8"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:8"
									},
									"scope": 1179,
									"src": "4400:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "5227:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 976,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "5241:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 990,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5350:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "5354:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 992,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "5361:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 988,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "5328:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$619",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 570,
																"src": "5328:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1003,
													"nodeType": "IfStatement",
													"src": "5323:117:8",
													"trueBody": {
														"id": 1002,
														"nodeType": "Block",
														"src": "5368:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 998,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "5422:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 996,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 995,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "5389:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1001,
																"nodeType": "RevertStatement",
																"src": "5382:47:8"
															}
														]
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "5237:203:8",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "5262:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "5289:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 983,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "5296:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 984,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "5300:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 981,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5276:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5156:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$619",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 965,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "5156:8:8"
													},
													"referencedDeclaration": 619,
													"src": "5156:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$619",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5172:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5184:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "5199:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:8"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:8"
									},
									"scope": 1179,
									"src": "5124:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "5965:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1021,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "5979:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1036,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "6102:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1037,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "6108:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "6112:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1039,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "6119:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1034,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6076:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$619",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 596,
																"src": "6076:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1050,
													"nodeType": "IfStatement",
													"src": "6071:127:8",
													"trueBody": {
														"id": 1049,
														"nodeType": "Block",
														"src": "6126:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1045,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1010,
																					"src": "6180:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1043,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1042,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "6147:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1048,
																"nodeType": "RevertStatement",
																"src": "6140:47:8"
															}
														]
													}
												},
												"id": 1051,
												"nodeType": "IfStatement",
												"src": "5975:223:8",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "6000:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1027,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "6031:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1028,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "6038:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "6044:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1030,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "6048:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1026,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "6014:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1032,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$619",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1009,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1008,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "5843:8:8"
													},
													"referencedDeclaration": 619,
													"src": "5843:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$619",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5867:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5889:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5909:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5932:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:8"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:8"
									},
									"scope": 1179,
									"src": "5798:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "6971:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1066,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6985:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1080,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "7093:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1081,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "7097:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1082,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "7104:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1078,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "7072:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$619",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 618,
																"src": "7072:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1093,
													"nodeType": "IfStatement",
													"src": "7067:116:8",
													"trueBody": {
														"id": 1092,
														"nodeType": "Block",
														"src": "7111:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1088,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "7165:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$619",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1086,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1085,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "7132:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1091,
																"nodeType": "RevertStatement",
																"src": "7125:47:8"
															}
														]
													}
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "6981:202:8",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "7006:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "7033:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1073,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "7040:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1074,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "7044:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$619",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "7020:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6900:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$619",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1055,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "6900:8:8"
													},
													"referencedDeclaration": 619,
													"src": "6900:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$619",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6916:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6928:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6943:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:8"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:8"
									},
									"scope": 1179,
									"src": "6869:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "7756:650:8",
										"statements": [
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "7766:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:8"
											},
											{
												"assignments": [
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "7794:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:8",
													"nodeType": "YulBlock",
													"src": "7848:396:8",
													"statements": [
														{
															"nativeSrc": "7862:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:8"
																		},
																		"nativeSrc": "7882:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:8"
																		},
																		"nativeSrc": "7899:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:8"
																		},
																		"nativeSrc": "7916:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:8"
																},
																"nativeSrc": "7877:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:8",
																"nodeType": "YulBlock",
																"src": "7998:157:8",
																"statements": [
																	{
																		"nativeSrc": "8016:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:8"
																			},
																			"nativeSrc": "8027:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:8"
																					},
																					"nativeSrc": "8078:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:8"
																			},
																			"nativeSrc": "8055:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:8"
																		},
																		"nativeSrc": "8055:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:8"
																					},
																					"nativeSrc": "8124:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:8"
																			},
																			"nativeSrc": "8112:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:8"
																		},
																		"nativeSrc": "8112:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:8"
																},
																"nativeSrc": "7982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:8"
															},
															"nativeSrc": "7979:176:8",
															"nodeType": "YulIf",
															"src": "7979:176:8"
														},
														{
															"nativeSrc": "8168:30:8",
															"nodeType": "YulAssignment",
															"src": "8168:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:8"
																},
																"nativeSrc": "8182:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:8"
																}
															]
														},
														{
															"nativeSrc": "8211:23:8",
															"nodeType": "YulAssignment",
															"src": "8211:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:8"
																},
																"nativeSrc": "8226:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1106,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1100,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1111,
												"nodeType": "InlineAssembly",
												"src": "7823:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1112,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8258:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1123,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "8310:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1117,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "8284:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$770",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$770",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1115,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "8254:146:8",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "8328:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "8382:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$770",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$770",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "8349:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1133,
															"nodeType": "RevertStatement",
															"src": "8342:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7715:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1098,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "7715:6:8"
													},
													"referencedDeclaration": 770,
													"src": "7715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7729:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:8"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:8"
									},
									"scope": 1179,
									"src": "7686:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "8997:391:8",
										"statements": [
											{
												"assignments": [
													1149
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9007:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1148,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:8"
											},
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9029:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:8"
											},
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9057:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:8",
													"nodeType": "YulBlock",
													"src": "9111:174:8",
													"statements": [
														{
															"nativeSrc": "9125:71:8",
															"nodeType": "YulAssignment",
															"src": "9125:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:8"
																		},
																		"nativeSrc": "9141:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:8"
																		},
																		"nativeSrc": "9158:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:8"
																		},
																		"nativeSrc": "9175:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:8"
																},
																"nativeSrc": "9136:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:8"
																}
															]
														},
														{
															"nativeSrc": "9209:30:8",
															"nodeType": "YulAssignment",
															"src": "9209:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:8"
																},
																"nativeSrc": "9223:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:8"
																}
															]
														},
														{
															"nativeSrc": "9252:23:8",
															"nodeType": "YulAssignment",
															"src": "9252:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:8"
																},
																"nativeSrc": "9267:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1152,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1155,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1149,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1141,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1157,
												"nodeType": "InlineAssembly",
												"src": "9086:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1158,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "9301:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1159,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "9313:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1170,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "9364:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1164,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "9339:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$770",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$770",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1162,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1176,
												"nodeType": "Return",
												"src": "9294:87:8"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8941:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "8941:6:8"
													},
													"referencedDeclaration": 770,
													"src": "8941:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8955:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8991:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:8"
									},
									"scope": 1179,
									"src": "8908:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1180,
							"src": "698:8692:8",
							"usedErrors": [
								782,
								791
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1209
						]
					},
					"id": 1210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1209,
							"linearizedBaseContracts": [
								1209
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1187,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1189,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1209,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1196,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1195,
												"id": 1198,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1209,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1204,
												"id": 1206,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1209,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1210,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1233
						],
						"IERC165": [
							1245
						]
					},
					"id": 1234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1246,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1212,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1245,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1215,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "688:7:10"
									},
									"id": 1216,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1214,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1233,
							"linearizedBaseContracts": [
								1233,
								1245
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "845:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "862:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1226,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1245_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1245_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1225,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1245",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1230,
												"nodeType": "Return",
												"src": "855:47:10"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "790:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:10"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "839:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:10"
									},
									"scope": 1233,
									"src": "763:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1234,
							"src": "660:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1245
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1236,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1245,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1246,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/WallyVesting.sol": {
				"ast": {
					"absolutePath": "contracts/WallyVesting.sol",
					"exportedSymbols": {
						"AccessControl": [
							454
						],
						"CliffGreaterThanDuration": [
							1257
						],
						"Context": [
							1209
						],
						"ERC165": [
							1233
						],
						"FixedPointMathLib": [
							158
						],
						"IAccessControl": [
							537
						],
						"IERC1363": [
							619
						],
						"IERC20": [
							770
						],
						"InvalidAddress": [
							1255
						],
						"NotAuthorized": [
							1259
						],
						"NothingToRelease": [
							1261
						],
						"ReentrancyGuard": [
							692
						],
						"SafeERC20": [
							1179
						],
						"VestingRevokedAlready": [
							1253
						],
						"WallyVesting": [
							1680
						]
					},
					"id": 1681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 455,
							"src": "57:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 1180,
							"src": "116:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 693,
							"src": "182:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
							"file": ".deps/npm/@openzeppelin/contracts/utils/math/FixedPointMathLib.sol",
							"id": 1251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 159,
							"src": "245:76:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "01404c2b",
							"id": 1253,
							"name": "VestingRevokedAlready",
							"nameLocation": "423:21:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1252,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "444:2:12"
							},
							"src": "417:30:12"
						},
						{
							"errorSelector": "e6c4247b",
							"id": 1255,
							"name": "InvalidAddress",
							"nameLocation": "454:14:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1254,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "468:2:12"
							},
							"src": "448:23:12"
						},
						{
							"errorSelector": "67f675ff",
							"id": 1257,
							"name": "CliffGreaterThanDuration",
							"nameLocation": "478:24:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1256,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "502:2:12"
							},
							"src": "472:33:12"
						},
						{
							"errorSelector": "ea8e4eb5",
							"id": 1259,
							"name": "NotAuthorized",
							"nameLocation": "512:13:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1258,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "525:2:12"
							},
							"src": "506:22:12"
						},
						{
							"errorSelector": "b10205ed",
							"id": 1261,
							"name": "NothingToRelease",
							"nameLocation": "535:16:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1260,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "551:2:12"
							},
							"src": "529:25:12"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1263,
										"name": "AccessControl",
										"nameLocations": [
											"1416:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "1416:13:12"
									},
									"id": 1264,
									"nodeType": "InheritanceSpecifier",
									"src": "1416:13:12"
								},
								{
									"baseName": {
										"id": 1265,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1431:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 692,
										"src": "1431:15:12"
									},
									"id": 1266,
									"nodeType": "InheritanceSpecifier",
									"src": "1431:15:12"
								}
							],
							"canonicalName": "WallyVesting",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1262,
								"nodeType": "StructuredDocumentation",
								"src": "556:834:12",
								"text": " @title WallyVesting\n @dev Token vesting with cliff + linear release. Admin can revoke.\n      Uses SafeERC20 for better compatibility with fee-on-transfer tokens \n      or tokens that do not return bool in transfer().\n NOTE: This version includes the following changes purely to address\n       automated \"gas optimization\" flags:\n       1) Caches address(this) in local variables when used multiple times\n       2) Uses \"cheaper inequalities\" (>=, <=) as suggested, though this \n          can subtly change logic if not done carefully.\n       3) Marks the constructor payable\n       4) Caches storage variables (e.g. _token, _beneficiary) if used multiple times\n       5) Avoids caching immutable vars (_start, _duration) in local variables \n          since they are inlined by the compiler anyway"
							},
							"fullyImplemented": true,
							"id": 1680,
							"linearizedBaseContracts": [
								1680,
								692,
								454,
								1233,
								1245,
								537,
								1209
							],
							"name": "WallyVesting",
							"nameLocation": "1400:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1270,
									"libraryName": {
										"id": 1267,
										"name": "SafeERC20",
										"nameLocations": [
											"1459:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1179,
										"src": "1459:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1453:27:12",
									"typeName": {
										"id": 1269,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1268,
											"name": "IERC20",
											"nameLocations": [
												"1473:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 770,
											"src": "1473:6:12"
										},
										"referencedDeclaration": 770,
										"src": "1473:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$770",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1273,
									"libraryName": {
										"id": 1271,
										"name": "FixedPointMathLib",
										"nameLocations": [
											"1491:17:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 158,
										"src": "1491:17:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1485:36:12",
									"typeName": {
										"id": 1272,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1513:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1278,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "1552:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1527:61:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1274,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1527:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1276,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1575:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1275,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1565:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1565:23:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1281,
									"mutability": "immutable",
									"name": "_token",
									"nameLocation": "1696:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1671:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$770",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1280,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1279,
											"name": "IERC20",
											"nameLocations": [
												"1671:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 770,
											"src": "1671:6:12"
										},
										"referencedDeclaration": 770,
										"src": "1671:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$770",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1283,
									"mutability": "immutable",
									"name": "_beneficiary",
									"nameLocation": "1740:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1714:38:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1282,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1285,
									"mutability": "immutable",
									"name": "_cliff",
									"nameLocation": "1785:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1759:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1759:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1287,
									"mutability": "immutable",
									"name": "_start",
									"nameLocation": "1828:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1802:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1802:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1289,
									"mutability": "immutable",
									"name": "_duration",
									"nameLocation": "1871:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1845:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1845:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1291,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "1903:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1887:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1887:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1293,
									"mutability": "mutable",
									"name": "_revoked",
									"nameLocation": "1931:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1680,
									"src": "1918:21:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1292,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1918:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "a1598fb976f7dd9df63fd18699c54a5744a6a95364166bbd0d77a2f6c8438b1f",
									"id": 1297,
									"name": "TokensReleased",
									"nameLocation": "1952:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1975:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1967:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1966:16:12"
									},
									"src": "1946:37:12"
								},
								{
									"anonymous": false,
									"eventSelector": "ab9bb9a2dbce8eb1c5199596521d57563c7289fb1ac680030c44e9a0d16e6ed0",
									"id": 1299,
									"name": "VestingRevoked",
									"nameLocation": "1994:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:2:12"
									},
									"src": "1988:23:12"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "2441:767:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1314,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "2721:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2739:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2731:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1315,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2731:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2731:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2721:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "2717:49:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1320,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "2750:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2750:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1322,
													"nodeType": "RevertStatement",
													"src": "2743:23:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1324,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "2780:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2804:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2796:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1325,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2796:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2796:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2780:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "2776:55:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1330,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2815:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1332,
													"nodeType": "RevertStatement",
													"src": "2808:23:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "admin_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "2845:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2863:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2855:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1335,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2855:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2855:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2845:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "2841:49:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1340,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "2874:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2874:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1342,
													"nodeType": "RevertStatement",
													"src": "2867:23:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1344,
														"name": "cliffDuration_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "2904:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1345,
															"name": "duration_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "2922:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2934:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2922:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2904:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "2900:70:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1349,
															"name": "CliffGreaterThanDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "2944:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2944:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1351,
													"nodeType": "RevertStatement",
													"src": "2937:33:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1354,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "2992:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1355,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "3004:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1353,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2981:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2981:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "2981:30:12"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "3022:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$770",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1360,
																"name": "token_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "3044:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1359,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3037:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$770_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3037:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$770",
															"typeString": "contract IERC20"
														}
													},
													"src": "3022:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "3022:29:12"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1364,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "3061:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1365,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "3076:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3061:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "3061:27:12"
											},
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1368,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "3098:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1369,
														"name": "start_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "3113:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "3098:21:12"
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1372,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3129:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1373,
															"name": "start_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "3144:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1374,
															"name": "cliffDuration_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "3153:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3144:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3129:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "3129:38:12"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1378,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3177:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1379,
														"name": "duration_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3192:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3177:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "3177:24:12"
											}
										]
									},
									"id": 1383,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "token_",
												"nameLocation": "2283:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2275:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "2307:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2299:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "start_",
												"nameLocation": "2337:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2329:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "cliffDuration_",
												"nameLocation": "2361:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2353:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2353:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "duration_",
												"nameLocation": "2393:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2385:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "2420:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2412:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:167:12"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2441:0:12"
									},
									"scope": 1680,
									"src": "2254:954:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "3416:88:12",
										"statements": [
											{
												"condition": {
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3430:32:12",
													"subExpression": {
														"arguments": [
															{
																"id": 1386,
																"name": "ADMIN_ROLE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "3439:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"expression": {
																	"id": 1387,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3451:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3455:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3451:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1385,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3431:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3431:31:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "3426:60:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1391,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "3471:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3471:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1393,
													"nodeType": "RevertStatement",
													"src": "3464:22:12"
												}
											},
											{
												"id": 1395,
												"nodeType": "PlaceholderStatement",
												"src": "3496:1:12"
											}
										]
									},
									"id": 1397,
									"name": "onlyAuthorized",
									"nameLocation": "3399:14:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3413:2:12"
									},
									"src": "3390:114:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "3950:1057:12",
										"statements": [
											{
												"assignments": [
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "revoked_",
														"nameLocation": "4089:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "4084:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4084:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"id": 1407,
													"name": "_revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "4100:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4084:24:12"
											},
											{
												"condition": {
													"id": 1409,
													"name": "revoked_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1406,
													"src": "4122:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1413,
												"nodeType": "IfStatement",
												"src": "4118:44:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1410,
															"name": "VestingRevokedAlready",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "4139:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4139:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1412,
													"nodeType": "RevertStatement",
													"src": "4132:30:12"
												}
											},
											{
												"assignments": [
													1415
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "unreleased",
														"nameLocation": "4181:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "4173:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4173:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1418,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1416,
														"name": "releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4194:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4173:39:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1419,
														"name": "unreleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "4226:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4240:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4226:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1425,
												"nodeType": "IfStatement",
												"src": "4222:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1422,
															"name": "NothingToRelease",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "4250:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4250:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1424,
													"nodeType": "RevertStatement",
													"src": "4243:25:12"
												}
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "oldReleased",
														"nameLocation": "4355:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "4347:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4347:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"id": 1428,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1291,
													"src": "4369:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4347:31:12"
											},
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "beneficiaryBalanceBefore",
														"nameLocation": "4557:24:12",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "4549:32:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4549:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1436,
												"initialValue": {
													"arguments": [
														{
															"id": 1434,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4601:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1432,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "4584:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4591:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "4584:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4549:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4644:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "4658:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1437,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "4624:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4631:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "4624:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4624:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "4624:45:12"
											},
											{
												"assignments": [
													1445
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "beneficiaryBalanceAfter",
														"nameLocation": "4687:23:12",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "4679:31:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4679:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"arguments": [
														{
															"id": 1448,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4730:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1446,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "4713:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4720:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "4713:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4713:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4679:64:12"
											},
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "actualTransferred",
														"nameLocation": "4828:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "4820:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4820:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "beneficiaryBalanceAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4848:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1454,
														"name": "beneficiaryBalanceBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "4874:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4848:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4820:78:12"
											},
											{
												"expression": {
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1457,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "4908:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1458,
															"name": "oldReleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4920:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1459,
															"name": "actualTransferred",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4934:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4920:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4908:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "4908:43:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1464,
															"name": "actualTransferred",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4982:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1463,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "4967:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4967:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "EmitStatement",
												"src": "4962:38:12"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "3694:195:12",
										"text": " @dev Release vested tokens to beneficiary.\n      Uses actual post-transfer balance difference for accounting \n      to handle tokens that may take fees on transfer."
									},
									"functionSelector": "86d1a69f",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1400,
												"name": "nonReentrant",
												"nameLocations": [
													"3922:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "3922:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3922:12:12"
										},
										{
											"id": 1403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1402,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3935:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "3935:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3935:14:12"
										}
									],
									"name": "release",
									"nameLocation": "3903:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3910:2:12"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3950:0:12"
									},
									"scope": 1680,
									"src": "3894:1113:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "5406:593:12",
										"statements": [
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "revoked_",
														"nameLocation": "5522:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "5517:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1477,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5517:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"id": 1479,
													"name": "_revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "5533:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5517:24:12"
											},
											{
												"condition": {
													"id": 1481,
													"name": "revoked_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1478,
													"src": "5555:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "5551:44:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1482,
															"name": "VestingRevokedAlready",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "5572:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5572:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1484,
													"nodeType": "RevertStatement",
													"src": "5565:30:12"
												}
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1486,
														"name": "_revoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "5605:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5616:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5605:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "5605:15:12"
											},
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5701:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "5693:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5693:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1496,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5736:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyVesting_$1680",
																		"typeString": "contract WallyVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyVesting_$1680",
																		"typeString": "contract WallyVesting"
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5728:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5728:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5728:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1492,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "5711:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5718:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "5711:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5693:49:12"
											},
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "unreleased",
														"nameLocation": "5760:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "5752:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5752:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1502,
														"name": "releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "5773:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5773:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5752:39:12"
											},
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "refund",
														"nameLocation": "5809:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "5801:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5801:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1507,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "5819:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1508,
																	"name": "unreleased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "5829:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5819:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1510,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5818:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5868:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5818:51:12",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1511,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "5844:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1512,
																	"name": "unreleased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "5854:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5844:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1514,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5843:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5801:68:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1518,
														"name": "refund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "5884:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5884:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1530,
												"nodeType": "IfStatement",
												"src": "5880:81:12",
												"trueBody": {
													"id": 1529,
													"nodeType": "Block",
													"src": "5897:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1524,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5931:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5935:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5931:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1526,
																		"name": "refund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "5943:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1521,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "5911:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$770",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5918:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 815,
																	"src": "5911:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$770_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$770_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5911:39:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1528,
															"nodeType": "ExpressionStatement",
															"src": "5911:39:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1531,
														"name": "VestingRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "5976:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5976:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "EmitStatement",
												"src": "5971:21:12"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "5196:144:12",
										"text": " @dev Allows admin to revoke vesting. Already-vested remain claimable; \n      unvested portion is returned to the admin."
									},
									"functionSelector": "b6549f75",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1472,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1471,
												"name": "nonReentrant",
												"nameLocations": [
													"5372:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 657,
												"src": "5372:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5372:12:12"
										},
										{
											"arguments": [
												{
													"id": 1474,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1278,
													"src": "5394:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1473,
												"name": "onlyRole",
												"nameLocations": [
													"5385:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 199,
												"src": "5385:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5385:20:12"
										}
									],
									"name": "revoke",
									"nameLocation": "5354:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5360:2:12"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5406:0:12"
									},
									"scope": 1680,
									"src": "5345:654:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "6490:121:12",
										"statements": [
											{
												"expression": {
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1541,
														"name": "releasableTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "6500:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1542,
																"name": "vestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "6519:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6519:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1544,
															"name": "_released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "6536:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6519:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6500:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "6500:45:12"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "6192:218:12",
										"text": " @dev Returns how many tokens can be released right now, \n      based on total vested minus how many have been released.\n @return releasableTokens The amount of tokens that can be released"
									},
									"functionSelector": "5b940081",
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasableAmount",
									"nameLocation": "6424:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6440:2:12"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "releasableTokens",
												"nameLocation": "6472:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "6464:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6463:26:12"
									},
									"scope": 1680,
									"src": "6415:196:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "6834:1591:12",
										"statements": [
											{
												"assignments": [
													1556
												],
												"declarations": [
													{
														"constant": false,
														"id": 1556,
														"mutability": "mutable",
														"name": "released_",
														"nameLocation": "6898:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1621,
														"src": "6890:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1555,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6890:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1558,
												"initialValue": {
													"id": 1557,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1291,
													"src": "6910:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6890:29:12"
											},
											{
												"assignments": [
													1560
												],
												"declarations": [
													{
														"constant": false,
														"id": 1560,
														"mutability": "mutable",
														"name": "totalCurrent",
														"nameLocation": "7176:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1621,
														"src": "7168:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7168:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1568,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1565,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7216:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyVesting_$1680",
																		"typeString": "contract WallyVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyVesting_$1680",
																		"typeString": "contract WallyVesting"
																	}
																],
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7208:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7208:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7208:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1561,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "7191:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$770",
																"typeString": "contract IERC20"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7198:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "7191:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7191:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7168:54:12"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "totalAssigned",
														"nameLocation": "7240:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1621,
														"src": "7232:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7232:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "totalCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "7256:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1572,
														"name": "released_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "7271:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7256:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7232:48:12"
											},
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "7391:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1621,
														"src": "7383:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7383:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"expression": {
														"id": 1577,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "7405:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7411:9:12",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "7405:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7383:37:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1580,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7585:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7599:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7585:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1583,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "7604:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7585:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1590,
																"name": "currentTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "7763:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "_start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "7779:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1592,
																			"name": "_duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "7788:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7779:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7778:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7763:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"id": 1596,
															"name": "_revoked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "7802:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7763:47:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1618,
														"nodeType": "Block",
														"src": "7935:382:12",
														"statements": [
															{
																"assignments": [
																	1604
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1604,
																		"mutability": "mutable",
																		"name": "timeSoFar",
																		"nameLocation": "8032:9:12",
																		"nodeType": "VariableDeclaration",
																		"scope": 1618,
																		"src": "8024:17:12",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1603,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8024:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1608,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1605,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "8044:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1606,
																		"name": "_start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8058:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8044:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8024:40:12"
															},
															{
																"expression": {
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1609,
																		"name": "vestedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "8252:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1610,
																						"name": "totalAssigned",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1570,
																						"src": "8268:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1611,
																						"name": "timeSoFar",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1604,
																						"src": "8284:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8268:25:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1613,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8267:27:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1614,
																			"name": "_duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8297:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8267:39:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8252:54:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1617,
																"nodeType": "ExpressionStatement",
																"src": "8252:54:12"
															}
														]
													},
													"id": 1619,
													"nodeType": "IfStatement",
													"src": "7759:558:12",
													"trueBody": {
														"id": 1602,
														"nodeType": "Block",
														"src": "7812:117:12",
														"statements": [
															{
																"expression": {
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1598,
																		"name": "vestedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "7890:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1599,
																		"name": "totalAssigned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "7905:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7890:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1601,
																"nodeType": "ExpressionStatement",
																"src": "7890:28:12"
															}
														]
													}
												},
												"id": 1620,
												"nodeType": "IfStatement",
												"src": "7581:736:12",
												"trueBody": {
													"id": 1589,
													"nodeType": "Block",
													"src": "7612:86:12",
													"statements": [
														{
															"expression": {
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1585,
																	"name": "vestedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "7671:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7686:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7671:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "7671:16:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "6617:145:12",
										"text": " @dev Returns how many tokens are vested in total, at the current time.\n @return vestedTokens The amount of tokens vested"
									},
									"functionSelector": "44b1231f",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "6776:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6788:2:12"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "vestedTokens",
												"nameLocation": "6820:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "6812:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6812:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6811:22:12"
									},
									"scope": 1680,
									"src": "6767:1658:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "8656:32:12",
										"statements": [
											{
												"expression": {
													"id": 1627,
													"name": "_revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "8673:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1628,
												"nodeType": "Return",
												"src": "8666:15:12"
											}
										]
									},
									"functionSelector": "2bc9ed02",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRevoked",
									"nameLocation": "8615:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8624:2:12"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "8650:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8650:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:6:12"
									},
									"scope": 1680,
									"src": "8606:82:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "8751:33:12",
										"statements": [
											{
												"expression": {
													"id": 1635,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1291,
													"src": "8768:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1634,
												"id": 1636,
												"nodeType": "Return",
												"src": "8761:16:12"
											}
										]
									},
									"functionSelector": "e33b7de3",
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalReleased",
									"nameLocation": "8703:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8716:2:12"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "8742:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8742:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8741:9:12"
									},
									"scope": 1680,
									"src": "8694:90:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "8848:36:12",
										"statements": [
											{
												"expression": {
													"id": 1643,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1283,
													"src": "8865:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1642,
												"id": 1644,
												"nodeType": "Return",
												"src": "8858:19:12"
											}
										]
									},
									"functionSelector": "565a2e2c",
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeneficiary",
									"nameLocation": "8799:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8813:2:12"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "8839:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8839:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8838:9:12"
									},
									"scope": 1680,
									"src": "8790:94:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "8941:30:12",
										"statements": [
											{
												"expression": {
													"id": 1652,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1281,
													"src": "8958:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1653,
												"nodeType": "Return",
												"src": "8951:13:12"
											}
										]
									},
									"functionSelector": "21df0da7",
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "8899:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8907:2:12"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "8933:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$770",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1648,
														"name": "IERC20",
														"nameLocations": [
															"8933:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "8933:6:12"
													},
													"referencedDeclaration": 770,
													"src": "8933:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$770",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8932:8:12"
									},
									"scope": 1680,
									"src": "8890:81:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "9029:30:12",
										"statements": [
											{
												"expression": {
													"id": 1660,
													"name": "_cliff",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1285,
													"src": "9046:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1661,
												"nodeType": "Return",
												"src": "9039:13:12"
											}
										]
									},
									"functionSelector": "63260e36",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCliff",
									"nameLocation": "8986:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8994:2:12"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "9020:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9020:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9019:9:12"
									},
									"scope": 1680,
									"src": "8977:82:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "9117:30:12",
										"statements": [
											{
												"expression": {
													"id": 1668,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "9134:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1667,
												"id": 1669,
												"nodeType": "Return",
												"src": "9127:13:12"
											}
										]
									},
									"functionSelector": "c5292c67",
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStart",
									"nameLocation": "9074:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9082:2:12"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "9108:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9108:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9107:9:12"
									},
									"scope": 1680,
									"src": "9065:82:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "9208:33:12",
										"statements": [
											{
												"expression": {
													"id": 1676,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1289,
													"src": "9225:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1677,
												"nodeType": "Return",
												"src": "9218:16:12"
											}
										]
									},
									"functionSelector": "ad2e8c9b",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDuration",
									"nameLocation": "9162:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9173:2:12"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "9199:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9199:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9198:9:12"
									},
									"scope": 1680,
									"src": "9153:88:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1681,
							"src": "1391:7852:12",
							"usedErrors": [
								464,
								467,
								782,
								1253,
								1255,
								1257,
								1259,
								1261
							],
							"usedEvents": [
								476,
								485,
								494,
								1297,
								1299
							]
						}
					],
					"src": "32:9211:12"
				},
				"id": 12
			}
		}
	}
}