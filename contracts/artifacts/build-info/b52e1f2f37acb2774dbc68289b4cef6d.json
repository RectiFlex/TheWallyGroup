{
	"id": "b52e1f2f37acb2774dbc68289b4cef6d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/WallyStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/* -----------------------------------------------------\n * Custom Errors\n * ---------------------------------------------------- */\nerror InvalidAmount();\nerror InvalidDuration();\nerror StakingNotActive();\nerror StakingStillLocked();\nerror NoRewardsAvailable();\nerror InsufficientRewardsPool();\nerror InvalidZeroAddress();\nerror NoActiveStake();\nerror TransferFailed();\nerror DurationAlreadyExists();\nerror InsufficientBalance();\n\n/**\n * @title WallyStaking\n * @dev Allows users to stake WallyToken for a predetermined duration\n * to earn rewards at a fixed APY. Features multiple staking durations\n * with corresponding APY rates.\n */\ncontract WallyStaking is AccessControl, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Roles\n    bytes32 private constant _ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 private constant _REWARDS_MANAGER_ROLE = keccak256(\"REWARDS_MANAGER_ROLE\");\n\n    // Events\n    event Staked(address indexed user, uint256 amount, uint256 indexed duration, uint256 unlockTime);\n    event Unstaked(address indexed user, uint256 stakedAmount, uint256 rewardAmount);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event StakingPlanAdded(uint256 indexed duration, uint256 indexed apy);\n    event StakingPlanUpdated(uint256 indexed duration, uint256 indexed apy);\n    event RewardsAdded(uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 amount);\n    event StakingPaused(bool indexed isPaused);\n\n    // Staking plans\n    struct StakingPlan {\n        bool isActive;\n        uint256 apr; // Annual percentage rate in basis points (1% = 100)\n    }\n\n    // User staking data - packed for storage efficiency\n    struct UserStakingData {\n        uint256 stakedAmount;\n        uint256 stakingStartTime;\n        uint256 lastClaimTime;\n        uint256 stakingEndTime;\n        uint256 duration;\n        uint256 apr;\n        bool isActive;\n    }\n\n    // State variables\n    IERC20 private immutable _token;\n    mapping(uint256 duration => StakingPlan plan) private _stakingPlans; // Named mapping parameters\n    mapping(address user => UserStakingData data) private _userStakingData; // Named mapping parameters\n    uint256 private _totalStaked;\n    uint256 private _rewardsPool;\n    bool private _stakingPaused;\n    uint256[] private _availableDurations; // Array to track available durations\n\n    // Constants\n    uint256 private constant _BASIS_POINTS = 10000; // 100% = 10000\n    uint256 private constant _ONE_YEAR = 365 days;\n\n    /**\n     * @dev Constructor sets up the initial contract state\n     * @param tokenAddress Address of the WallyToken contract\n     * @param adminAddress Address of the admin who will manage the contract\n     */\n    constructor(address tokenAddress, address adminAddress) payable { // Made payable for gas optimization\n        if (tokenAddress == address(0)) revert InvalidZeroAddress();\n        if (adminAddress == address(0)) revert InvalidZeroAddress();\n\n        _token = IERC20(tokenAddress);\n        \n        // Setup roles\n        _grantRole(DEFAULT_ADMIN_ROLE, adminAddress);\n        _grantRole(_ADMIN_ROLE, adminAddress);\n        _grantRole(_REWARDS_MANAGER_ROLE, adminAddress);\n\n        // Set ADMIN_ROLE as the admin for REWARDS_MANAGER_ROLE\n        _setRoleAdmin(_REWARDS_MANAGER_ROLE, _ADMIN_ROLE);\n\n        // Initialize default staking plans (3, 6, 12 months)\n        _addStakingPlan(90 days, 500);  // 5% APR for 3 months\n        _addStakingPlan(180 days, 800); // 8% APR for 6 months\n        _addStakingPlan(365 days, 1200); // 12% APR for 12 months\n        \n        _stakingPaused = false;\n    }\n\n    /**\n     * @dev Adds a staking plan with a specific duration and APR\n     * @param duration Duration in seconds\n     * @param apr Annual percentage rate in basis points (100 = 1%)\n     */\n    function addStakingPlan(uint256 duration, uint256 apr) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE) \n    {\n        _addStakingPlan(duration, apr);\n    }\n\n    /**\n     * @dev Updates an existing staking plan\n     * @param duration Duration of the plan to update\n     * @param apr New annual percentage rate in basis points\n     * @param isActive Whether the plan is active\n     */\n    function updateStakingPlan(uint256 duration, uint256 apr, bool isActive) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE) \n    {\n        // Validate duration exists\n        bool found = false;\n        // Cache array length to save gas\n        uint256 durationsLength = _availableDurations.length;\n        for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)\n            if (_availableDurations[i] == duration) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) revert InvalidDuration();\n\n        // Only update if values are different from current ones\n        StakingPlan storage plan = _stakingPlans[duration];\n        if (plan.apr != apr) {\n            plan.apr = apr;\n        }\n        \n        if (plan.isActive != isActive) {\n            plan.isActive = isActive;\n        }\n        \n        emit StakingPlanUpdated(duration, apr);\n    }\n\n    /**\n     * @dev Pauses or unpauses staking\n     * @param paused Whether staking should be paused\n     */\n    function setStakingPaused(bool paused) \n        external \n        nonReentrant \n        onlyRole(_ADMIN_ROLE) \n    {\n        // Only update if value is different\n        if (_stakingPaused != paused) {\n            _stakingPaused = paused;\n            emit StakingPaused(paused);\n        }\n    }\n\n    /**\n     * @dev Adds tokens to the rewards pool\n     * @param amount Amount of tokens to add\n     */\n    function addRewards(uint256 amount) \n        external \n        nonReentrant \n        onlyRole(_REWARDS_MANAGER_ROLE) \n    {\n        if (amount == 0) revert InvalidAmount();\n        \n        // Cache address(this) for multiple uses\n        address self = address(this);\n        \n        // Cache storage variable to avoid multiple SLOADs\n        uint256 rewardsPool = _rewardsPool;\n        \n        // Transfer tokens from sender to contract\n        _token.safeTransferFrom(msg.sender, self, amount);\n        \n        // Update rewards pool\n        // Using direct assignment instead of +=\n        _rewardsPool = rewardsPool + amount;\n        \n        emit RewardsAdded(amount);\n    }\n\n    /**\n     * @dev Allows a user to stake tokens\n     * @param amount Amount to stake\n     * @param duration Duration in seconds to stake for\n     */\n    function stake(uint256 amount, uint256 duration) \n        external \n        nonReentrant \n    {\n        // Cache storage variables to avoid multiple SLOADs\n        bool stakingPaused = _stakingPaused;\n        uint256 totalStaked = _totalStaked;\n\n        // Validation\n        if (stakingPaused) revert StakingNotActive();\n        if (amount == 0) revert InvalidAmount();\n        \n        // Check if the duration is valid and active\n        StakingPlan storage plan = _stakingPlans[duration];\n        if (!plan.isActive) revert InvalidDuration();\n        \n        // Cache address(this)\n        address self = address(this);\n        \n        // Cache current block timestamp to save gas\n        uint256 currentTime = block.timestamp;\n        \n        // Check if user has an active stake\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        if (userData.isActive) {\n            // If user already has an active stake, first claim any available rewards\n            if (userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime) {\n                uint256 pendingRewards = calculatePendingRewards(msg.sender);\n                if (pendingRewards != 0) {\n                    _claimRewards(msg.sender, pendingRewards);\n                }\n            }\n        }\n        \n        // Calculate unlock time\n        uint256 unlockTime = currentTime + duration;\n        \n        // Transfer tokens from user to contract\n        _token.safeTransferFrom(msg.sender, self, amount);\n        \n        // Update user data - assigning individual fields instead of the whole struct at once\n        userData.stakedAmount = amount;\n        userData.stakingStartTime = currentTime;\n        userData.stakingEndTime = unlockTime;\n        userData.duration = duration;\n        userData.apr = plan.apr;\n        userData.isActive = true;\n        userData.lastClaimTime = currentTime;\n        \n        // Update total staked amount\n        // Using direct assignment instead of +=\n        _totalStaked = totalStaked + amount;\n        \n        emit Staked(msg.sender, amount, duration, 0); // Don't need to include timestamp in event\n    }\n\n    /**\n     * @dev Allows a user to unstake their tokens after the lock period\n     */\n    function unstake() \n        external \n        nonReentrant \n    {\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        \n        // Validations\n        if (!userData.isActive) revert NoActiveStake();\n        if (block.timestamp <= userData.stakingEndTime) revert StakingStillLocked();\n        \n        // No need to cache immutable variables\n        address self = address(this);\n        \n        uint256 stakedAmount = userData.stakedAmount;\n        uint256 pendingRewards = calculatePendingRewards(msg.sender);\n        \n        // Reset user data\n        userData.stakedAmount = 0;\n        userData.stakingStartTime = 0;\n        userData.stakingEndTime = 0;\n        userData.duration = 0;\n        userData.apr = 0;\n        userData.isActive = false;\n        userData.lastClaimTime = 0;\n        \n        // Update total staked\n        // Using direct assignment instead of -=\n        _totalStaked = _totalStaked - stakedAmount;\n        \n        // Transfer tokens back to user\n        _token.safeTransfer(msg.sender, stakedAmount);\n        \n        // Transfer rewards if any\n        if (pendingRewards != 0) {\n            _claimRewards(msg.sender, pendingRewards);\n        }\n        \n        emit Unstaked(msg.sender, stakedAmount, pendingRewards);\n    }\n\n    /**\n     * @dev Allows users to claim rewards without unstaking\n     */\n    function claimRewards() \n        external \n        nonReentrant \n    {\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        \n        // Validations\n        if (!userData.isActive) revert NoActiveStake();\n        \n        uint256 pendingRewards = calculatePendingRewards(msg.sender);\n        if (pendingRewards == 0) revert NoRewardsAvailable();\n        \n        // Update last claim time\n        userData.lastClaimTime = block.timestamp;\n        \n        // Transfer rewards\n        _claimRewards(msg.sender, pendingRewards);\n    }\n\n    /**\n     * @dev Emergency withdraw function in case of critical issues\n     * Note: This doesn't calculate or distribute rewards\n     */\n    function emergencyWithdraw() \n        external \n        nonReentrant \n    {\n        UserStakingData storage userData = _userStakingData[msg.sender];\n        \n        // Validations\n        if (!userData.isActive) revert NoActiveStake();\n        \n        // No need to cache immutable variables\n        \n        uint256 stakedAmount = userData.stakedAmount;\n        \n        // Reset user data\n        userData.stakedAmount = 0;\n        userData.stakingStartTime = 0;\n        userData.stakingEndTime = 0;\n        userData.duration = 0;\n        userData.apr = 0;\n        userData.isActive = false;\n        userData.lastClaimTime = 0;\n        \n        // Update total staked\n        // Using direct assignment instead of -=\n        _totalStaked = _totalStaked - stakedAmount;\n        \n        // Transfer tokens back to user\n        _token.safeTransfer(msg.sender, stakedAmount);\n        \n        emit EmergencyWithdraw(msg.sender, stakedAmount);\n    }\n\n    /**\n     * @dev Calculates pending rewards for a user\n     * @param user Address of the user\n     * @return rewards Reward amount\n     */\n    function calculatePendingRewards(address user) \n        public \n        view \n        returns (uint256 rewards) \n    {\n        UserStakingData storage userData = _userStakingData[user];\n        \n        if (!userData.isActive || userData.stakedAmount == 0) {\n            return 0;\n        }\n        \n        // Calculate time elapsed since last claim\n        uint256 endTime = block.timestamp;\n        if (endTime >= userData.stakingEndTime) {\n            endTime = userData.stakingEndTime;\n        }\n        \n        uint256 timeElapsed = endTime - userData.lastClaimTime;\n        if (timeElapsed == 0) {\n            return 0;\n        }\n        \n        // Calculate rewards: (stakedAmount * APR * timeElapsed) / (BASIS_POINTS * ONE_YEAR)\n        // Safe math calculation to avoid overflow and precision loss\n        // Multiply first, then divide to minimize precision loss\n        uint256 numerator = userData.stakedAmount * userData.apr * timeElapsed;\n        uint256 denominator = _BASIS_POINTS * _ONE_YEAR;\n        rewards = numerator / denominator;\n        \n        // No need for return statement when using named returns\n    }\n\n    /**\n     * @dev Get user staking information\n     * @param user Address of the user\n     * @return userInfo Struct containing all user staking information\n     */\n    // Packed for gas efficiency - similar types grouped together\n    struct UserStakingInfo {\n        uint256 stakedAmount;\n        uint256 stakingStartTime; \n        uint256 stakingEndTime;\n        uint256 duration;\n        uint256 apr;\n        uint256 pendingRewards;\n        bool isActive;\n    }\n    \n    function getUserStakingInfo(address user) \n        external \n        view \n        returns (UserStakingInfo memory userInfo) \n    {\n        UserStakingData storage userData = _userStakingData[user];\n        \n        userInfo.stakedAmount = userData.stakedAmount;\n        userInfo.stakingStartTime = userData.stakingStartTime;\n        userInfo.stakingEndTime = userData.stakingEndTime;\n        userInfo.duration = userData.duration;\n        userInfo.apr = userData.apr;\n        userInfo.isActive = userData.isActive;\n        userInfo.pendingRewards = calculatePendingRewards(user);\n        \n        return userInfo;\n    }\n\n    /**\n     * @dev Get staking plan details\n     * @param duration Duration of the plan\n     * @return isActive Whether the plan is active\n     * @return apr APR of the plan in basis points\n     */\n    function getStakingPlan(uint256 duration) \n        external \n        view \n        returns (bool isActive, uint256 apr) \n    {\n        StakingPlan storage plan = _stakingPlans[duration];\n        return (plan.isActive, plan.apr);\n    }\n\n    /**\n     * @dev Get all available staking durations\n     * @return durations Array of available durations\n     */\n    function getAvailableDurations() \n        external \n        view \n        returns (uint256[] memory durations) \n    {\n        return _availableDurations;\n    }\n\n    /**\n     * @dev Get contract stats\n     * @return totalStaked Total tokens staked\n     * @return rewardsPool Available rewards pool\n     * @return stakingPaused Whether staking is paused\n     */\n    function getContractStats() \n        external \n        view \n        returns (uint256 totalStaked, uint256 rewardsPool, bool stakingPaused) \n    {\n        return (_totalStaked, _rewardsPool, _stakingPaused);\n    }\n\n    /**\n     * @dev Internal function to add a staking plan\n     * @param duration Duration in seconds\n     * @param apr Annual percentage rate in basis points\n     */\n    function _addStakingPlan(uint256 duration, uint256 apr) \n        private \n    {\n        if (duration == 0) revert InvalidDuration();\n        if (_stakingPlans[duration].isActive) revert DurationAlreadyExists();\n        \n        // Create and set the staking plan\n        StakingPlan storage plan = _stakingPlans[duration];\n        plan.isActive = true;\n        plan.apr = apr;\n        \n        _availableDurations.push(duration);\n        \n        emit StakingPlanAdded(duration, apr);\n    }\n\n    /**\n     * @dev Internal function to claim rewards\n     * @param user Address of the user\n     * @param amount Amount of rewards to claim\n     */\n    function _claimRewards(address user, uint256 amount) \n        private \n    {\n        // Cache storage variable to avoid multiple SLOADs\n        uint256 rewardsPool = _rewardsPool;\n        \n        if (amount >= rewardsPool) revert InsufficientRewardsPool(); // Use non-strict inequality\n        \n        // Using direct assignment instead of -=\n        _rewardsPool = rewardsPool - amount;\n        _token.safeTransfer(user, amount);\n        \n        emit RewardClaimed(user, amount);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 479,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xEF DUP12 0xEC BYTE MULMOD SHL SWAP2 PUSH7 0x92CF47B3189F28 OR 0xB3 PUSH17 0xCE77D31CB5083E8119E1B8E79264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xEF DUP12 0xEC BYTE MULMOD SHL SWAP2 PUSH7 0x92CF47B3189F28 OR 0xB3 PUSH17 0xCE77D31CB5083E8119E1B8E79264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "698:8692:7:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006ef8bec1a091b916692cf47b3189f2817b370ce77d31cb5083e8119e1b8e79264736f6c634300081c0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyStaking.sol": {
				"WallyStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "adminAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DurationAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientRewardsPool",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidDuration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoActiveStake",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoRewardsAvailable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StakingNotActive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StakingStillLocked",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "StakingPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "StakingPlanAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "StakingPlanUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								}
							],
							"name": "addStakingPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculatePendingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAvailableDurations",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "durations",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardsPool",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "stakingPaused",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "getStakingPlan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserStakingInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakingStartTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakingEndTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "apr",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "pendingRewards",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isActive",
											"type": "bool"
										}
									],
									"internalType": "struct WallyStaking.UserStakingInfo",
									"name": "userInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "setStakingPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "updateStakingPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0xa0\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_32\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_7\n  jumpi\n  tag_9\n  0x20\n  tag_10\n  dup4\n  tag_1\n  jump\t// in\ntag_10:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/WallyStaking.sol\":3132:3158  tokenAddress == address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyStaking.sol\":3128:3187  if (tokenAddress == address(0)) revert InvalidZeroAddress() */\n  tag_13\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyStaking.sol\":3201:3227  adminAddress == address(0) */\n  iszero\n    /* \"contracts/WallyStaking.sol\":3197:3256  if (adminAddress == address(0)) revert InvalidZeroAddress() */\n  tag_13\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3439:3486  _grantRole(_REWARDS_MANAGER_ROLE, adminAddress) */\n  tag_15\n    /* \"contracts/WallyStaking.sol\":3267:3296  _token = IERC20(tokenAddress) */\n  swap2\n  0x80\n  mstore\n    /* \"contracts/WallyStaking.sol\":3338:3382  _grantRole(DEFAULT_ADMIN_ROLE, adminAddress) */\n  tag_16\n  dup2\n  tag_2\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/WallyStaking.sol\":3392:3429  _grantRole(_ADMIN_ROLE, adminAddress) */\n  tag_17\n  dup2\n  tag_3\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/WallyStaking.sol\":3439:3486  _grantRole(_REWARDS_MANAGER_ROLE, adminAddress) */\n  tag_4\n  jump\t// in\ntag_15:\n  pop\n  mload(0x00)\n  codecopy(0x00, data_d898bc67ca3d352598a6d8ba14bc12f08b53cf86ca7c5471dcbc6dcb5104da9f, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0xf6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d255\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n  sload\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":1087:1110  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  swap3\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap1\n  dup1\n  log4\n    /* \"contracts/WallyStaking.sol\":3699:3706  90 days */\n  0x76a700\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_5c968d77b01764d69848ab2b960d8f4701e8f3339e0a5524fc9916c9948f3efb, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  sload\n  0xff\n  and\n    /* \"contracts/WallyStaking.sol\":15953:16021  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n  tag_30\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3699:3706  90 days */\n  0x76a700\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_5c968d77b01764d69848ab2b960d8f4701e8f3339e0a5524fc9916c9948f3efb, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":3708:3711  500 */\n  0x01f4\n    /* \"contracts/WallyStaking.sol\":16173:16181  plan.apr */\n  0xa1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8d\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  add\n  dup1\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_34\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3699:3706  90 days */\n  0x76a700\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sstore\n    /* \"contracts/WallyStaking.sol\":3708:3711  500 */\n  0x01f4\n    /* \"contracts/WallyStaking.sol\":3699:3706  90 days */\n  0x76a700\n  mload(0x00)\n  codecopy(0x00, data_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":16264:16295  StakingPlanAdded(duration, apr) */\n  dup1\n  log3\n    /* \"contracts/WallyStaking.sol\":3762:3770  180 days */\n  0xed4e00\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_4f66db48a07c9781e0592d42ff3b56b244162717317a5f3e947af07a6400a056, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  sload\n  0xff\n  and\n    /* \"contracts/WallyStaking.sol\":15953:16021  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n  tag_30\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3762:3770  180 days */\n  0xed4e00\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_4f66db48a07c9781e0592d42ff3b56b244162717317a5f3e947af07a6400a056, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":3772:3775  800 */\n  0x0320\n    /* \"contracts/WallyStaking.sol\":16173:16181  plan.apr */\n  0x089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd833\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  add\n  dup1\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_34\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3762:3770  180 days */\n  0xed4e00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sstore\n    /* \"contracts/WallyStaking.sol\":3772:3775  800 */\n  0x0320\n    /* \"contracts/WallyStaking.sol\":3762:3770  180 days */\n  0xed4e00\n  mload(0x00)\n  codecopy(0x00, data_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":16264:16295  StakingPlanAdded(duration, apr) */\n  dup1\n  log3\n    /* \"contracts/WallyStaking.sol\":3825:3833  365 days */\n  0x01e13380\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_d339c8b099c3809595776000fb57d17374d0ef93e29b1511755be607cb00de99, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  sload\n  0xff\n  and\n    /* \"contracts/WallyStaking.sol\":15953:16021  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n  tag_30\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3825:3833  365 days */\n  0x01e13380\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n    /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n  0x02\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_d339c8b099c3809595776000fb57d17374d0ef93e29b1511755be607cb00de99, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyStaking.sol\":3835:3839  1200 */\n  0x04b0\n    /* \"contracts/WallyStaking.sol\":16173:16181  plan.apr */\n  0xdc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33c\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sload\n  0x010000000000000000\n  dup2\n  lt\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  add\n  dup1\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n  dup2\n  lt\n  iszero\n  tag_34\n  jumpi\n    /* \"contracts/WallyStaking.sol\":3825:3833  365 days */\n  0x01e13380\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n    /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n  0x07\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sstore\n    /* \"contracts/WallyStaking.sol\":3835:3839  1200 */\n  0x04b0\n    /* \"contracts/WallyStaking.sol\":3825:3833  365 days */\n  0x01e13380\n  mload(0x00)\n  codecopy(0x00, data_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x00\n    /* \"contracts/WallyStaking.sol\":16264:16295  StakingPlanAdded(duration, apr) */\n  dup1\n  log3\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  not(0xff)\n    /* \"contracts/WallyStaking.sol\":3884:3906  _stakingPaused = false */\n  0x06\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  sload\n  and\n    /* \"contracts/WallyStaking.sol\":3884:3906  _stakingPaused = false */\n  0x06\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  sstore\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/WallyStaking.sol\":3267:3296  _token = IERC20(tokenAddress) */\n  0x80\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0x54f98f06761e30617bf10b49b7a4bbfa175f7ac33cb018a55e7053fa716317c1\")\n  return\ntag_34:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_32:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\n    /* \"contracts/WallyStaking.sol\":15953:16021  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\ntag_30:\n    /* \"contracts/WallyStaking.sol\":15998:16021  DurationAlreadyExists() */\n  mstore(0x00, shl(0xe1, 0x57706857))\n  revert(0x00, 0x04)\n    /* \"contracts/WallyStaking.sol\":3197:3256  if (adminAddress == address(0)) revert InvalidZeroAddress() */\ntag_13:\n    /* \"contracts/WallyStaking.sol\":3167:3187  InvalidZeroAddress() */\n  shl(0xe0, 0xf6b2911f)\n  0x00\n    /* \"contracts/WallyStaking.sol\":3236:3256  InvalidZeroAddress() */\n  mstore\n  revert(0x00, 0x04)\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\ntag_7:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_7\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyStaking.sol\":3156:3157  0 */\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_38\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"contracts/WallyStaking.sol\":3156:3157  0 */\n  0x00\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":3156:3157  0 */\n  dup2\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyStaking.sol\":3156:3157  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_3:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_38\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1087:1110  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap1\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_4:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_6b4989bc7b93b2bee94c8fd6eb5542ae9ecccf5d6d8dc2fe26e142ac3434c5cc, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_38\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_6b4989bc7b93b2bee94c8fd6eb5542ae9ecccf5d6d8dc2fe26e142ac3434c5cc, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_d898bc67ca3d352598a6d8ba14bc12f08b53cf86ca7c5471dcbc6dcb5104da9f, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap1\n    /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\nstop\ndata_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d 2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\ndata_4f66db48a07c9781e0592d42ff3b56b244162717317a5f3e947af07a6400a056 089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd832\ndata_5c968d77b01764d69848ab2b960d8f4701e8f3339e0a5524fc9916c9948f3efb a1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8c\ndata_6b4989bc7b93b2bee94c8fd6eb5542ae9ecccf5d6d8dc2fe26e142ac3434c5cc f6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254\ndata_c65fb5893e4d502cdf4e78a762f3e2cfd52db870a5c66177955d0b59b9825d7d 682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364\ndata_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\ndata_d339c8b099c3809595776000fb57d17374d0ef93e29b1511755be607cb00de99 dc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33b\ndata_d898bc67ca3d352598a6d8ba14bc12f08b53cf86ca7c5471dcbc6dcb5104da9f 51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b\ndata_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5 ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5\n\nsub_0: assembly {\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_20, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_20:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_22\n      jumpi\n      pop\n      dup1\n      0x097aad10\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x15b31bbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x5ef23fa9\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x80933608\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x9fca9c22\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xaea1b6ef\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xb6b365c2\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_58\n      jumpi\n      0xdfe6b5d6\n      eq\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x00))\n      0x60\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":15602:15614  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0xff\n        /* \"contracts/WallyStaking.sol\":15616:15630  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      swap1\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      iszero\n      iszero\n      0x40\n      dup3\n      add\n      mstore\n      return\n    tag_64:\n      0x00\n      dup1\n      revert\n    tag_58:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_70\n      tag_11\n      jump\t// in\n    tag_70:\n        /* \"contracts/WallyStaking.sol\":11304:11314  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":11287:11303  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":11362:11379  userData.isActive */\n      0x06\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      sload\n      swap2\n      0xff\n      dup4\n      and\n        /* \"contracts/WallyStaking.sol\":11361:11379  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":11357:11403  if (!userData.isActive) revert NoActiveStake() */\n      tag_71\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/WallyStaking.sol\":11772:11794  userData.lastClaimTime */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      0x00\n      swap4\n      sload\n      swap5\n      dup5\n      dup4\n      sstore\n        /* \"contracts/WallyStaking.sol\":11604:11629  userData.stakingStartTime */\n      dup5\n      0x01\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11643:11666  userData.stakingEndTime */\n      dup5\n        /* \"contracts/WallyStaking.sol\":11287:11303  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":11643:11666  userData.stakingEndTime */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11680:11697  userData.duration */\n      dup5\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":11680:11697  userData.duration */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11711:11723  userData.apr */\n      dup5\n      0x05\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":11772:11794  userData.lastClaimTime */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":11912:11939  _totalStaked - stakedAmount */\n      tag_73\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":11912:11939  _totalStaked - stakedAmount */\n      tag_4\n      jump\t// in\n    tag_73:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n        /* \"contracts/WallyStaking.sol\":12030:12042  stakedAmount */\n      tag_74\n        /* \"contracts/WallyStaking.sol\":11304:11314  msg.sender */\n      dup2\n      caller\n        /* \"contracts/WallyStaking.sol\":11998:12004  _token */\n      immutable(\"0x54f98f06761e30617bf10b49b7a4bbfa175f7ac33cb018a55e7053fa716317c1\")\n        /* \"contracts/WallyStaking.sol\":12030:12042  stakedAmount */\n      tag_14\n      jump\t// in\n    tag_74:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":12067:12110  EmergencyWithdraw(msg.sender, stakedAmount) */\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":11304:11314  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":12067:12110  EmergencyWithdraw(msg.sender, stakedAmount) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":11604:11629  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":11357:11403  if (!userData.isActive) revert NoActiveStake() */\n    tag_71:\n        /* \"contracts/WallyStaking.sol\":9307:9322  NoActiveStake() */\n      shl(0xe1, 0x7d9a44a1)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":11388:11403  NoActiveStake() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":11388:11403  NoActiveStake() */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_56:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_79\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_80\n      tag_2\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_81\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_82\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_13\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_17\n      jump\t// in\n    tag_79:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n    tag_54:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_87\n      tag_11\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xf6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_88\n      jumpi\n        /* \"contracts/WallyStaking.sol\":6145:6156  amount == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":6141:6180  if (amount == 0) revert InvalidAmount() */\n      tag_90\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":6621:6641  rewardsPool + amount */\n      tag_92\n        /* \"contracts/WallyStaking.sol\":6665:6685  RewardsAdded(amount) */\n      0xf8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap4\n        /* \"contracts/WallyStaking.sol\":6376:6388  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":6500:6506  amount */\n      tag_93\n        /* \"contracts/WallyStaking.sol\":6271:6275  this */\n      dup3\n      address\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":6458:6464  _token */\n      immutable(\"0x54f98f06761e30617bf10b49b7a4bbfa175f7ac33cb018a55e7053fa716317c1\")\n        /* \"contracts/WallyStaking.sol\":6500:6506  amount */\n      tag_18\n      jump\t// in\n    tag_93:\n        /* \"contracts/WallyStaking.sol\":6621:6641  rewardsPool + amount */\n      tag_8\n      jump\t// in\n    tag_92:\n        /* \"contracts/WallyStaking.sol\":6376:6388  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":6665:6685  RewardsAdded(amount) */\n      log1\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":6141:6180  if (amount == 0) revert InvalidAmount() */\n    tag_90:\n        /* \"contracts/WallyStaking.sol\":7203:7218  InvalidAmount() */\n      shl(0xe1, 0x162908e3)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":6165:6180  InvalidAmount() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":6165:6180  InvalidAmount() */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n        /* \"contracts/WallyStaking.sol\":1165:1198  keccak256(\"REWARDS_MANAGER_ROLE\") */\n      0x51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_52:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      dup1\n      0x20\n        /* \"contracts/WallyStaking.sol\":15194:15213  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      swap3\n      dup4\n      dup2\n      mstore\n      add\n      dup1\n      swap3\n        /* \"contracts/WallyStaking.sol\":15194:15213  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      swap1\n      0x00\n    tag_98:\n      dup2\n      dup2\n      lt\n      tag_99\n      jumpi\n      pop\n      pop\n      pop\n      dup2\n      tag_101\n      swap2\n      sub\n      dup3\n      tag_9\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      0x20\n      dup5\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup4\n      add\n      swap2\n      swap1\n      0x00\n    tag_102:\n      dup2\n      dup2\n      lt\n      tag_103\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_103:\n      dup3\n      mload\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_102)\n    tag_99:\n      dup3\n      sload\n      dup5\n      mstore\n      0x20\n      swap1\n      swap4\n      add\n      swap3\n      0x01\n      swap3\n      dup4\n      add\n      swap3\n      add\n      jump(tag_98)\n    tag_50:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      swap1\n      calldataload(0x44)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_64\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_111\n      tag_11\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_112\n      tag_12\n      jump\t// in\n    tag_112:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":4812:4831  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0x00\n        /* \"contracts/WallyStaking.sol\":4868:4887  i < durationsLength */\n    tag_113:\n      dup2\n      dup2\n      lt\n      tag_114\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4848:5087  for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)... */\n    tag_115:\n        /* \"contracts/WallyStaking.sol\":5100:5106  !found */\n      pop\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":5096:5132  if (!found) revert InvalidDuration() */\n      tag_116\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":5235:5248  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":5272:5280  plan.apr */\n      swap1\n      dup4\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"contracts/WallyStaking.sol\":5272:5280  plan.apr */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      sload\n        /* \"contracts/WallyStaking.sol\":5272:5287  plan.apr != apr */\n      sub\n        /* \"contracts/WallyStaking.sol\":5268:5328  if (plan.apr != apr) {... */\n      tag_118\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4848:5087  for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)... */\n    tag_119:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      pop\n      pop\n      dup1\n      0xff\n      dup4\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":5350:5375  plan.isActive != isActive */\n      sub\n        /* \"contracts/WallyStaking.sol\":5346:5426  if (plan.isActive != isActive) {... */\n      tag_120\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4848:5087  for (uint256 i = 0; i < durationsLength; ++i) { // Using pre-increment (++i) instead of post-increment (i++)... */\n    tag_121:\n        /* \"contracts/WallyStaking.sol\":5449:5482  StakingPlanUpdated(duration, apr) */\n      pop\n      pop\n      0xad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff1\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5449:5482  StakingPlanUpdated(duration, apr) */\n      dup1\n      log3\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":5346:5426  if (plan.isActive != isActive) {... */\n    tag_120:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":5346:5426  if (plan.isActive != isActive) {... */\n      dup3\n      dup1\n      jump(tag_121)\n        /* \"contracts/WallyStaking.sol\":5268:5328  if (plan.apr != apr) {... */\n    tag_118:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":5268:5328  if (plan.apr != apr) {... */\n      dup4\n      dup6\n      jump(tag_119)\n        /* \"contracts/WallyStaking.sol\":5096:5132  if (!found) revert InvalidDuration() */\n    tag_116:\n        /* \"contracts/WallyStaking.sol\":15926:15943  InvalidDuration() */\n      shl(0xe0, 0x76166401)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5115:5132  InvalidDuration() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":5115:5132  InvalidDuration() */\n      revert\n        /* \"contracts/WallyStaking.sol\":4889:4892  ++i */\n    tag_114:\n        /* \"contracts/WallyStaking.sol\":4973:4995  _availableDurations[i] */\n      dup5\n      tag_122\n      dup3\n      tag_10\n      jump\t// in\n    tag_122:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n        /* \"contracts/WallyStaking.sol\":4973:5007  _availableDurations[i] == duration */\n      eq\n        /* \"contracts/WallyStaking.sol\":4969:5077  if (_availableDurations[i] == duration) {... */\n      tag_123\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      add\n        /* \"contracts/WallyStaking.sol\":4853:4866  uint256 i = 0 */\n      jump(tag_113)\n        /* \"contracts/WallyStaking.sol\":4969:5077  if (_availableDurations[i] == duration) {... */\n    tag_123:\n        /* \"contracts/WallyStaking.sol\":5027:5039  found = true */\n      pop\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"contracts/WallyStaking.sol\":5057:5062  break */\n      dup5\n      dup1\n      jump(tag_115)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_48:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_46:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/WallyStaking.sol\":14865:14878  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      dup1\n      0x00\n      keccak256\n      0x01\n      0xff\n      dup3\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":14921:14929  plan.apr */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup3\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_44:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x40))\n      tag_137\n      tag_2\n      jump\t// in\n    tag_137:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_42:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      tag_142\n      tag_1\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      0xe0\n      dup2\n      add\n      swap2\n      dup2\n      dup4\n      lt\n      0xffffffffffffffff\n      dup5\n      gt\n      or\n      tag_143\n      jumpi\n      0xe0\n      swap3\n      0x40\n      mstore\n      0x00\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      0x00\n      dup2\n      mstore\n      0x40\n      dup4\n      add\n      0x00\n      dup2\n      mstore\n      0x60\n      dup5\n      add\n      0x00\n      dup2\n      mstore\n      0x80\n      dup6\n      add\n      swap2\n      0x00\n      dup4\n      mstore\n      0xa0\n      dup7\n      add\n      swap4\n      0x00\n      dup6\n      mstore\n        /* \"contracts/WallyStaking.sol\":14428:14457  calculatePendingRewards(user) */\n      tag_145\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0xc0\n      dup9\n      add\n      swap7\n      0x00\n      dup9\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":14053:14069  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0xff\n        /* \"contracts/WallyStaking.sol\":14375:14392  userData.isActive */\n      0x06\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      dup13\n      mstore\n        /* \"contracts/WallyStaking.sol\":14177:14202  userData.stakingStartTime */\n      0x01\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup7\n      mstore\n        /* \"contracts/WallyStaking.sol\":14053:14069  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":14238:14261  userData.stakingEndTime */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup8\n      mstore\n      0x04\n        /* \"contracts/WallyStaking.sol\":14291:14308  userData.duration */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup9\n      mstore\n        /* \"contracts/WallyStaking.sol\":14333:14345  userData.apr */\n      0x05\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup10\n      mstore\n        /* \"contracts/WallyStaking.sol\":14375:14392  userData.isActive */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      iszero\n      iszero\n      dup9\n      mstore\n        /* \"contracts/WallyStaking.sol\":14428:14457  calculatePendingRewards(user) */\n      tag_6\n      jump\t// in\n    tag_145:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup6\n      mstore\n      mload(0x40)\n      swap7\n      mload\n      dup8\n      mstore\n      mload\n      0x20\n      dup8\n      add\n      mstore\n      mload\n      0x40\n      dup7\n      add\n      mstore\n      mload\n      0x60\n      dup6\n      add\n      mstore\n      mload\n      0x80\n      dup5\n      add\n      mstore\n      mload\n      0xa0\n      dup4\n      add\n      mstore\n      mload\n      iszero\n      iszero\n      0xc0\n      dup3\n      add\n      mstore\n      return\n    tag_143:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_40:\n      jumpi(tag_64, callvalue)\n      tag_148\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_149\n      tag_11\n      jump\t// in\n    tag_149:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0xff\n        /* \"contracts/WallyStaking.sol\":7034:7048  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":7125:7169  if (stakingPaused) revert StakingNotActive() */\n      swap1\n      tag_150\n      jumpi\n        /* \"contracts/WallyStaking.sol\":7183:7194  amount == 0 */\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":7179:7218  if (amount == 0) revert InvalidAmount() */\n      tag_90\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":7317:7330  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0xff\n      dup2\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":7354:7368  !plan.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":7350:7394  if (!plan.isActive) revert InvalidDuration() */\n      tag_116\n      jumpi\n        /* \"contracts/WallyStaking.sol\":8869:8889  totalStaked + amount */\n      tag_156\n        /* \"contracts/WallyStaking.sol\":7697:7707  msg.sender */\n      swap2\n      dup4\n      swap2\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":7680:7696  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":7722:7739  userData.isActive */\n      swap1\n        /* \"contracts/WallyStaking.sol\":8512:8537  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":7034:7048  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":7722:7739  userData.isActive */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      0xff\n      dup4\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":7718:8148  if (userData.isActive) {... */\n      tag_157\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_158:\n        /* \"contracts/WallyStaking.sol\":8220:8242  currentTime + duration */\n      tag_159\n        /* \"contracts/WallyStaking.sol\":7566:7581  block.timestamp */\n      dup10\n      timestamp\n        /* \"contracts/WallyStaking.sol\":8220:8242  currentTime + duration */\n      tag_8\n      jump\t// in\n    tag_159:\n        /* \"contracts/WallyStaking.sol\":8352:8358  amount */\n      tag_160\n        /* \"contracts/WallyStaking.sol\":7467:7471  this */\n      dup8\n      address\n        /* \"contracts/WallyStaking.sol\":7697:7707  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":8310:8316  _token */\n      immutable(\"0x54f98f06761e30617bf10b49b7a4bbfa175f7ac33cb018a55e7053fa716317c1\")\n        /* \"contracts/WallyStaking.sol\":8352:8358  amount */\n      tag_18\n      jump\t// in\n    tag_160:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup7\n      dup6\n      sstore\n        /* \"contracts/WallyStaking.sol\":7566:7581  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":8512:8537  userData.stakingStartTime */\n      dup4\n      dup7\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":7680:7696  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":8561:8584  userData.stakingEndTime */\n      dup6\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":8607:8624  userData.duration */\n      dup9\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":8607:8624  userData.duration */\n      dup6\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":8660:8668  plan.apr */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":8645:8657  userData.apr */\n      0x05\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":8512:8537  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":7317:7330  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":7566:7581  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":8712:8734  userData.lastClaimTime */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":8869:8889  totalStaked + amount */\n      tag_8\n      jump\t// in\n    tag_156:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":8913:8952  Staked(msg.sender, amount, duration, 0) */\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/WallyStaking.sol\":7697:7707  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":8913:8952  Staked(msg.sender, amount, duration, 0) */\n      swap3\n      log3\n        /* \"contracts/WallyStaking.sol\":8512:8537  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":7718:8148  if (userData.isActive) {... */\n    tag_157:\n        /* \"contracts/WallyStaking.sol\":7845:7870  userData.stakingStartTime */\n      dup2\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":7845:7875  userData.stakingStartTime != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":7845:7919  userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime */\n      swap1\n      dup2\n      tag_161\n      jumpi\n        /* \"contracts/WallyStaking.sol\":7718:8148  if (userData.isActive) {... */\n    tag_162:\n        /* \"contracts/WallyStaking.sol\":7841:8138  if (userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime) {... */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":7718:8148  if (userData.isActive) {... */\n      tag_158\n        /* \"contracts/WallyStaking.sol\":7841:8138  if (userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime) {... */\n      jumpi\n        /* \"contracts/WallyStaking.sol\":7964:7999  calculatePendingRewards(msg.sender) */\n      tag_165\n        /* \"contracts/WallyStaking.sol\":7697:7707  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":7964:7999  calculatePendingRewards(msg.sender) */\n      tag_6\n      jump\t// in\n    tag_165:\n        /* \"contracts/WallyStaking.sol\":8021:8040  pendingRewards != 0 */\n      dup1\n        /* \"contracts/WallyStaking.sol\":8017:8124  if (pendingRewards != 0) {... */\n      tag_166\n      jumpi\n        /* \"contracts/WallyStaking.sol\":7841:8138  if (userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime) {... */\n    tag_167:\n      pop\n        /* \"contracts/WallyStaking.sol\":7718:8148  if (userData.isActive) {... */\n      jump(tag_158)\n        /* \"contracts/WallyStaking.sol\":8017:8124  if (pendingRewards != 0) {... */\n    tag_166:\n        /* \"contracts/WallyStaking.sol\":8090:8104  pendingRewards */\n      tag_168\n        /* \"contracts/WallyStaking.sol\":7697:7707  msg.sender */\n      swap1\n      caller\n        /* \"contracts/WallyStaking.sol\":8090:8104  pendingRewards */\n      tag_15\n      jump\t// in\n    tag_168:\n        /* \"contracts/WallyStaking.sol\":8017:8124  if (pendingRewards != 0) {... */\n      dup10\n      jump(tag_167)\n        /* \"contracts/WallyStaking.sol\":7845:7919  userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime */\n    tag_161:\n        /* \"contracts/WallyStaking.sol\":7566:7581  block.timestamp */\n      swap1\n      pop\n      timestamp\n        /* \"contracts/WallyStaking.sol\":7879:7919  currentTime >= userData.stakingStartTime */\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":7845:7919  userData.stakingStartTime != 0 && currentTime >= userData.stakingStartTime */\n      dup11\n      jump(tag_162)\n        /* \"contracts/WallyStaking.sol\":7125:7169  if (stakingPaused) revert StakingNotActive() */\n    tag_150:\n        /* \"contracts/WallyStaking.sol\":7151:7169  StakingNotActive() */\n      shl(0xe2, 0x1a4a6f3b)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":7151:7169  StakingNotActive() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":7151:7169  StakingNotActive() */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_38:\n      jumpi(tag_64, callvalue)\n      tag_171\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_172\n      tag_11\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_173\n      tag_12\n      jump\t// in\n    tag_173:\n        /* \"contracts/WallyStaking.sol\":15904:15917  duration == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":15900:15943  if (duration == 0) revert InvalidDuration() */\n      tag_116\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/WallyStaking.sol\":15953:16021  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n      tag_176\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":15957:15970  _stakingPlans */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      dup2\n        /* \"contracts/WallyStaking.sol\":16159:16163  true */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n      dup2\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/WallyStaking.sol\":16173:16181  plan.apr */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_143\n      jumpi\n      dup1\n        /* \"contracts/WallyStaking.sol\":16159:16163  true */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      tag_180\n      swap3\n      add\n        /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      tag_10\n      jump\t// in\n    tag_180:\n      dup2\n      sload\n      swap1\n      0x03\n      shl\n      swap1\n      dup4\n      dup3\n      shl\n      swap2\n      not(0x00)\n      swap1\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":16264:16295  StakingPlanAdded(duration, apr) */\n      0x682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":16264:16295  StakingPlanAdded(duration, apr) */\n      dup1\n      log3\n        /* \"contracts/WallyStaking.sol\":16159:16163  true */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":15953:16021  if (_stakingPlans[duration].isActive) revert DurationAlreadyExists() */\n    tag_176:\n        /* \"contracts/WallyStaking.sol\":15998:16021  DurationAlreadyExists() */\n      shl(0xe1, 0x57706857)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":15998:16021  DurationAlreadyExists() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":15998:16021  DurationAlreadyExists() */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_36:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_185\n      tag_11\n      jump\t// in\n    tag_185:\n        /* \"contracts/WallyStaking.sol\":10593:10603  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":10576:10592  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0xff\n        /* \"contracts/WallyStaking.sol\":10651:10668  userData.isActive */\n      0x06\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/WallyStaking.sol\":10650:10668  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":10646:10692  if (!userData.isActive) revert NoActiveStake() */\n      tag_71\n      jumpi\n        /* \"contracts/WallyStaking.sol\":10736:10771  calculatePendingRewards(msg.sender) */\n      tag_188\n        /* \"contracts/WallyStaking.sol\":10593:10603  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":10736:10771  calculatePendingRewards(msg.sender) */\n      tag_6\n      jump\t// in\n    tag_188:\n        /* \"contracts/WallyStaking.sol\":10785:10804  pendingRewards == 0 */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":10781:10833  if (pendingRewards == 0) revert NoRewardsAvailable() */\n      tag_189\n      jumpi\n        /* \"contracts/WallyStaking.sol\":10999:11013  pendingRewards */\n      tag_191\n        /* \"contracts/WallyStaking.sol\":10911:10926  block.timestamp */\n      swap2\n        /* \"contracts/WallyStaking.sol\":10886:10908  userData.lastClaimTime */\n      0x02\n        /* \"contracts/WallyStaking.sol\":10911:10926  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":10886:10908  userData.lastClaimTime */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":10593:10603  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":10999:11013  pendingRewards */\n      tag_15\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":10781:10833  if (pendingRewards == 0) revert NoRewardsAvailable() */\n    tag_189:\n        /* \"contracts/WallyStaking.sol\":10813:10833  NoRewardsAvailable() */\n      shl(0xe0, 0xafb0be33)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":10813:10833  NoRewardsAvailable() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":10813:10833  NoRewardsAvailable() */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_34:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x40))\n      tag_196\n      tag_2\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_79\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_17\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_32:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_79\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_205\n      tag_2\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_82\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_16\n      jump\t// in\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_30:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_212\n      tag_11\n      jump\t// in\n    tag_212:\n        /* \"contracts/WallyStaking.sol\":9223:9233  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":9206:9222  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/WallyStaking.sol\":9281:9298  userData.isActive */\n      0x06\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sload\n      swap2\n      0xff\n      dup4\n      and\n        /* \"contracts/WallyStaking.sol\":9280:9298  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":9276:9322  if (!userData.isActive) revert NoActiveStake() */\n      tag_71\n      jumpi\n        /* \"contracts/WallyStaking.sol\":9206:9222  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":9355:9378  userData.stakingEndTime */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/WallyStaking.sol\":9336:9351  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":9336:9378  block.timestamp <= userData.stakingEndTime */\n      gt\n      iszero\n        /* \"contracts/WallyStaking.sol\":9332:9407  if (block.timestamp <= userData.stakingEndTime) revert StakingStillLocked() */\n      tag_215\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/WallyStaking.sol\":9884:9906  userData.lastClaimTime */\n      0x02\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      0x00\n      swap4\n      sload\n        /* \"contracts/WallyStaking.sol\":9223:9233  msg.sender */\n      swap6\n      dup5\n        /* \"contracts/WallyStaking.sol\":9600:9635  calculatePendingRewards(msg.sender) */\n      tag_217\n        /* \"contracts/WallyStaking.sol\":9223:9233  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":9600:9635  calculatePendingRewards(msg.sender) */\n      tag_6\n      jump\t// in\n    tag_217:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap7\n      dup2\n      dup6\n      sstore\n        /* \"contracts/WallyStaking.sol\":9716:9741  userData.stakingStartTime */\n      dup2\n      0x01\n      dup7\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      sstore\n        /* \"contracts/WallyStaking.sol\":9792:9809  userData.duration */\n      dup5\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":9792:9809  userData.duration */\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":9823:9835  userData.apr */\n      dup5\n      0x05\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":9884:9906  userData.lastClaimTime */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":10024:10051  _totalStaked - stakedAmount */\n      tag_218\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":10024:10051  _totalStaked - stakedAmount */\n      tag_4\n      jump\t// in\n    tag_218:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n        /* \"contracts/WallyStaking.sol\":10142:10154  stakedAmount */\n      tag_219\n        /* \"contracts/WallyStaking.sol\":9223:9233  msg.sender */\n      dup3\n      caller\n        /* \"contracts/WallyStaking.sol\":10110:10116  _token */\n      immutable(\"0x54f98f06761e30617bf10b49b7a4bbfa175f7ac33cb018a55e7053fa716317c1\")\n        /* \"contracts/WallyStaking.sol\":10142:10154  stakedAmount */\n      tag_14\n      jump\t// in\n    tag_219:\n        /* \"contracts/WallyStaking.sol\":10213:10232  pendingRewards != 0 */\n      dup1\n        /* \"contracts/WallyStaking.sol\":10209:10300  if (pendingRewards != 0) {... */\n      tag_220\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_221:\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":10323:10373  Unstaked(msg.sender, stakedAmount, pendingRewards) */\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/WallyStaking.sol\":9223:9233  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":10323:10373  Unstaked(msg.sender, stakedAmount, pendingRewards) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":9716:9741  userData.stakingStartTime */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":10209:10300  if (pendingRewards != 0) {... */\n    tag_220:\n        /* \"contracts/WallyStaking.sol\":10274:10288  pendingRewards */\n      tag_222\n        /* \"contracts/WallyStaking.sol\":9223:9233  msg.sender */\n      dup2\n      caller\n        /* \"contracts/WallyStaking.sol\":10274:10288  pendingRewards */\n      tag_15\n      jump\t// in\n    tag_222:\n        /* \"contracts/WallyStaking.sol\":10209:10300  if (pendingRewards != 0) {... */\n      jump(tag_221)\n        /* \"contracts/WallyStaking.sol\":9332:9407  if (block.timestamp <= userData.stakingEndTime) revert StakingStillLocked() */\n    tag_215:\n        /* \"contracts/WallyStaking.sol\":9387:9407  StakingStillLocked() */\n      shl(0xe0, 0x25e5ff65)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":9387:9407  StakingStillLocked() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":9387:9407  StakingStillLocked() */\n      revert\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_28:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_227\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_227:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_26:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_64\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_234\n      tag_11\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_235\n      tag_12\n      jump\t// in\n    tag_235:\n        /* \"contracts/WallyStaking.sol\":5778:5792  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup2\n      0xff\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyStaking.sol\":5778:5802  _stakingPaused != paused */\n      sub\n        /* \"contracts/WallyStaking.sol\":5774:5892  if (_stakingPaused != paused) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":5774:5892  if (_stakingPaused != paused) {... */\n    tag_236:\n      not(0xff)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n      0xff\n      dup3\n      and\n      or\n        /* \"contracts/WallyStaking.sol\":5778:5792  _stakingPaused */\n      0x06\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":5860:5881  StakingPaused(paused) */\n      0x3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c69\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup1\n        /* \"contracts/WallyStaking.sol\":5860:5881  StakingPaused(paused) */\n      log2\n        /* \"contracts/WallyStaking.sol\":5774:5892  if (_stakingPaused != paused) {... */\n      dup1\n      dup1\n      jump(tag_191)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_24:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_227\n      tag_243\n      tag_1\n      jump\t// in\n    tag_243:\n      tag_6\n      jump\t// in\n    tag_22:\n      jumpi(tag_64, callvalue)\n      jumpi(tag_64, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_64\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_251:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_250:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_251)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_64\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_64\n      jumpi\n      jump\t// out\n    tag_3:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_64\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      swap1\n      jump\t// out\n    tag_4:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_258\n      jumpi\n      jump\t// out\n    tag_258:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_5:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_258\n      jumpi\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":12265:13400  function calculatePendingRewards(address user) ... */\n    tag_6:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":12427:12443  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WallyStaking.sol\":12473:12490  userData.isActive */\n      0x06\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      0xff\n      and\n        /* \"contracts/WallyStaking.sol\":12472:12490  !userData.isActive */\n      iszero\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n      iszero\n        /* \"contracts/WallyStaking.sol\":12472:12520  !userData.isActive || userData.stakedAmount == 0 */\n      tag_262\n      jumpi\n        /* \"contracts/WallyStaking.sol\":12265:13400  function calculatePendingRewards(address user) ... */\n    tag_263:\n        /* \"contracts/WallyStaking.sol\":12468:12555  if (!userData.isActive || userData.stakedAmount == 0) {... */\n      tag_264\n      jumpi\n        /* \"contracts/WallyStaking.sol\":12805:12837  endTime - userData.lastClaimTime */\n      tag_266\n        /* \"contracts/WallyStaking.sol\":12642:12657  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":12427:12443  _userStakingData */\n      0x03\n        /* \"contracts/WallyStaking.sol\":12682:12705  userData.stakingEndTime */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":12642:12657  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/WallyStaking.sol\":12671:12705  endTime >= userData.stakingEndTime */\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":12667:12765  if (endTime >= userData.stakingEndTime) {... */\n      tag_267\n      jumpi\n        /* \"contracts/WallyStaking.sol\":12265:13400  function calculatePendingRewards(address user) ... */\n    tag_268:\n        /* \"contracts/WallyStaking.sol\":12815:12837  userData.lastClaimTime */\n      pop\n      0x02\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":12805:12837  endTime - userData.lastClaimTime */\n      swap1\n      tag_4\n      jump\t// in\n    tag_266:\n        /* \"contracts/WallyStaking.sol\":12851:12867  timeElapsed == 0 */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":12847:12902  if (timeElapsed == 0) {... */\n      tag_269\n      jumpi\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x496cebb800\n      swap2\n        /* \"contracts/WallyStaking.sol\":13169:13205  userData.stakedAmount * userData.apr */\n      tag_271\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n        /* \"contracts/WallyStaking.sol\":13193:13205  userData.apr */\n      0x05\n        /* \"contracts/WallyStaking.sol\":13169:13219  userData.stakedAmount * userData.apr * timeElapsed */\n      tag_272\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap5\n      sload\n        /* \"contracts/WallyStaking.sol\":13193:13205  userData.apr */\n      swap2\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":13169:13205  userData.stakedAmount * userData.apr */\n      swap1\n      tag_5\n      jump\t// in\n    tag_271:\n        /* \"contracts/WallyStaking.sol\":13169:13219  userData.stakedAmount * userData.apr * timeElapsed */\n      tag_5\n      jump\t// in\n    tag_272:\n        /* \"contracts/WallyStaking.sol\":2788:2796  365 days */\n      div\n        /* \"contracts/WallyStaking.sol\":12265:13400  function calculatePendingRewards(address user) ... */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":12847:12902  if (timeElapsed == 0) {... */\n    tag_269:\n        /* \"contracts/WallyStaking.sol\":12883:12891  return 0 */\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":12883:12891  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":12667:12765  if (endTime >= userData.stakingEndTime) {... */\n    tag_267:\n        /* \"contracts/WallyStaking.sol\":12721:12754  endTime = userData.stakingEndTime */\n      swap1\n      pop\n        /* \"contracts/WallyStaking.sol\":12667:12765  if (endTime >= userData.stakingEndTime) {... */\n      0x00\n      jump(tag_268)\n        /* \"contracts/WallyStaking.sol\":12468:12555  if (!userData.isActive || userData.stakedAmount == 0) {... */\n    tag_264:\n        /* \"contracts/WallyStaking.sol\":12536:12544  return 0 */\n      pop\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":12536:12544  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":12472:12520  !userData.isActive || userData.stakedAmount == 0 */\n    tag_262:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      pop\n      dup1\n      sload\n        /* \"contracts/WallyStaking.sol\":12494:12520  userData.stakedAmount == 0 */\n      iszero\n        /* \"contracts/WallyStaking.sol\":12472:12520  !userData.isActive || userData.stakedAmount == 0 */\n      jump(tag_263)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_8:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_258\n      jumpi\n      jump\t// out\n    tag_9:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_143\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_10:\n        /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n      0x07\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_277\n      jumpi\n        /* \"contracts/WallyStaking.sol\":16206:16225  _availableDurations */\n      0x07\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_277:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_279\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_279:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":1087:1110  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_14:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      swap3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_285\n      swap2\n      tag_286\n      0x64\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_9\n      jump\t// in\n    tag_286:\n      tag_19\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":16458:16947  function _claimRewards(address user, uint256 amount) ... */\n    tag_15:\n        /* \"contracts/WallyStaking.sol\":16624:16636  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":16659:16680  amount >= rewardsPool */\n      dup1\n      dup4\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":16655:16714  if (amount >= rewardsPool) revert InsufficientRewardsPool() */\n      tag_287\n      jumpi\n        /* \"contracts/WallyStaking.sol\":16913:16940  RewardClaimed(user, amount) */\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/WallyStaking.sol\":16826:16846  rewardsPool - amount */\n      swap2\n      tag_289\n      dup5\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":16826:16846  rewardsPool - amount */\n      swap4\n      tag_4\n      jump\t// in\n    tag_289:\n        /* \"contracts/WallyStaking.sol\":16624:16636  _rewardsPool */\n      0x05\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":16882:16888  amount */\n      tag_290\n        /* \"contracts/WallyStaking.sol\":16856:16862  _token */\n      dup5\n      dup3\n      immutable(\"0x54f98f06761e30617bf10b49b7a4bbfa175f7ac33cb018a55e7053fa716317c1\")\n        /* \"contracts/WallyStaking.sol\":16882:16888  amount */\n      tag_14\n      jump\t// in\n    tag_290:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/WallyStaking.sol\":16913:16940  RewardClaimed(user, amount) */\n      log2\n        /* \"contracts/WallyStaking.sol\":16458:16947  function _claimRewards(address user, uint256 amount) ... */\n      jump\t// out\n        /* \"contracts/WallyStaking.sol\":16655:16714  if (amount >= rewardsPool) revert InsufficientRewardsPool() */\n    tag_287:\n        /* \"contracts/WallyStaking.sol\":16689:16714  InsufficientRewardsPool() */\n      mstore(0x00, shl(0xe0, 0x447b0f67))\n      revert(0x00, 0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_16:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_269\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_17:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_18:\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap3\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_285\n      swap2\n      tag_286\n      0x84\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_9\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_19:\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7823:8244  assembly (\"memory-safe\") {... */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7823:8244  assembly (\"memory-safe\") {... */\n      dup3\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_297\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      tag_299\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_302:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":940:16949  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_301)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7823:8244  assembly (\"memory-safe\") {... */\n    tag_297:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n\n    auxdata: 0xa2646970667358221220750f1d89420d65f0fddf3b02ea5972f1d7d1f14966d5c6701e52c18cdb657fdd64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 963,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_1349": {
									"entryPoint": 1081,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_1350": {
									"entryPoint": 1209,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0601f61174238819003918201601f19168301916001600160401b038311848410176103795780849260409485528339810103126103ab5761004d6020610046836103af565b92016103af565b600180556001600160a01b0390911690811561039c576001600160a01b0381161561039c5761009291608052610082816103c3565b5061008c81610439565b506104b9565b505f5160206117025f395f51905f525f81815260208190527ff6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d25580545f5160206116c25f395f51905f5291829055909290917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9080a46276a7005f5260026020525f5160206116625f395f51905f525460ff1661038d576276a7005f5260026020525f5160206116625f395f51905f52805460ff191660011790556101f47fa1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8d5560075468010000000000000000811015610379576001810180600755811015610365576276a7009060075f5260205f2001556101f46276a7005f5160206116a25f395f51905f525f80a362ed4e005f5260026020525f5160206116425f395f51905f525460ff1661038d5762ed4e005f5260026020525f5160206116425f395f51905f52805460ff191660011790556103207f089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd83355600754680100000000000000008110156103795760018101806007558110156103655762ed4e009060075f5260205f20015561032062ed4e005f5160206116a25f395f51905f525f80a36301e133805f5260026020525f5160206116e25f395f51905f525460ff1661038d576301e133805f5260026020525f5160206116e25f395f51905f52805460ff191660011790556104b07fdc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33c5560075468010000000000000000811015610379576001810180600755811015610365576301e133809060075f5260205f2001556104b06301e133805f5160206116a25f395f51905f525f80a360ff19600654166006556040516110c8908161053a82396080518181816101a5015281816102d90152818161070a01528181610a200152610ea30152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b635770685760e11b5f5260045ffd5b63f6b2911f60e01b5f5260045ffd5b5f80fd5b51906001600160a01b03821682036103ab57565b6001600160a01b0381165f9081525f5160206117225f395f51905f52602052604090205460ff16610434576001600160a01b03165f8181525f5160206117225f395f51905f5260205260408120805460ff191660011790553391905f5160206116025f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081525f5160206116225f395f51905f52602052604090205460ff16610434576001600160a01b03165f8181525f5160206116225f395f51905f5260205260408120805460ff191660011790553391905f5160206116c25f395f51905f52905f5160206116025f395f51905f529080a4600190565b6001600160a01b0381165f9081525f5160206116825f395f51905f52602052604090205460ff16610434576001600160a01b03165f8181525f5160206116825f395f51905f5260205260408120805460ff191660011790553391905f5160206117025f395f51905f52905f5160206116025f395f51905f529080a460019056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610b6e57508063097aad1014610b4b57806315b31bbb14610ad1578063248a9ca314610a9f5780632def6620146109975780632f2ff15d1461095a57806336568abe14610916578063372500ab146108b15780635ef23fa9146107ec5780637b0472f014610693578063809336081461059d57806391d14854146105555780639fca9c221461051d578063a217fddf14610503578063aea1b6ef1461040e578063b6b365c214610358578063beceed391461024e578063d547741f1461020a578063db2e21bc1461012f5763dfe6b5d6146100f8575f80fd5b3461012b575f36600319011261012b57606060045460055460ff6006541690604051928352602083015215156040820152f35b5f80fd5b3461012b575f36600319011261012b57610147610d21565b335f52600360205260405f20600681019081549160ff8316156101fb57816002915f93549484835584600184015584600384015584600484015584600584015560ff19169055015561019b81600454610c03565b6004556101c981337f0000000000000000000000000000000000000000000000000000000000000000610e1e565b6040519081527f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969560203392a260018055005b637d9a44a160e11b5f5260045ffd5b3461012b57604036600319011261012b5761024c600435610229610bd7565b90610247610242825f525f602052600160405f20015490565b610de6565b610f6b565b005b3461012b57602036600319011261012b5760043561026a610d21565b335f9081527ff6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254602052604090205460ff1615610321578015610312576020816103027ff8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312936005546102fd8230337f0000000000000000000000000000000000000000000000000000000000000000610feb565b610cc6565b600555604051908152a160018055005b63162908e360e11b5f5260045ffd5b63e2517d3f60e01b5f52336004527f51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b60245260445ffd5b3461012b575f36600319011261012b576040518060206007549283815201809260075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688905f5b8181106103f857505050816103b6910382610cd3565b604051918291602083019060208452518091526040830191905f5b8181106103df575050500390f35b82518452859450602093840193909201916001016103d1565b82548452602090930192600192830192016103a0565b3461012b57606036600319011261012b576004356024359060443580151580910361012b5761043b610d21565b610443610d77565b5f6007545f5b8181106104d9575b5050156104ca57815f52600260205260405f20908360018301818154036104c2575b50508060ff8354161515036104af575b50507fad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff15f80a360018055005b60ff801983541691161790558280610483565b558385610473565b637616640160e01b5f5260045ffd5b846104e382610cf5565b90549060031b1c146104f757600101610449565b50505060018480610451565b3461012b575f36600319011261012b5760206040515f8152f35b3461012b57602036600319011261012b576004355f5260026020526040805f20600160ff825416910154825191151582526020820152f35b3461012b57604036600319011261012b5761056e610bd7565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461012b57602036600319011261012b576105b6610bc1565b60405160e081019181831067ffffffffffffffff84111761067f5760e0926040525f8252602082015f8152604083015f8152606084015f815260808501915f835260a08601935f855261064e60c08801965f885260018060a01b0381165f52600360205260ff600660405f2080548c526001810154865260038101548752600481015488526005810154895201541615158852610c37565b8552604051965187525160208701525160408601525160608501525160808401525160a083015251151560c0820152f35b634e487b7160e01b5f52604160045260245ffd5b3461012b576106a136610bed565b906106aa610d21565b60ff60065416600454906107dd57811561031257825f52600260205260405f2060ff815416156104ca5761075e918391335f52600360205260405f20906001600683019160ff835416610799575b6107028942610cc6565b61072e8730337f0000000000000000000000000000000000000000000000000000000000000000610feb565b8685554283860155600385015588600485015501546005830155600160ff19825416179055600242910155610cc6565b6004556040519081525f60208201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60403392a360018055005b8184015480151590816107d2575b50156106f8576107b633610c37565b806107c2575b506106f8565b6107cc9033610e60565b896107bc565b90504210158a6107a7565b631a4a6f3b60e21b5f5260045ffd5b3461012b576107fa36610bed565b90610803610d21565b61080b610d77565b80156104ca57805f52600260205260ff60405f2054166108a257805f52600260205281600160405f208160ff1982541617815501556007546801000000000000000081101561067f578060016108649201600755610cf5565b81549060031b9083821b915f19901b19161790557f682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc3645f80a360018055005b635770685760e11b5f5260045ffd5b3461012b575f36600319011261012b576108c9610d21565b335f52600360205260405f2060ff600682015416156101fb576108eb33610c37565b8015610907576109019160024291015533610e60565b60018055005b63afb0be3360e01b5f5260045ffd5b3461012b57604036600319011261012b5761092f610bd7565b336001600160a01b0382160361094b5761024c90600435610f6b565b63334bd91960e11b5f5260045ffd5b3461012b57604036600319011261012b5761024c600435610979610bd7565b90610992610242825f525f602052600160405f20015490565b610ee9565b3461012b575f36600319011261012b576109af610d21565b335f52600360205260405f206006810180549160ff8316156101fb5760038101918254421115610a9057816002915f935495846109eb33610c37565b968185558160018601555584600484015584600584015560ff191690550155610a1682600454610c03565b600455610a4482337f0000000000000000000000000000000000000000000000000000000000000000610e1e565b80610a81575b60405191825260208201527f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e60403392a260018055005b610a8b8133610e60565b610a4a565b6325e5ff6560e01b5f5260045ffd5b3461012b57602036600319011261012b576020610ac96004355f525f602052600160405f20015490565b604051908152f35b3461012b57602036600319011261012b5760043580151580910361012b57610af7610d21565b610aff610d77565b6006548160ff8216151503610b145760018055005b60ff191660ff8216176006557f3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c695f80a28080610901565b3461012b57602036600319011261012b576020610ac9610b69610bc1565b610c37565b3461012b57602036600319011261012b576004359063ffffffff60e01b821680920361012b57602091637965db0b60e01b8114908115610bb0575b5015158152f35b6301ffc9a760e01b14905083610ba9565b600435906001600160a01b038216820361012b57565b602435906001600160a01b038216820361012b57565b604090600319011261012b576004359060243590565b91908203918211610c1057565b634e487b7160e01b5f52601160045260245ffd5b81810292918115918404141715610c1057565b6001600160a01b03165f908152600360205260409020600681015460ff16158015610cbd575b610cb857610c7f42600383015480421015610cb0575b50600283015490610c03565b908115610caa5764496cebb80091610ca1826005610ca6945491015490610c24565b610c24565b0490565b50505f90565b90505f610c73565b505f90565b50805415610c5d565b91908201809211610c1057565b90601f8019910116810190811067ffffffffffffffff82111761067f57604052565b600754811015610d0d5760075f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b600260015414610d32576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615610daf57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff1615610e085750565b63e2517d3f60e01b5f523360045260245260445ffd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610e5e91610e59606483610cd3565b61102f565b565b60055480831015610eda577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724191610e9984602093610c03565b600555610ec784827f0000000000000000000000000000000000000000000000000000000000000000610e1e565b6040519384526001600160a01b031692a2565b63447b0f6760e01b5f5260045ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610caa575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610caa575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610e5e91610e59608483610cd3565b905f602091828151910182855af115611087575f513d61107e57506001600160a01b0381163b155b61105e5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611057565b6040513d5f823e3d90fdfea2646970667358221220750f1d89420d65f0fddf3b02ea5972f1d7d1f14966d5c6701e52c18cdb657fdd64736f6c634300081c00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd832a1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8cf6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775dc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33b51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152bad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5",
							"opcodes": "PUSH1 0xA0 PUSH1 0x1F PUSH2 0x1742 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x379 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH2 0x4D PUSH1 0x20 PUSH2 0x46 DUP4 PUSH2 0x3AF JUMP JUMPDEST SWAP3 ADD PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x39C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x39C JUMPI PUSH2 0x92 SWAP2 PUSH1 0x80 MSTORE PUSH2 0x82 DUP2 PUSH2 0x3C3 JUMP JUMPDEST POP PUSH2 0x8C DUP2 PUSH2 0x439 JUMP JUMPDEST POP PUSH2 0x4B9 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1702 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xF6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D255 DUP1 SLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16C2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 DUP3 SWAP1 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP1 DUP1 LOG4 PUSH3 0x76A700 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1662 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x38D JUMPI PUSH3 0x76A700 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1662 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1F4 PUSH32 0xA1EF5B42F18533D67A183A193EA6C3FABFAA3BDABC3FC0E3F65B19B517DF6E8D SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH3 0x76A700 SWAP1 PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x1F4 PUSH3 0x76A700 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16A2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG3 PUSH3 0xED4E00 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1642 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x38D JUMPI PUSH3 0xED4E00 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1642 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x320 PUSH32 0x89CFCBF844E824FEEE5F634CBC488382291F3C9E0DE5905F3C30812390DD833 SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH3 0xED4E00 SWAP1 PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x320 PUSH3 0xED4E00 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16A2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG3 PUSH4 0x1E13380 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16E2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x38D JUMPI PUSH4 0x1E13380 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16E2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x4B0 PUSH32 0xDC083EB4DA7563BBD761324B5158D9D40AF7C7174AFE39B0B31A7577C44FC33C SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH4 0x1E13380 SWAP1 PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x4B0 PUSH4 0x1E13380 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16A2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG3 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH2 0x10C8 SWAP1 DUP2 PUSH2 0x53A DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1A5 ADD MSTORE DUP2 DUP2 PUSH2 0x2D9 ADD MSTORE DUP2 DUP2 PUSH2 0x70A ADD MSTORE DUP2 DUP2 PUSH2 0xA20 ADD MSTORE PUSH2 0xEA3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x57706857 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xF6B2911F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1722 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x434 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1722 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1602 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1622 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x434 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1622 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x16C2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1602 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1682 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x434 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1682 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1702 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1602 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xB6E JUMPI POP DUP1 PUSH4 0x97AAD10 EQ PUSH2 0xB4B JUMPI DUP1 PUSH4 0x15B31BBB EQ PUSH2 0xAD1 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xA9F JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x95A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x8B1 JUMPI DUP1 PUSH4 0x5EF23FA9 EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0x80933608 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x9FCA9C22 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xAEA1B6EF EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xB6B365C2 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x12F JUMPI PUSH4 0xDFE6B5D6 EQ PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x60 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0xFF PUSH1 0x6 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x147 PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1FB JUMPI DUP2 PUSH1 0x2 SWAP2 PUSH0 SWAP4 SLOAD SWAP5 DUP5 DUP4 SSTORE DUP5 PUSH1 0x1 DUP5 ADD SSTORE DUP5 PUSH1 0x3 DUP5 ADD SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0x19B DUP2 PUSH1 0x4 SLOAD PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x1C9 DUP2 CALLER PUSH32 0x0 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x7D9A44A1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x24C PUSH1 0x4 CALLDATALOAD PUSH2 0x229 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x247 PUSH2 0x242 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26A PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xF6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D254 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x321 JUMPI DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x20 DUP2 PUSH2 0x302 PUSH32 0xF8FAD42E780BFA5459BE3FE691E8BA1AEC70342250112139C5771C3FD155F312 SWAP4 PUSH1 0x5 SLOAD PUSH2 0x2FD DUP3 ADDRESS CALLER PUSH32 0x0 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x51785D261C3B3E8C2CFE2D0E108B9AB2B1FB703FF9E9E49ABA4EBDC85C36152B PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3F8 JUMPI POP POP POP DUP2 PUSH2 0x3B6 SWAP2 SUB DUP3 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3DF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3D1 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x12B JUMPI PUSH2 0x43B PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x443 PUSH2 0xD77 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4D9 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x4CA JUMPI DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 PUSH1 0x1 DUP4 ADD DUP2 DUP2 SLOAD SUB PUSH2 0x4C2 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xFF DUP4 SLOAD AND ISZERO ISZERO SUB PUSH2 0x4AF JUMPI JUMPDEST POP POP PUSH32 0xAD2954A6781CDC42B8AF5DF6F557041B3F146AAF8FBC031D767B7AD48164CFF1 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP3 DUP1 PUSH2 0x483 JUMP JUMPDEST SSTORE DUP4 DUP6 PUSH2 0x473 JUMP JUMPDEST PUSH4 0x76166401 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST DUP5 PUSH2 0x4E3 DUP3 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR EQ PUSH2 0x4F7 JUMPI PUSH1 0x1 ADD PUSH2 0x449 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP5 DUP1 PUSH2 0x451 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD AND SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x56E PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x5B6 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x67F JUMPI PUSH1 0xE0 SWAP3 PUSH1 0x40 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH0 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH0 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH0 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 PUSH0 DUP6 MSTORE PUSH2 0x64E PUSH1 0xC0 DUP9 ADD SWAP7 PUSH0 DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP13 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP7 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP8 MSTORE PUSH1 0x4 DUP2 ADD SLOAD DUP9 MSTORE PUSH1 0x5 DUP2 ADD SLOAD DUP10 MSTORE ADD SLOAD AND ISZERO ISZERO DUP9 MSTORE PUSH2 0xC37 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x40 MLOAD SWAP7 MLOAD DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH2 0x6A1 CALLDATASIZE PUSH2 0xBED JUMP JUMPDEST SWAP1 PUSH2 0x6AA PUSH2 0xD21 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 SLOAD AND PUSH1 0x4 SLOAD SWAP1 PUSH2 0x7DD JUMPI DUP2 ISZERO PUSH2 0x312 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0x4CA JUMPI PUSH2 0x75E SWAP2 DUP4 SWAP2 CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x6 DUP4 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0x799 JUMPI JUMPDEST PUSH2 0x702 DUP10 TIMESTAMP PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x72E DUP8 ADDRESS CALLER PUSH32 0x0 PUSH2 0xFEB JUMP JUMPDEST DUP7 DUP6 SSTORE TIMESTAMP DUP4 DUP7 ADD SSTORE PUSH1 0x3 DUP6 ADD SSTORE DUP9 PUSH1 0x4 DUP6 ADD SSTORE ADD SLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x40 CALLER SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP2 DUP5 ADD SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x7D2 JUMPI JUMPDEST POP ISZERO PUSH2 0x6F8 JUMPI PUSH2 0x7B6 CALLER PUSH2 0xC37 JUMP JUMPDEST DUP1 PUSH2 0x7C2 JUMPI JUMPDEST POP PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x7CC SWAP1 CALLER PUSH2 0xE60 JUMP JUMPDEST DUP10 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO DUP11 PUSH2 0x7A7 JUMP JUMPDEST PUSH4 0x1A4A6F3B PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH2 0x7FA CALLDATASIZE PUSH2 0xBED JUMP JUMPDEST SWAP1 PUSH2 0x803 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x80B PUSH2 0xD77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CA JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x8A2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH1 0xFF NOT DUP3 SLOAD AND OR DUP2 SSTORE ADD SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x67F JUMPI DUP1 PUSH1 0x1 PUSH2 0x864 SWAP3 ADD PUSH1 0x7 SSTORE PUSH2 0xCF5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH32 0x682563ED446791DCD2BB66AA531EBAF528BCE493E57F037313263799851BC364 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x57706857 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x8C9 PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND ISZERO PUSH2 0x1FB JUMPI PUSH2 0x8EB CALLER PUSH2 0xC37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x907 JUMPI PUSH2 0x901 SWAP2 PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE CALLER PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0xAFB0BE33 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x92F PUSH2 0xBD7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x94B JUMPI PUSH2 0x24C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xF6B JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x24C PUSH1 0x4 CALLDATALOAD PUSH2 0x979 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x992 PUSH2 0x242 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x9AF PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1FB JUMPI PUSH1 0x3 DUP2 ADD SWAP2 DUP3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xA90 JUMPI DUP2 PUSH1 0x2 SWAP2 PUSH0 SWAP4 SLOAD SWAP6 DUP5 PUSH2 0x9EB CALLER PUSH2 0xC37 JUMP JUMPDEST SWAP7 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0xA16 DUP3 PUSH1 0x4 SLOAD PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0xA44 DUP3 CALLER PUSH32 0x0 PUSH2 0xE1E JUMP JUMPDEST DUP1 PUSH2 0xA81 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0xA8B DUP2 CALLER PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH4 0x25E5FF65 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x20 PUSH2 0xAC9 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x12B JUMPI PUSH2 0xAF7 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xAFF PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0xB14 JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0x6 SSTORE PUSH32 0x3CF4FE733160F8F8C48336FAB32ACEE32EBAAA423A08A2BE4E5CEFF97DD98C69 PUSH0 DUP1 LOG2 DUP1 DUP1 PUSH2 0x901 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x20 PUSH2 0xAC9 PUSH2 0xB69 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x12B JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x12B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x12B JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI JUMPDEST PUSH2 0xCB8 JUMPI PUSH2 0xC7F TIMESTAMP PUSH1 0x3 DUP4 ADD SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0xCB0 JUMPI JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH2 0xC03 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0xCAA JUMPI PUSH5 0x496CEBB800 SWAP2 PUSH2 0xCA1 DUP3 PUSH1 0x5 PUSH2 0xCA6 SWAP5 SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC73 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST POP DUP1 SLOAD ISZERO PUSH2 0xC5D JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xC10 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xD32 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAF JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE08 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE5E SWAP2 PUSH2 0xE59 PUSH1 0x64 DUP4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0xEDA JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 PUSH2 0xE99 DUP5 PUSH1 0x20 SWAP4 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0xEC7 DUP5 DUP3 PUSH32 0x0 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 JUMP JUMPDEST PUSH4 0x447B0F67 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCAA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCAA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE5E SWAP2 PUSH2 0xE59 PUSH1 0x84 DUP4 PUSH2 0xCD3 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x1087 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x107E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x105E JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xF1D89420D65F0FDDF3B02EA5972F1D7D1F14966D5C6 PUSH17 0x1E52C18CDB657FDD64736F6C634300081C STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D7D7FFB7A CALLVALUE DUP15 SHR PUSH11 0x2869081A26547B49160DD RETURNDATASIZE 0xF7 0x2D SAR PUSH22 0xA570EB9B698292EC089CFCBF844E824FEEE5F634CBC4 DUP9 CODESIZE 0x22 SWAP2 RETURN 0xC9 0xE0 0xDE MSIZE SDIV RETURN 0xC3 ADDMOD SLT CODECOPY 0xD 0xD8 ORIGIN LOG1 0xEF JUMPDEST TIMESTAMP CALL DUP6 CALLER 0xD6 PUSH27 0x183A193EA6C3FABFAA3BDABC3FC0E3F65B19B517DF6E8CF6C17DA3 DUP7 TSTORE SWAP7 GASLIMIT SLOAD PUSH14 0xB4630D07C45803FB99F9B61DD452 0xDE DUP14 0xE1 0xCD 0x21 MSIZE 0xD2 SLOAD PUSH9 0x2563ED446791DCD2BB PUSH7 0xAA531EBAF528BC 0xE4 SWAP4 0xE5 PUSH32 0x37313263799851BC364A49807205CE4D355092EF5A8A18F56E8913CF4A201FB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xDC083EB4DA7563BBD761324B5158D9D40AF7C7174AFE CODECOPY 0xB0 0xB3 BYTE PUSH22 0x77C44FC33B51785D261C3B3E8C2CFE2D0E108B9AB2B1 0xFB PUSH17 0x3FF9E9E49ABA4EBDC85C36152BAD3228B6 PUSH23 0xF7D3CD4284A5443F17F1962B36E491B30A40B2405849E5 SWAP8 0xBA PUSH0 0xB5 ",
							"sourceMap": "940:16009:11:-:0;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;-1:-1:-1;;;;;940:16009:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1716:1:5;;;-1:-1:-1;;;;;940:16009:11;;;;3132:26;;3128:59;;-1:-1:-1;;;;;940:16009:11;;3201:26;3197:59;;3439:47;3267:29;;;3338:44;;;:::i;:::-;;3392:37;;;:::i;:::-;;3439:47;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;940:16009:11;;;;;;;3901:22:0;940:16009:11;;-1:-1:-1;;;;;;;;;;;1716:1:5;;;;1087:23:11;;940:16009;;5886:52:0;;-1:-1:-1;5886:52:0;3699:7:11;-1:-1:-1;940:16009:11;15957:13;940:16009;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;15953:68;;3699:7;-1:-1:-1;940:16009:11;15957:13;940:16009;;-1:-1:-1;;;;;;;;;;;1165:33:11;;-1:-1:-1;;1165:33:11;1716:1:5;1165:33:11;;;3708:3;16173:8;1716:1:5;16206:19:11;940:16009;;;;;;;1716:1:5;940:16009:11;;;16206:19;940:16009;;;;;;3699:7;940:16009;16206:19;-1:-1:-1;940:16009:11;;-1:-1:-1;940:16009:11;;;3708:3;3699:7;-1:-1:-1;;;;;;;;;;;;16264:31:11;;3762:8;-1:-1:-1;940:16009:11;15957:13;940:16009;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;15953:68;;3762:8;-1:-1:-1;940:16009:11;15957:13;940:16009;;-1:-1:-1;;;;;;;;;;;1165:33:11;;-1:-1:-1;;1165:33:11;1716:1:5;1165:33:11;;;3772:3;16173:8;1716:1:5;16206:19:11;940:16009;;;;;;;1716:1:5;940:16009:11;;;16206:19;940:16009;;;;;;3762:8;940:16009;16206:19;-1:-1:-1;940:16009:11;;-1:-1:-1;940:16009:11;;;3772:3;3762:8;-1:-1:-1;;;;;;;;;;;;16264:31:11;;3825:8;-1:-1:-1;940:16009:11;15957:13;940:16009;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;15953:68;;3825:8;-1:-1:-1;940:16009:11;15957:13;940:16009;;-1:-1:-1;;;;;;;;;;;1165:33:11;;-1:-1:-1;;1165:33:11;1716:1:5;1165:33:11;;;3835:4;16173:8;1716:1:5;16206:19:11;940:16009;;;;;;;1716:1:5;940:16009:11;;;16206:19;940:16009;;;;;;3825:8;940:16009;16206:19;-1:-1:-1;940:16009:11;;-1:-1:-1;940:16009:11;;;3835:4;3825:8;-1:-1:-1;;;;;;;;;;;;16264:31:11;;1165:33;;3884:22;1165:33;;3884:22;1165:33;940:16009;;;;;;;;3267:29;940:16009;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:16009:11;;;;;-1:-1:-1;940:16009:11;;;;;-1:-1:-1;940:16009:11;;;;;-1:-1:-1;940:16009:11;15953:68;15998:23;;;-1:-1:-1;15998:23:11;;-1:-1:-1;15998:23:11;3197:59;3167:20;;;-1:-1:-1;3236:20:11;;-1:-1:-1;3236:20:11;940:16009;-1:-1:-1;940:16009:11;;;;;-1:-1:-1;;;;;940:16009:11;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;940:16009:11;;3156:1;940:16009;;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;3156:1;940:16009;;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;;;1165:33;;-1:-1:-1;;1165:33:11;940:16009;1165:33;;;735:10:8;;940:16009:11;-1:-1:-1;;;;;;;;;;;3156:1:11;;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;3156:1:11;6466:12:0;:::o;6179:316::-;-1:-1:-1;;;;;940:16009:11;;;;;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;;;;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;;;1165:33;;-1:-1:-1;;1165:33:11;940:16009;1165:33;;;735:10:8;;940:16009:11;-1:-1:-1;;;;;;;;;;;1087:23:11;-1:-1:-1;;;;;;;;;;;6370:40:0;940:16009:11;6370:40:0;6347:4;6424:11;:::o;6179:316::-;-1:-1:-1;;;;;940:16009:11;;;;;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;;;;;-1:-1:-1;;;;;;;;;;;940:16009:11;;;;;1165:33;;-1:-1:-1;;1165:33:11;940:16009;1165:33;;;735:10:8;;940:16009:11;-1:-1:-1;;;;;;;;;;;1165:33:11;-1:-1:-1;;;;;;;;;;;6370:40:0;940:16009:11;6370:40:0;6347:4;6424:11;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_12016": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint256t_uint256": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"checked_add_uint256": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_calculatePendingRewards": {
									"entryPoint": 3127,
									"id": 2001,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_callOptionalReturn": {
									"entryPoint": 4143,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 3558,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_12018": {
									"entryPoint": 3447,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_claimRewards": {
									"entryPoint": 3680,
									"id": 2227,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 3817,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 3361,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 3947,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_safeTransfer": {
									"entryPoint": 3614,
									"id": 656,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 4075,
									"id": 683,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"storage_array_index_access_uint256_dyn": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1206": [
									{
										"length": 32,
										"start": 421
									},
									{
										"length": 32,
										"start": 729
									},
									{
										"length": 32,
										"start": 1802
									},
									{
										"length": 32,
										"start": 2592
									},
									{
										"length": 32,
										"start": 3747
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610b6e57508063097aad1014610b4b57806315b31bbb14610ad1578063248a9ca314610a9f5780632def6620146109975780632f2ff15d1461095a57806336568abe14610916578063372500ab146108b15780635ef23fa9146107ec5780637b0472f014610693578063809336081461059d57806391d14854146105555780639fca9c221461051d578063a217fddf14610503578063aea1b6ef1461040e578063b6b365c214610358578063beceed391461024e578063d547741f1461020a578063db2e21bc1461012f5763dfe6b5d6146100f8575f80fd5b3461012b575f36600319011261012b57606060045460055460ff6006541690604051928352602083015215156040820152f35b5f80fd5b3461012b575f36600319011261012b57610147610d21565b335f52600360205260405f20600681019081549160ff8316156101fb57816002915f93549484835584600184015584600384015584600484015584600584015560ff19169055015561019b81600454610c03565b6004556101c981337f0000000000000000000000000000000000000000000000000000000000000000610e1e565b6040519081527f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969560203392a260018055005b637d9a44a160e11b5f5260045ffd5b3461012b57604036600319011261012b5761024c600435610229610bd7565b90610247610242825f525f602052600160405f20015490565b610de6565b610f6b565b005b3461012b57602036600319011261012b5760043561026a610d21565b335f9081527ff6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254602052604090205460ff1615610321578015610312576020816103027ff8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312936005546102fd8230337f0000000000000000000000000000000000000000000000000000000000000000610feb565b610cc6565b600555604051908152a160018055005b63162908e360e11b5f5260045ffd5b63e2517d3f60e01b5f52336004527f51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b60245260445ffd5b3461012b575f36600319011261012b576040518060206007549283815201809260075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688905f5b8181106103f857505050816103b6910382610cd3565b604051918291602083019060208452518091526040830191905f5b8181106103df575050500390f35b82518452859450602093840193909201916001016103d1565b82548452602090930192600192830192016103a0565b3461012b57606036600319011261012b576004356024359060443580151580910361012b5761043b610d21565b610443610d77565b5f6007545f5b8181106104d9575b5050156104ca57815f52600260205260405f20908360018301818154036104c2575b50508060ff8354161515036104af575b50507fad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff15f80a360018055005b60ff801983541691161790558280610483565b558385610473565b637616640160e01b5f5260045ffd5b846104e382610cf5565b90549060031b1c146104f757600101610449565b50505060018480610451565b3461012b575f36600319011261012b5760206040515f8152f35b3461012b57602036600319011261012b576004355f5260026020526040805f20600160ff825416910154825191151582526020820152f35b3461012b57604036600319011261012b5761056e610bd7565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461012b57602036600319011261012b576105b6610bc1565b60405160e081019181831067ffffffffffffffff84111761067f5760e0926040525f8252602082015f8152604083015f8152606084015f815260808501915f835260a08601935f855261064e60c08801965f885260018060a01b0381165f52600360205260ff600660405f2080548c526001810154865260038101548752600481015488526005810154895201541615158852610c37565b8552604051965187525160208701525160408601525160608501525160808401525160a083015251151560c0820152f35b634e487b7160e01b5f52604160045260245ffd5b3461012b576106a136610bed565b906106aa610d21565b60ff60065416600454906107dd57811561031257825f52600260205260405f2060ff815416156104ca5761075e918391335f52600360205260405f20906001600683019160ff835416610799575b6107028942610cc6565b61072e8730337f0000000000000000000000000000000000000000000000000000000000000000610feb565b8685554283860155600385015588600485015501546005830155600160ff19825416179055600242910155610cc6565b6004556040519081525f60208201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60403392a360018055005b8184015480151590816107d2575b50156106f8576107b633610c37565b806107c2575b506106f8565b6107cc9033610e60565b896107bc565b90504210158a6107a7565b631a4a6f3b60e21b5f5260045ffd5b3461012b576107fa36610bed565b90610803610d21565b61080b610d77565b80156104ca57805f52600260205260ff60405f2054166108a257805f52600260205281600160405f208160ff1982541617815501556007546801000000000000000081101561067f578060016108649201600755610cf5565b81549060031b9083821b915f19901b19161790557f682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc3645f80a360018055005b635770685760e11b5f5260045ffd5b3461012b575f36600319011261012b576108c9610d21565b335f52600360205260405f2060ff600682015416156101fb576108eb33610c37565b8015610907576109019160024291015533610e60565b60018055005b63afb0be3360e01b5f5260045ffd5b3461012b57604036600319011261012b5761092f610bd7565b336001600160a01b0382160361094b5761024c90600435610f6b565b63334bd91960e11b5f5260045ffd5b3461012b57604036600319011261012b5761024c600435610979610bd7565b90610992610242825f525f602052600160405f20015490565b610ee9565b3461012b575f36600319011261012b576109af610d21565b335f52600360205260405f206006810180549160ff8316156101fb5760038101918254421115610a9057816002915f935495846109eb33610c37565b968185558160018601555584600484015584600584015560ff191690550155610a1682600454610c03565b600455610a4482337f0000000000000000000000000000000000000000000000000000000000000000610e1e565b80610a81575b60405191825260208201527f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e60403392a260018055005b610a8b8133610e60565b610a4a565b6325e5ff6560e01b5f5260045ffd5b3461012b57602036600319011261012b576020610ac96004355f525f602052600160405f20015490565b604051908152f35b3461012b57602036600319011261012b5760043580151580910361012b57610af7610d21565b610aff610d77565b6006548160ff8216151503610b145760018055005b60ff191660ff8216176006557f3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c695f80a28080610901565b3461012b57602036600319011261012b576020610ac9610b69610bc1565b610c37565b3461012b57602036600319011261012b576004359063ffffffff60e01b821680920361012b57602091637965db0b60e01b8114908115610bb0575b5015158152f35b6301ffc9a760e01b14905083610ba9565b600435906001600160a01b038216820361012b57565b602435906001600160a01b038216820361012b57565b604090600319011261012b576004359060243590565b91908203918211610c1057565b634e487b7160e01b5f52601160045260245ffd5b81810292918115918404141715610c1057565b6001600160a01b03165f908152600360205260409020600681015460ff16158015610cbd575b610cb857610c7f42600383015480421015610cb0575b50600283015490610c03565b908115610caa5764496cebb80091610ca1826005610ca6945491015490610c24565b610c24565b0490565b50505f90565b90505f610c73565b505f90565b50805415610c5d565b91908201809211610c1057565b90601f8019910116810190811067ffffffffffffffff82111761067f57604052565b600754811015610d0d5760075f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b600260015414610d32576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615610daf57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff1615610e085750565b63e2517d3f60e01b5f523360045260245260445ffd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610e5e91610e59606483610cd3565b61102f565b565b60055480831015610eda577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724191610e9984602093610c03565b600555610ec784827f0000000000000000000000000000000000000000000000000000000000000000610e1e565b6040519384526001600160a01b031692a2565b63447b0f6760e01b5f5260045ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610caa575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610caa575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610e5e91610e59608483610cd3565b905f602091828151910182855af115611087575f513d61107e57506001600160a01b0381163b155b61105e5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611057565b6040513d5f823e3d90fdfea2646970667358221220750f1d89420d65f0fddf3b02ea5972f1d7d1f14966d5c6701e52c18cdb657fdd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xB6E JUMPI POP DUP1 PUSH4 0x97AAD10 EQ PUSH2 0xB4B JUMPI DUP1 PUSH4 0x15B31BBB EQ PUSH2 0xAD1 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xA9F JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x95A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x8B1 JUMPI DUP1 PUSH4 0x5EF23FA9 EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0x80933608 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x9FCA9C22 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xAEA1B6EF EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xB6B365C2 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x12F JUMPI PUSH4 0xDFE6B5D6 EQ PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x60 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0xFF PUSH1 0x6 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x147 PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1FB JUMPI DUP2 PUSH1 0x2 SWAP2 PUSH0 SWAP4 SLOAD SWAP5 DUP5 DUP4 SSTORE DUP5 PUSH1 0x1 DUP5 ADD SSTORE DUP5 PUSH1 0x3 DUP5 ADD SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0x19B DUP2 PUSH1 0x4 SLOAD PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x1C9 DUP2 CALLER PUSH32 0x0 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x7D9A44A1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x24C PUSH1 0x4 CALLDATALOAD PUSH2 0x229 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x247 PUSH2 0x242 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26A PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xF6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D254 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x321 JUMPI DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x20 DUP2 PUSH2 0x302 PUSH32 0xF8FAD42E780BFA5459BE3FE691E8BA1AEC70342250112139C5771C3FD155F312 SWAP4 PUSH1 0x5 SLOAD PUSH2 0x2FD DUP3 ADDRESS CALLER PUSH32 0x0 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x51785D261C3B3E8C2CFE2D0E108B9AB2B1FB703FF9E9E49ABA4EBDC85C36152B PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3F8 JUMPI POP POP POP DUP2 PUSH2 0x3B6 SWAP2 SUB DUP3 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3DF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3D1 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x12B JUMPI PUSH2 0x43B PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x443 PUSH2 0xD77 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4D9 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x4CA JUMPI DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 PUSH1 0x1 DUP4 ADD DUP2 DUP2 SLOAD SUB PUSH2 0x4C2 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xFF DUP4 SLOAD AND ISZERO ISZERO SUB PUSH2 0x4AF JUMPI JUMPDEST POP POP PUSH32 0xAD2954A6781CDC42B8AF5DF6F557041B3F146AAF8FBC031D767B7AD48164CFF1 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP3 DUP1 PUSH2 0x483 JUMP JUMPDEST SSTORE DUP4 DUP6 PUSH2 0x473 JUMP JUMPDEST PUSH4 0x76166401 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST DUP5 PUSH2 0x4E3 DUP3 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR EQ PUSH2 0x4F7 JUMPI PUSH1 0x1 ADD PUSH2 0x449 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP5 DUP1 PUSH2 0x451 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD AND SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x56E PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x5B6 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x67F JUMPI PUSH1 0xE0 SWAP3 PUSH1 0x40 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH0 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH0 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH0 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 PUSH0 DUP6 MSTORE PUSH2 0x64E PUSH1 0xC0 DUP9 ADD SWAP7 PUSH0 DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP13 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP7 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP8 MSTORE PUSH1 0x4 DUP2 ADD SLOAD DUP9 MSTORE PUSH1 0x5 DUP2 ADD SLOAD DUP10 MSTORE ADD SLOAD AND ISZERO ISZERO DUP9 MSTORE PUSH2 0xC37 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x40 MLOAD SWAP7 MLOAD DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH2 0x6A1 CALLDATASIZE PUSH2 0xBED JUMP JUMPDEST SWAP1 PUSH2 0x6AA PUSH2 0xD21 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 SLOAD AND PUSH1 0x4 SLOAD SWAP1 PUSH2 0x7DD JUMPI DUP2 ISZERO PUSH2 0x312 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0x4CA JUMPI PUSH2 0x75E SWAP2 DUP4 SWAP2 CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x6 DUP4 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0x799 JUMPI JUMPDEST PUSH2 0x702 DUP10 TIMESTAMP PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x72E DUP8 ADDRESS CALLER PUSH32 0x0 PUSH2 0xFEB JUMP JUMPDEST DUP7 DUP6 SSTORE TIMESTAMP DUP4 DUP7 ADD SSTORE PUSH1 0x3 DUP6 ADD SSTORE DUP9 PUSH1 0x4 DUP6 ADD SSTORE ADD SLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x40 CALLER SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP2 DUP5 ADD SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x7D2 JUMPI JUMPDEST POP ISZERO PUSH2 0x6F8 JUMPI PUSH2 0x7B6 CALLER PUSH2 0xC37 JUMP JUMPDEST DUP1 PUSH2 0x7C2 JUMPI JUMPDEST POP PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x7CC SWAP1 CALLER PUSH2 0xE60 JUMP JUMPDEST DUP10 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO DUP11 PUSH2 0x7A7 JUMP JUMPDEST PUSH4 0x1A4A6F3B PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH2 0x7FA CALLDATASIZE PUSH2 0xBED JUMP JUMPDEST SWAP1 PUSH2 0x803 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x80B PUSH2 0xD77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CA JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x8A2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH1 0xFF NOT DUP3 SLOAD AND OR DUP2 SSTORE ADD SSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x67F JUMPI DUP1 PUSH1 0x1 PUSH2 0x864 SWAP3 ADD PUSH1 0x7 SSTORE PUSH2 0xCF5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH32 0x682563ED446791DCD2BB66AA531EBAF528BCE493E57F037313263799851BC364 PUSH0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x57706857 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x8C9 PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND ISZERO PUSH2 0x1FB JUMPI PUSH2 0x8EB CALLER PUSH2 0xC37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x907 JUMPI PUSH2 0x901 SWAP2 PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE CALLER PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0xAFB0BE33 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x92F PUSH2 0xBD7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x94B JUMPI PUSH2 0x24C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xF6B JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x24C PUSH1 0x4 CALLDATALOAD PUSH2 0x979 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x992 PUSH2 0x242 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH2 0x9AF PUSH2 0xD21 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1FB JUMPI PUSH1 0x3 DUP2 ADD SWAP2 DUP3 SLOAD TIMESTAMP GT ISZERO PUSH2 0xA90 JUMPI DUP2 PUSH1 0x2 SWAP2 PUSH0 SWAP4 SLOAD SWAP6 DUP5 PUSH2 0x9EB CALLER PUSH2 0xC37 JUMP JUMPDEST SWAP7 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE SSTORE DUP5 PUSH1 0x4 DUP5 ADD SSTORE DUP5 PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xFF NOT AND SWAP1 SSTORE ADD SSTORE PUSH2 0xA16 DUP3 PUSH1 0x4 SLOAD PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0xA44 DUP3 CALLER PUSH32 0x0 PUSH2 0xE1E JUMP JUMPDEST DUP1 PUSH2 0xA81 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0xA8B DUP2 CALLER PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH4 0x25E5FF65 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x20 PUSH2 0xAC9 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x12B JUMPI PUSH2 0xAF7 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xAFF PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0xB14 JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0x6 SSTORE PUSH32 0x3CF4FE733160F8F8C48336FAB32ACEE32EBAAA423A08A2BE4E5CEFF97DD98C69 PUSH0 DUP1 LOG2 DUP1 DUP1 PUSH2 0x901 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x20 PUSH2 0xAC9 PUSH2 0xB69 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST CALLVALUE PUSH2 0x12B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x12B JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x12B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x12B JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x12B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI JUMPDEST PUSH2 0xCB8 JUMPI PUSH2 0xC7F TIMESTAMP PUSH1 0x3 DUP4 ADD SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0xCB0 JUMPI JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH2 0xC03 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0xCAA JUMPI PUSH5 0x496CEBB800 SWAP2 PUSH2 0xCA1 DUP3 PUSH1 0x5 PUSH2 0xCA6 SWAP5 SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC73 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST POP DUP1 SLOAD ISZERO PUSH2 0xC5D JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xC10 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xD32 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAF JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE08 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE5E SWAP2 PUSH2 0xE59 PUSH1 0x64 DUP4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0xEDA JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 PUSH2 0xE99 DUP5 PUSH1 0x20 SWAP4 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0xEC7 DUP5 DUP3 PUSH32 0x0 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 JUMP JUMPDEST PUSH4 0x447B0F67 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCAA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCAA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE5E SWAP2 PUSH2 0xE59 PUSH1 0x84 DUP4 PUSH2 0xCD3 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x1087 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x107E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x105E JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xF1D89420D65F0FDDF3B02EA5972F1D7D1F14966D5C6 PUSH17 0x1E52C18CDB657FDD64736F6C634300081C STOP CALLER ",
							"sourceMap": "940:16009:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;;;15602:12;940:16009;;15616:14;940:16009;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;2227:103:5;;:::i;:::-;11304:10:11;940:16009;;11287:16;940:16009;;;;;11362:17;;;940:16009;;;;;;;11361:18;11357:46;;940:16009;11772:22;940:16009;;;;;;;;11604:25;;;;940:16009;11643:23;11287:16;11643:23;;940:16009;11680:17;940:16009;11680:17;;940:16009;11711:12;;;;940:16009;;;;;;11772:22;940:16009;11912:27;940:16009;;;11912:27;:::i;:::-;940:16009;;12030:12;11304:10;;11998:6;12030:12;:::i;:::-;940:16009;;;;;12067:43;940:16009;11304:10;12067:43;;11604:25;940:16009;;;11357:46;9307:15;;;940:16009;11388:15;940:16009;;11388:15;940:16009;;;;;;-1:-1:-1;;940:16009:11;;;;4747:26:0;940:16009:11;;;;:::i;:::-;4717:18:0;2475:4;4717:18;;3901:6;940:16009:11;3901:6:0;940:16009:11;;3901:22:0;940:16009:11;3901:6:0;940:16009:11;3901:22:0;940:16009:11;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;940:16009:11;;;;;;;-1:-1:-1;;940:16009:11;;;;;;2227:103:5;;:::i;:::-;735:10:8;940:16009:11;;;;;;;;;;;;;3519:23:0;3515:108;;6145:11:11;;6141:39;;940:16009;;6621:20;6665;940:16009;6376:12;940:16009;6500:6;6271:4;;735:10:8;6458:6:11;6500;:::i;:::-;6621:20;:::i;:::-;6376:12;940:16009;;;;;;6665:20;940:16009;;;;6141:39;7203:15;;;940:16009;6165:15;940:16009;;6165:15;3515:108:0;3565:47;;;940:16009:11;3565:47:0;735:10:8;940:16009:11;;1165:33;940:16009;;;;3565:47:0;940:16009:11;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;15194:19;940:16009;;;;;;;;15194:19;940:16009;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:16009:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;;;;;;;;;;;;2227:103:5;;:::i;:::-;2475:4:0;;:::i;:::-;940:16009:11;4812:19;940:16009;;4868:19;;;;;;4848:239;5100:6;;;5096:36;;940:16009;;;5235:13;940:16009;;;;;5272:8;;940:16009;5272:8;;940:16009;;;5272:15;5268:60;;4848:239;940:16009;;;;;;;;;5350:25;5346:80;;4848:239;5449:33;;;940:16009;5449:33;;940:16009;;;;5346:80;940:16009;;;;;;;;;;;5346:80;;;;5268:60;940:16009;5268:60;;;;5096:36;15926:17;;;940:16009;5115:17;940:16009;;5115:17;4889:3;4973:22;;;;:::i;:::-;940:16009;;;;;;4973:34;4969:108;;940:16009;;4853:13;;4969:108;5027:12;;;940:16009;5057:5;;;;940:16009;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;14865:13;940:16009;;;;;;;;;;;14921:8;;940:16009;;;;;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;;:::i;:::-;;;;;;;;;;;2954:29:0;940:16009:11;;;;;;-1:-1:-1;940:16009:11;;;;;;-1:-1:-1;940:16009:11;;;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14428:29;940:16009;;;;;;;;;;;;;;;;14053:16;940:16009;;;14375:17;940:16009;;;;;;;14177:25;;;940:16009;;;14053:16;14238:23;;940:16009;;;;14291:17;;940:16009;;;14333:12;;;940:16009;;;14375:17;940:16009;;;;;;14428:29;:::i;:::-;940:16009;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2227:103:5;;;:::i;:::-;940:16009:11;7034:14;940:16009;;;;7125:44;;;7183:11;;7179:39;;940:16009;;;7317:13;940:16009;;;;;;;;;7354:14;7350:44;;8869:20;7697:10;;;;940:16009;;7680:16;940:16009;;;;;7722:17;8512:25;7034:14;7722:17;;940:16009;;;;;7718:430;;940:16009;8220:22;7566:15;;8220:22;:::i;:::-;8352:6;7467:4;;7697:10;8310:6;8352;:::i;:::-;940:16009;;;7566:15;8512:25;;;940:16009;7680:16;8561:23;;940:16009;8607:17;940:16009;8607:17;;940:16009;8660:8;940:16009;8645:12;;;940:16009;8512:25;940:16009;;;;;;;;7317:13;7566:15;8712:22;;940:16009;8869:20;:::i;:::-;940:16009;;;;;;;;;;;;8913:39;940:16009;7697:10;8913:39;;8512:25;940:16009;;;7718:430;7845:25;;;940:16009;7845:30;;;:74;;;;7718:430;7841:297;;7718:430;7841:297;7964:35;7697:10;7964:35;:::i;:::-;8021:19;8017:107;;7841:297;;7718:430;;8017:107;8090:14;7697:10;;8090:14;:::i;:::-;8017:107;;;7845:74;7566:15;;;7879:40;;7845:74;;;7125:44;7151:18;;;940:16009;7151:18;940:16009;;7151:18;940:16009;;;;;;;:::i;:::-;2227:103:5;;;:::i;:::-;2475:4:0;;:::i;:::-;15904:13:11;;15900:43;;940:16009;;;15957:13;940:16009;;;;;;;;15953:68;;940:16009;;;15957:13;940:16009;;;16159:4;940:16009;;;;;;;;;;;;16173:8;940:16009;16206:19;940:16009;;;;;;;;16159:4;940:16009;;;16206:19;940:16009;;:::i;:::-;;;;;;;;;;;;;;;;;;;;16264:31;940:16009;16264:31;;16159:4;940:16009;;;15953:68;15998:23;;;940:16009;15998:23;940:16009;;15998:23;940:16009;;;;;;-1:-1:-1;;940:16009:11;;;;2227:103:5;;:::i;:::-;10593:10:11;940:16009;;10576:16;940:16009;;;;;;10651:17;;;940:16009;;10650:18;10646:46;;10736:35;10593:10;10736:35;:::i;:::-;10785:19;;10781:52;;10999:14;10911:15;10886:22;10911:15;10886:22;;940:16009;10593:10;10999:14;:::i;:::-;1716:1:5;940:16009:11;;;10781:52;10813:20;;;940:16009;10813:20;940:16009;;10813:20;940:16009;;;;;;-1:-1:-1;;940:16009:11;;;;;;:::i;:::-;735:10:8;-1:-1:-1;;;;;940:16009:11;;5421:34:0;5417:102;;5529:37;940:16009:11;;;5529:37:0;:::i;5417:102::-;5478:30;;;940:16009:11;5478:30:0;940:16009:11;;5478:30:0;940:16009:11;;;;;;-1:-1:-1;;940:16009:11;;;;4330:25:0;940:16009:11;;;;:::i;:::-;4300:18:0;2475:4;4300:18;;3901:6;940:16009:11;3901:6:0;940:16009:11;;3901:22:0;940:16009:11;3901:6:0;940:16009:11;3901:22:0;940:16009:11;3810:120:0;;2475:4;4330:25;:::i;940:16009:11:-;;;;;;-1:-1:-1;;940:16009:11;;;;2227:103:5;;:::i;:::-;9223:10:11;940:16009;;9206:16;940:16009;;;;;9281:17;;;940:16009;;;;;;9280:18;9276:46;;9206:16;9355:23;;940:16009;;;9336:15;:42;;9332:75;;940:16009;9884:22;940:16009;;;;9223:10;;9600:35;9223:10;9600:35;:::i;:::-;940:16009;;;;9716:25;;;;940:16009;;9792:17;940:16009;9792:17;;940:16009;9823:12;;;;940:16009;;;;;;9884:22;940:16009;10024:27;940:16009;;;10024:27;:::i;:::-;940:16009;;10142:12;9223:10;;10110:6;10142:12;:::i;:::-;10213:19;10209:91;;940:16009;;;;;;;;;;10323:50;940:16009;9223:10;10323:50;;9716:25;940:16009;;;10209:91;10274:14;9223:10;;10274:14;:::i;:::-;10209:91;;9332:75;9387:20;;;940:16009;9387:20;940:16009;;9387:20;940:16009;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;3901:6:0;940:16009:11;3901:6:0;940:16009:11;;3901:22:0;940:16009:11;3901:6:0;940:16009:11;3901:22:0;940:16009:11;3810:120:0;;940:16009:11;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;;;;;;;2227:103:5;;:::i;:::-;2475:4:0;;:::i;:::-;5778:14:11;940:16009;;;;;;;5778:24;5774:118;;1716:1:5;940:16009:11;;;5774:118;-1:-1:-1;;940:16009:11;;;;;5778:14;940:16009;5860:21;940:16009;;5860:21;5774:118;;;;940:16009;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;940:16009:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;940:16009:11;;;;;;;2673:87:0;-1:-1:-1;;;862:40:9;;-1:-1:-1;2673:87:0;;;940:16009:11;;;;-1:-1:-1;;;;;940:16009:11;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;940:16009:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12265:1135::-;-1:-1:-1;;;;;940:16009:11;;;;;12427:16;940:16009;;;;;12473:17;;;940:16009;;;12472:18;940:16009;;12472:48;;12265:1135;12468:87;;12805:32;12642:15;12427:16;12682:23;;940:16009;12642:15;;12671:34;;12667:98;;12265:1135;12815:22;;;;940:16009;12805:32;;:::i;:::-;12851:16;;;12847:55;;940:16009;;13169:36;940:16009;13193:12;13169:50;940:16009;;13193:12;;940:16009;13169:36;;:::i;:::-;:50;:::i;:::-;2788:8;12265:1135;:::o;12847:55::-;12883:8;;940:16009;12883:8;:::o;12667:98::-;12721:33;;12667:98;;;12468:87;12536:8;940:16009;12536:8;:::o;12472:48::-;940:16009;;;12494:26;12472:48;;940:16009;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;16206:19;940:16009;;;;;;16206:19;-1:-1:-1;940:16009:11;;-1:-1:-1;940:16009:11;;;-1:-1:-1;940:16009:11;:::o;:::-;;;;;;;;;;;;2336:287:5;1759:1;2468:7;940:16009:11;2468:19:5;1759:1;;;2468:7;940:16009:11;2336:287:5:o;1759:1::-;940:16009:11;;-1:-1:-1;;;1759:1:5;;;;;;;;;;;940:16009:11;1759:1:5;940:16009:11;;;1759:1:5;;;;3199:103:0;735:10:8;2954:6:0;940:16009:11;;;;;;;;;;;;3519:23:0;3515:108;;3199:103::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:8;3565:47:0;940:16009:11;1087:23;940:16009;;;2954:6:0;3565:47;3199:103;2954:6;940:16009:11;;;;;;;;;;;735:10:8;940:16009:11;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:8;3565:47:0;940:16009:11;;;;2954:6:0;3565:47;1219:160:7;940:16009:11;;-1:-1:-1;;;1328:43:7;;;;-1:-1:-1;;;;;940:16009:11;;;1328:43:7;;;940:16009:11;;;;;;;;;1328:43:7;;;;;;;940:16009:11;1328:43:7;:::i;:::-;;:::i;:::-;1219:160::o;16458:489:11:-;16624:12;940:16009;16659:21;;;;16655:59;;16913:27;16826:20;;;940:16009;16826:20;;:::i;:::-;16624:12;940:16009;16882:6;16856;;;16882;:::i;:::-;940:16009;;;;;-1:-1:-1;;;;;940:16009:11;;16913:27;16458:489::o;16655:59::-;16689:25;;;-1:-1:-1;16689:25:11;;-1:-1:-1;16689:25:11;6179:316:0;940:16009:11;;;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;;;735:10:8;;940:16009:11;;6370:40:0;;940:16009:11;6370:40:0;6347:4;6424:11;:::o;6730:317::-;940:16009:11;;;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;940:16009:11;;;;;;;;;;;;;;;-1:-1:-1;;940:16009:11;;;735:10:8;;940:16009:11;;6922:40:0;;940:16009:11;6922:40:0;940:16009:11;6976:11:0;:::o;1618:188:7:-;940:16009:11;;-1:-1:-1;;;1745:53:7;;;;-1:-1:-1;;;;;940:16009:11;;;1745:53:7;;;940:16009:11;;;;;;;;;;;;;;;;;1745:53:7;;;;;;;940:16009:11;1745:53:7;:::i;7686:720::-;;-1:-1:-1;7823:421:7;7686:720;7823:421;;;;;;;;;;;;-1:-1:-1;7823:421:7;;8258:15;;-1:-1:-1;;;;;;940:16009:11;;8276:26:7;:31;8258:68;8254:146;;7686:720;:::o;8254:146::-;-1:-1:-1;;;;8349:40:7;;;-1:-1:-1;;;;;940:16009:11;;;;8349:40:7;940:16009:11;;;8349:40:7;8258:68;8325:1;8310:16;;8258:68;;7823:421;;;;-1:-1:-1;7823:421:7;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "859200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "438",
								"addRewards(uint256)": "infinite",
								"addStakingPlan(uint256,uint256)": "149734",
								"calculatePendingRewards(address)": "infinite",
								"claimRewards()": "infinite",
								"emergencyWithdraw()": "infinite",
								"getAvailableDurations()": "infinite",
								"getContractStats()": "6922",
								"getRoleAdmin(bytes32)": "2407",
								"getStakingPlan(uint256)": "4724",
								"getUserStakingInfo(address)": "infinite",
								"grantRole(bytes32,address)": "33377",
								"hasRole(bytes32,address)": "2726",
								"renounceRole(bytes32,address)": "28967",
								"revokeRole(bytes32,address)": "33638",
								"setStakingPaused(bool)": "57098",
								"stake(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "270",
								"unstake()": "infinite",
								"updateStakingPlan(uint256,uint256,bool)": "infinite"
							},
							"internal": {
								"_addStakingPlan(uint256,uint256)": "infinite",
								"_claimRewards(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 16949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 16949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3132,
									"end": 3158,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3132,
									"end": 3158,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3128,
									"end": 3187,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 3128,
									"end": 3187,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3201,
									"end": 3227,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3197,
									"end": 3256,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 3197,
									"end": 3256,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3486,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3267,
									"end": 3296,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3267,
									"end": 3296,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3267,
									"end": 3296,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3338,
									"end": 3382,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 3338,
									"end": 3382,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3338,
									"end": 3382,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3338,
									"end": 3382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3338,
									"end": 3382,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 3338,
									"end": 3382,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3338,
									"end": 3382,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3392,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3392,
									"end": 3429,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3392,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3392,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3392,
									"end": 3429,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3392,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3392,
									"end": 3429,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3486,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3439,
									"end": 3486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3486,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3439,
									"end": 3486,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D898BC67CA3D352598A6D8BA14BC12F08B53CF86CA7C5471DCBC6DCB5104DA9F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "F6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D255"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1110,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1110,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 3699,
									"end": 3706,
									"name": "PUSH",
									"source": 11,
									"value": "76A700"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15957,
									"end": 15970,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "5C968D77B01764D69848AB2B960D8F4701E8F3339E0A5524FC9916C9948F3EFB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3699,
									"end": 3706,
									"name": "PUSH",
									"source": 11,
									"value": "76A700"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15957,
									"end": 15970,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "5C968D77B01764D69848AB2B960D8F4701E8F3339E0A5524FC9916C9948F3EFB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3708,
									"end": 3711,
									"name": "PUSH",
									"source": 11,
									"value": "1F4"
								},
								{
									"begin": 16173,
									"end": 16181,
									"name": "PUSH",
									"source": 11,
									"value": "A1EF5B42F18533D67A183A193EA6C3FABFAA3BDABC3FC0E3F65B19B517DF6E8D"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "10000000000000000"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3699,
									"end": 3706,
									"name": "PUSH",
									"source": 11,
									"value": "76A700"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3708,
									"end": 3711,
									"name": "PUSH",
									"source": 11,
									"value": "1F4"
								},
								{
									"begin": 3699,
									"end": 3706,
									"name": "PUSH",
									"source": 11,
									"value": "76A700"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 16264,
									"end": 16295,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 16264,
									"end": 16295,
									"name": "LOG3",
									"source": 11
								},
								{
									"begin": 3762,
									"end": 3770,
									"name": "PUSH",
									"source": 11,
									"value": "ED4E00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15957,
									"end": 15970,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4F66DB48A07C9781E0592D42FF3B56B244162717317A5F3E947AF07A6400A056"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3762,
									"end": 3770,
									"name": "PUSH",
									"source": 11,
									"value": "ED4E00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15957,
									"end": 15970,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4F66DB48A07C9781E0592D42FF3B56B244162717317A5F3E947AF07A6400A056"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3772,
									"end": 3775,
									"name": "PUSH",
									"source": 11,
									"value": "320"
								},
								{
									"begin": 16173,
									"end": 16181,
									"name": "PUSH",
									"source": 11,
									"value": "89CFCBF844E824FEEE5F634CBC488382291F3C9E0DE5905F3C30812390DD833"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "10000000000000000"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3762,
									"end": 3770,
									"name": "PUSH",
									"source": 11,
									"value": "ED4E00"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3772,
									"end": 3775,
									"name": "PUSH",
									"source": 11,
									"value": "320"
								},
								{
									"begin": 3762,
									"end": 3770,
									"name": "PUSH",
									"source": 11,
									"value": "ED4E00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 16264,
									"end": 16295,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 16264,
									"end": 16295,
									"name": "LOG3",
									"source": 11
								},
								{
									"begin": 3825,
									"end": 3833,
									"name": "PUSH",
									"source": 11,
									"value": "1E13380"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15957,
									"end": 15970,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D339C8B099C3809595776000FB57D17374D0EF93E29B1511755BE607CB00DE99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3825,
									"end": 3833,
									"name": "PUSH",
									"source": 11,
									"value": "1E13380"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15957,
									"end": 15970,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D339C8B099C3809595776000FB57D17374D0EF93E29B1511755BE607CB00DE99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3835,
									"end": 3839,
									"name": "PUSH",
									"source": 11,
									"value": "4B0"
								},
								{
									"begin": 16173,
									"end": 16181,
									"name": "PUSH",
									"source": 11,
									"value": "DC083EB4DA7563BBD761324B5158D9D40AF7C7174AFE39B0B31A7577C44FC33C"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "10000000000000000"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3825,
									"end": 3833,
									"name": "PUSH",
									"source": 11,
									"value": "1E13380"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 16206,
									"end": 16225,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3835,
									"end": 3839,
									"name": "PUSH",
									"source": 11,
									"value": "4B0"
								},
								{
									"begin": 3825,
									"end": 3833,
									"name": "PUSH",
									"source": 11,
									"value": "1E13380"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 16264,
									"end": 16295,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 16264,
									"end": 16295,
									"name": "LOG3",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3884,
									"end": 3906,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3884,
									"end": 3906,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 3267,
									"end": 3296,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1206"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "RETURN",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 15953,
									"end": 16021,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 15998,
									"end": 16021,
									"name": "PUSH",
									"source": 11,
									"value": "57706857"
								},
								{
									"begin": 15998,
									"end": 16021,
									"name": "PUSH",
									"source": 11,
									"value": "E1"
								},
								{
									"begin": 15998,
									"end": 16021,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 15998,
									"end": 16021,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 15998,
									"end": 16021,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 15998,
									"end": 16021,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3197,
									"end": 3256,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 3197,
									"end": 3256,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "PUSH",
									"source": 11,
									"value": "F6B2911F"
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3236,
									"end": 3256,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3256,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3236,
									"end": 3256,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3156,
									"end": 3157,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3156,
									"end": 3157,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3156,
									"end": 3157,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3156,
									"end": 3157,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3156,
									"end": 3157,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1087,
									"end": 1110,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "6B4989BC7B93B2BEE94C8FD6EB5542AE9ECCCF5D6D8DC2FE26E142AC3434C5CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "6B4989BC7B93B2BEE94C8FD6EB5542AE9ECCCF5D6D8DC2FE26E142AC3434C5CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "D898BC67CA3D352598A6D8BA14BC12F08B53CF86CA7C5471DCBC6DCB5104DA9F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1198,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 940,
									"end": 16949,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220750f1d89420d65f0fddf3b02ea5972f1d7d1f14966d5c6701e52c18cdb657fdd64736f6c634300081c0033",
									".code": [
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "97AAD10"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "15B31BBB"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "2DEF6620"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "372500AB"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "5EF23FA9"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "7B0472F0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "80933608"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "9FCA9C22"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "AEA1B6EF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "B6B365C2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "BECEED39"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "DB2E21BC"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "DFE6B5D6"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15602,
											"end": 15614,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 15616,
											"end": 15630,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11304,
											"end": 11314,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11287,
											"end": 11303,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11379,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 11362,
											"end": 11379,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11357,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 11357,
											"end": 11403,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11772,
											"end": 11794,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11629,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11629,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11604,
											"end": 11629,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11629,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 11666,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11287,
											"end": 11303,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11643,
											"end": 11666,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 11666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11680,
											"end": 11697,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11680,
											"end": 11697,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11680,
											"end": 11697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11723,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11723,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11711,
											"end": 11723,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11723,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11772,
											"end": 11794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11912,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 11939,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 11912,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 12030,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 11304,
											"end": 11314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11304,
											"end": 11314,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 12004,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1206"
										},
										{
											"begin": 12030,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 12030,
											"end": 12042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12030,
											"end": 12042,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 12030,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12110,
											"name": "PUSH",
											"source": 11,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11304,
											"end": 11314,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12110,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12110,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 11604,
											"end": 11629,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 11357,
											"end": 11403,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 11357,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "PUSH",
											"source": 11,
											"value": "7D9A44A1"
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "PUSH",
											"source": 11,
											"value": "E1"
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11388,
											"end": 11403,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11388,
											"end": 11403,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "F6C17DA3865D9645546DB4630D07C45803FB99F9B61DD452DE8DE1CD2159D254"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6145,
											"end": 6156,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6141,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6141,
											"end": 6180,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 6665,
											"end": 6685,
											"name": "PUSH",
											"source": 11,
											"value": "F8FAD42E780BFA5459BE3FE691E8BA1AEC70342250112139C5771C3FD155F312"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 6271,
											"end": 6275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6275,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1206"
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 6500,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6621,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6641,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 6621,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6665,
											"end": 6685,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6141,
											"end": 6180,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6141,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "PUSH",
											"source": 11,
											"value": "162908E3"
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "PUSH",
											"source": 11,
											"value": "E1"
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6180,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1198,
											"name": "PUSH",
											"source": 11,
											"value": "51785D261C3B3E8C2CFE2D0E108B9AB2B1FB703FF9E9E49ABA4EBDC85C36152B"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15194,
											"end": 15213,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15194,
											"end": 15213,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4831,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 5087,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4848,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5096,
											"end": 5132,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5248,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5280,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5280,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 5087,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4848,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 5087,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4848,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5482,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5482,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5482,
											"name": "PUSH",
											"source": 11,
											"value": "AD2954A6781CDC42B8AF5DF6F557041B3F146AAF8FBC031D767B7AD48164CFF1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5482,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5482,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 5346,
											"end": 5426,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5268,
											"end": 5328,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5132,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5096,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15926,
											"end": 15943,
											"name": "PUSH",
											"source": 11,
											"value": "76166401"
										},
										{
											"begin": 15926,
											"end": 15943,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 15926,
											"end": 15943,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5132,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5132,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4889,
											"end": 4892,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4889,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 4973,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 5007,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4969,
											"end": 5077,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5077,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4969,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14865,
											"end": 14878,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14921,
											"end": 14929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14921,
											"end": 14929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14053,
											"end": 14069,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14375,
											"end": 14392,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14177,
											"end": 14202,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14177,
											"end": 14202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14177,
											"end": 14202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14053,
											"end": 14069,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 14238,
											"end": 14261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14238,
											"end": 14261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14291,
											"end": 14308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14291,
											"end": 14308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14333,
											"end": 14345,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 14333,
											"end": 14345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14333,
											"end": 14345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14375,
											"end": 14392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 14428,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14457,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 14428,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7034,
											"end": 7048,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7169,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 7125,
											"end": 7169,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7194,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7179,
											"end": 7218,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7350,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 7350,
											"end": 7394,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8869,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7680,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7034,
											"end": 7048,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 7722,
											"end": 7739,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7739,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8220,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8220,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 8220,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8220,
											"end": 8242,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 8220,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 7467,
											"end": 7471,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7467,
											"end": 7471,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1206"
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 8352,
											"end": 8358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7680,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 8561,
											"end": 8584,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8561,
											"end": 8584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8607,
											"end": 8624,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8607,
											"end": 8624,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8607,
											"end": 8624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8660,
											"end": 8668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 8734,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 8734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8869,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 8869,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8869,
											"end": 8889,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 8869,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 8952,
											"name": "PUSH",
											"source": 11,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 8952,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 8952,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7870,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7870,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7870,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7875,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7875,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7875,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 8138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 8138,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 7841,
											"end": 8138,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 7964,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 8138,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 7841,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 8138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 7718,
											"end": 8148,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8090,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7707,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8090,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 8090,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8090,
											"end": 8104,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 8090,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 8017,
											"end": 8124,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7581,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7879,
											"end": 7919,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7879,
											"end": 7919,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 7845,
											"end": 7919,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7169,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 7125,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 11,
											"value": "1A4A6F3B"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 11,
											"value": "E2"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15904,
											"end": 15917,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15900,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 15900,
											"end": 15943,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15953,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 15953,
											"end": 16021,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16159,
											"end": 16163,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16173,
											"end": 16181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16206,
											"end": 16225,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "10000000000000000"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16159,
											"end": 16163,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16206,
											"end": 16225,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16264,
											"end": 16295,
											"name": "PUSH",
											"source": 11,
											"value": "682563ED446791DCD2BB66AA531EBAF528BCE493E57F037313263799851BC364"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16264,
											"end": 16295,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16264,
											"end": 16295,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 16159,
											"end": 16163,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 15953,
											"end": 16021,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 15953,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15998,
											"end": 16021,
											"name": "PUSH",
											"source": 11,
											"value": "57706857"
										},
										{
											"begin": 15998,
											"end": 16021,
											"name": "PUSH",
											"source": 11,
											"value": "E1"
										},
										{
											"begin": 15998,
											"end": 16021,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16021,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10603,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10576,
											"end": 10592,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 10651,
											"end": 10668,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 10651,
											"end": 10668,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10651,
											"end": 10668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10650,
											"end": 10668,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10646,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 10646,
											"end": 10692,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10736,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 10593,
											"end": 10603,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10736,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 10736,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10736,
											"end": 10771,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 10736,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10804,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10804,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10781,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 10781,
											"end": 10833,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10999,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 10911,
											"end": 10926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10926,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10603,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10999,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 10999,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10999,
											"end": 11013,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 10999,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 10781,
											"end": 10833,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 10781,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "PUSH",
											"source": 11,
											"value": "AFB0BE33"
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9206,
											"end": 9222,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9298,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 9281,
											"end": 9298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9276,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 9276,
											"end": 9322,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9206,
											"end": 9222,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 9355,
											"end": 9378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9355,
											"end": 9378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9336,
											"end": 9351,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 9336,
											"end": 9378,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9336,
											"end": 9378,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 9332,
											"end": 9407,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9884,
											"end": 9906,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9600,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 9600,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 9600,
											"end": 9635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9600,
											"end": 9635,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9600,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9809,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9792,
											"end": 9809,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9809,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9823,
											"end": 9835,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9823,
											"end": 9835,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9823,
											"end": 9835,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9823,
											"end": 9835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9884,
											"end": 9906,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10024,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10051,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 10024,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1206"
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 10142,
											"end": 10154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10213,
											"end": 10232,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 10209,
											"end": 10300,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10323,
											"end": 10373,
											"name": "PUSH",
											"source": 11,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10323,
											"end": 10373,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10323,
											"end": 10373,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10300,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 10209,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 10274,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10288,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10274,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10209,
											"end": 10300,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9407,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 9332,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "PUSH",
											"source": 11,
											"value": "25E5FF65"
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5792,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5778,
											"end": 5802,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5778,
											"end": 5792,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "PUSH",
											"source": 11,
											"value": "3CF4FE733160F8F8C48336FAB32ACEE32EBAAA423A08A2BE4E5CEFF97DD98C69"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12443,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12472,
											"end": 12490,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12472,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 12472,
											"end": 12520,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12468,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 12468,
											"end": 12555,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12642,
											"end": 12657,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12443,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 12682,
											"end": 12705,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12642,
											"end": 12657,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12642,
											"end": 12657,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 12671,
											"end": 12705,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12671,
											"end": 12705,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12837,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12815,
											"end": 12837,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12805,
											"end": 12837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12837,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12805,
											"end": 12837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12851,
											"end": 12867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12851,
											"end": 12867,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12851,
											"end": 12867,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12847,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 12847,
											"end": 12902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "496CEBB800"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 13169,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 13169,
											"end": 13205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13205,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 13169,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 13169,
											"end": 13219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13219,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 13169,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2788,
											"end": 2796,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 13400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 13400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12847,
											"end": 12902,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 12847,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12721,
											"end": 12754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12721,
											"end": 12754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 12667,
											"end": 12765,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12468,
											"end": 12555,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 12468,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12536,
											"end": 12544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12536,
											"end": 12544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12472,
											"end": 12520,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 12472,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12472,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 12472,
											"end": 12520,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16206,
											"end": 16225,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16206,
											"end": 16225,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16458,
											"end": 16947,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 16458,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16624,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 16680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 16680,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 16680,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 16680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16655,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 16655,
											"end": 16714,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16913,
											"end": 16940,
											"name": "PUSH",
											"source": 11,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 16826,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16624,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16882,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 16856,
											"end": 16862,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 16862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 16862,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1206"
										},
										{
											"begin": 16882,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 16882,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16882,
											"end": 16888,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 16882,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16913,
											"end": 16940,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 16458,
											"end": 16947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16655,
											"end": 16714,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 16655,
											"end": 16714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "PUSH",
											"source": 11,
											"value": "447B0F67"
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 16949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 8244,
											"name": "REVERT",
											"source": 7
										}
									]
								},
								"01400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
								"4F66DB48A07C9781E0592D42FF3B56B244162717317A5F3E947AF07A6400A056": "089cfcbf844e824feee5f634cbc488382291f3c9e0de5905f3c30812390dd832",
								"5C968D77B01764D69848AB2B960D8F4701E8F3339E0A5524FC9916C9948F3EFB": "a1ef5b42f18533d67a183a193ea6c3fabfaa3bdabc3fc0e3f65b19b517df6e8c",
								"6B4989BC7B93B2BEE94C8FD6EB5542AE9ECCCF5D6D8DC2FE26E142AC3434C5CC": "f6c17da3865d9645546db4630d07c45803fb99f9b61dd452de8de1cd2159d254",
								"C65FB5893E4D502CDF4E78A762F3E2CFD52DB870A5C66177955D0B59B9825D7D": "682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364",
								"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
								"D339C8B099C3809595776000FB57D17374D0EF93E29B1511755BE607CB00DE99": "dc083eb4da7563bbd761324b5158d9d40af7c7174afe39b0b31a7577c44fc33b",
								"D898BC67CA3D352598A6D8BA14BC12F08B53CF86CA7C5471DCBC6DCB5104DA9F": "51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b",
								"F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5": "ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addRewards(uint256)": "beceed39",
							"addStakingPlan(uint256,uint256)": "5ef23fa9",
							"calculatePendingRewards(address)": "097aad10",
							"claimRewards()": "372500ab",
							"emergencyWithdraw()": "db2e21bc",
							"getAvailableDurations()": "b6b365c2",
							"getContractStats()": "dfe6b5d6",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getStakingPlan(uint256)": "9fca9c22",
							"getUserStakingInfo(address)": "80933608",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setStakingPaused(bool)": "15b31bbb",
							"stake(uint256,uint256)": "7b0472f0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unstake()": "2def6620",
							"updateStakingPlan(uint256,uint256,bool)": "aea1b6ef"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 479,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1211,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_stakingPlans",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(StakingPlan)1188_storage)"
							},
							{
								"astId": 1216,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_userStakingData",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(UserStakingData)1203_storage)"
							},
							{
								"astId": 1218,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_totalStaked",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1220,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_rewardsPool",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1222,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_stakingPaused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1225,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_availableDurations",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserStakingData)1203_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WallyStaking.UserStakingData)",
								"numberOfBytes": "32",
								"value": "t_struct(UserStakingData)1203_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(StakingPlan)1188_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct WallyStaking.StakingPlan)",
								"numberOfBytes": "32",
								"value": "t_struct(StakingPlan)1188_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(StakingPlan)1188_storage": {
								"encoding": "inplace",
								"label": "struct WallyStaking.StakingPlan",
								"members": [
									{
										"astId": 1185,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "isActive",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1187,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "apr",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserStakingData)1203_storage": {
								"encoding": "inplace",
								"label": "struct WallyStaking.UserStakingData",
								"members": [
									{
										"astId": 1190,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1192,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "stakingStartTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1194,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "lastClaimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1196,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "stakingEndTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1198,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "duration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1200,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "apr",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1202,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "isActive",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/WallyStaking.sol:271:9:\n    |\n271 |         address self = address(this);\n    |         ^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9486,
					"file": "contracts/WallyStaking.sol",
					"start": 9474
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1050
						],
						"ERC165": [
							1074
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1051,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1075,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1074,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1074,
								1086,
								378,
								1050
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1073
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC165": [
							1086
						],
						"IERC20": [
							611
						]
					},
					"id": 461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 469,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 465,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 611,
										"src": "590:6:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "598:7:2"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 460,
							"linearizedBaseContracts": [
								460,
								1086,
								611
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 460,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 460,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 460,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 460,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 460,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 460,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 461,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1086
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 465,
							"sourceUnit": 1087,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 463,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 612,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 474,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 477,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 475,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 476,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 479,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 483,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 533,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 493,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 494,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 498,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 503,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 533,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 533,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 528,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 526,
												"id": 530,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 533,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 534,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 545,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 554,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 611,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 611,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 611,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 611,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 611,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 611,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC20": [
							611
						],
						"SafeERC20": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 612,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 614,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 617,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 461,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 616,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 460,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 623,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 632,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 649,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 645,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 611,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1020,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 610,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 675,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 676,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 677,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 666,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 678,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 671,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 611,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 1020,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2548:139:7",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2558:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 700,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1020",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1020",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2612:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 696,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2581:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 588,
														"src": "2581:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2643:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 707,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2650:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2659:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2674:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2630:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:7"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2493:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "2493:6:7"
													},
													"referencedDeclaration": 611,
													"src": "2493:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2507:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2524:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:7"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:7"
									},
									"scope": 1020,
									"src": "2462:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "3453:370:7",
										"statements": [
											{
												"id": 755,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:7",
												"statements": [
													{
														"assignments": [
															726
														],
														"declarations": [
															{
																"constant": false,
																"id": 726,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 755,
																"src": "3487:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 735,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 731,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1020",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1020",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 729,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 733,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3545:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 727,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3514:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 588,
																"src": "3514:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 736,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3571:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 737,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "3590:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 746,
														"nodeType": "IfStatement",
														"src": "3567:160:7",
														"trueBody": {
															"id": 745,
															"nodeType": "Block",
															"src": "3609:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 740,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "3667:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 741,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "3676:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 742,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 722,
																				"src": "3694:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 739,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "3634:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 744,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 748,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3753:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 749,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3760:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 750,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "3769:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 751,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "3788:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 747,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "3740:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3386:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 716,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "3386:6:7"
													},
													"referencedDeclaration": 611,
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3417:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:7"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:7"
									},
									"scope": 1020,
									"src": "3355:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "4477:303:7",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "4487:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 768,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 772,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4530:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 598,
															"src": "4530:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 774,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "4546:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "4555:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 776,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 770,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:7"
											},
											{
												"condition": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 780,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4602:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 781,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "4609:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 779,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "4578:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "4573:201:7",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "4624:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4658:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 788,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "4680:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$611",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 598,
																				"src": "4680:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 790,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 763,
																						"src": "4696:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 792,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 786,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 784,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "4638:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 795,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 797,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4743:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 798,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "4750:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 796,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "4723:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4422:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "4422:6:7"
													},
													"referencedDeclaration": 611,
													"src": "4422:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4436:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4453:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:7"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:7"
									},
									"scope": 1020,
									"src": "4400:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "5227:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 817,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "5241:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 831,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5350:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "5354:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 833,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "5361:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "5328:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "5328:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 844,
													"nodeType": "IfStatement",
													"src": "5323:117:7",
													"trueBody": {
														"id": 843,
														"nodeType": "Block",
														"src": "5368:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 839,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 808,
																					"src": "5422:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 837,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 836,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5389:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 842,
																"nodeType": "RevertStatement",
																"src": "5382:47:7"
															}
														]
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "5237:203:7",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "5262:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 823,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "5289:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 824,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "5296:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 825,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "5300:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 822,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "5276:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 827,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5156:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 806,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5156:8:7"
													},
													"referencedDeclaration": 460,
													"src": "5156:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5172:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5184:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5199:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:7"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:7"
									},
									"scope": 1020,
									"src": "5124:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "5965:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 862,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "5979:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6102:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 878,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "6108:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 879,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6112:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "6119:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 875,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6076:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 437,
																"src": "6076:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 891,
													"nodeType": "IfStatement",
													"src": "6071:127:7",
													"trueBody": {
														"id": 890,
														"nodeType": "Block",
														"src": "6126:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 886,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "6180:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 884,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 883,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "6147:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 889,
																"nodeType": "RevertStatement",
																"src": "6140:47:7"
															}
														]
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "5975:223:7",
												"trueBody": {
													"id": 874,
													"nodeType": "Block",
													"src": "6000:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 868,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "6031:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 869,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "6038:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 870,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "6044:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 871,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "6048:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 867,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6014:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 873,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5843:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 849,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5843:8:7"
													},
													"referencedDeclaration": 460,
													"src": "5843:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5867:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5889:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5909:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5932:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:7"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:7"
									},
									"scope": 1020,
									"src": "5798:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "6971:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 907,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6985:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 921,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "7093:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "7097:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 923,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "7104:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 919,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "7072:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 459,
																"src": "7072:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 934,
													"nodeType": "IfStatement",
													"src": "7067:116:7",
													"trueBody": {
														"id": 933,
														"nodeType": "Block",
														"src": "7111:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 929,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 898,
																					"src": "7165:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 927,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 926,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "7132:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 932,
																"nodeType": "RevertStatement",
																"src": "7125:47:7"
															}
														]
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "6981:202:7",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "7006:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 913,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "7033:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 914,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "7040:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 915,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "7044:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 912,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "7020:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 917,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6900:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "6900:8:7"
													},
													"referencedDeclaration": 460,
													"src": "6900:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6916:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6928:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6943:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:7"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:7"
									},
									"scope": 1020,
									"src": "6869:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "7756:650:7",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "7766:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:7"
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "7794:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:7",
													"nodeType": "YulBlock",
													"src": "7848:396:7",
													"statements": [
														{
															"nativeSrc": "7862:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:7"
																		},
																		"nativeSrc": "7882:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:7"
																		},
																		"nativeSrc": "7899:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:7"
																		},
																		"nativeSrc": "7916:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:7"
																},
																"nativeSrc": "7877:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:7",
																"nodeType": "YulBlock",
																"src": "7998:157:7",
																"statements": [
																	{
																		"nativeSrc": "8016:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:7"
																			},
																			"nativeSrc": "8027:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:7"
																					},
																					"nativeSrc": "8078:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:7"
																			},
																			"nativeSrc": "8055:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:7"
																		},
																		"nativeSrc": "8055:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:7"
																					},
																					"nativeSrc": "8124:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:7"
																			},
																			"nativeSrc": "8112:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:7"
																		},
																		"nativeSrc": "8112:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:7"
																},
																"nativeSrc": "7982:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:7"
															},
															"nativeSrc": "7979:176:7",
															"nodeType": "YulIf",
															"src": "7979:176:7"
														},
														{
															"nativeSrc": "8168:30:7",
															"nodeType": "YulAssignment",
															"src": "8168:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:7"
																},
																"nativeSrc": "8182:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:7"
																}
															]
														},
														{
															"nativeSrc": "8211:23:7",
															"nodeType": "YulAssignment",
															"src": "8211:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:7"
																},
																"nativeSrc": "8226:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:7",
														"valueSize": 1
													},
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:7",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:7",
														"valueSize": 1
													},
													{
														"declaration": 950,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:7",
														"valueSize": 1
													},
													{
														"declaration": 941,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 952,
												"nodeType": "InlineAssembly",
												"src": "7823:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 953,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "8258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 964,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "8310:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 958,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8284:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "8254:146:7",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "8328:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 971,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 941,
																				"src": "8382:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$611",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$611",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 969,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 968,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8349:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "8342:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7715:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "7715:6:7"
													},
													"referencedDeclaration": 611,
													"src": "7715:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7729:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:7"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:7"
									},
									"scope": 1020,
									"src": "7686:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8997:391:7",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9007:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:7"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9029:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:7"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9057:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:7",
													"nodeType": "YulBlock",
													"src": "9111:174:7",
													"statements": [
														{
															"nativeSrc": "9125:71:7",
															"nodeType": "YulAssignment",
															"src": "9125:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:7"
																		},
																		"nativeSrc": "9141:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:7"
																		},
																		"nativeSrc": "9158:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:7"
																		},
																		"nativeSrc": "9175:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:7"
																},
																"nativeSrc": "9136:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:7"
																}
															]
														},
														{
															"nativeSrc": "9209:30:7",
															"nodeType": "YulAssignment",
															"src": "9209:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:7"
																},
																"nativeSrc": "9223:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:7"
																}
															]
														},
														{
															"nativeSrc": "9252:23:7",
															"nodeType": "YulAssignment",
															"src": "9252:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:7"
																},
																"nativeSrc": "9267:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:7",
														"valueSize": 1
													},
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:7",
														"valueSize": 1
													},
													{
														"declaration": 993,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:7",
														"valueSize": 1
													},
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:7",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:7",
														"valueSize": 1
													},
													{
														"declaration": 982,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 998,
												"nodeType": "InlineAssembly",
												"src": "9086:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "9301:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1000,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "9313:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1011,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "9364:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1005,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "9339:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$611",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$611",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1003,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1015,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 988,
												"id": 1017,
												"nodeType": "Return",
												"src": "9294:87:7"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8941:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 980,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "8941:6:7"
													},
													"referencedDeclaration": 611,
													"src": "8941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8955:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:7"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8991:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:7"
									},
									"scope": 1020,
									"src": "8908:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1021,
							"src": "698:8692:7",
							"usedErrors": [
								623,
								632
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1023,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1050,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1037,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1039,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1050,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1045,
												"id": 1047,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1050,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1051,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1074
						],
						"IERC165": [
							1086
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1075,
							"sourceUnit": 1087,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "688:7:9"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1074,
							"linearizedBaseContracts": [
								1074,
								1086
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1067,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1086_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1086_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1066,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1086",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1071,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1074,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1075,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1086
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1077,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1086,
							"linearizedBaseContracts": [
								1086
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1086,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/WallyStaking.sol": {
				"ast": {
					"absolutePath": "contracts/WallyStaking.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1050
						],
						"DurationAlreadyExists": [
							1112
						],
						"ERC165": [
							1074
						],
						"IAccessControl": [
							378
						],
						"IERC1363": [
							460
						],
						"IERC20": [
							611
						],
						"InsufficientBalance": [
							1114
						],
						"InsufficientRewardsPool": [
							1104
						],
						"InvalidAmount": [
							1094
						],
						"InvalidDuration": [
							1096
						],
						"InvalidZeroAddress": [
							1106
						],
						"NoActiveStake": [
							1108
						],
						"NoRewardsAvailable": [
							1102
						],
						"ReentrancyGuard": [
							533
						],
						"SafeERC20": [
							1020
						],
						"StakingNotActive": [
							1098
						],
						"StakingStillLocked": [
							1100
						],
						"TransferFailed": [
							1110
						],
						"WallyStaking": [
							2228
						]
					},
					"id": 2229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2229,
							"sourceUnit": 612,
							"src": "57:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2229,
							"sourceUnit": 1021,
							"src": "114:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2229,
							"sourceUnit": 296,
							"src": "180:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2229,
							"sourceUnit": 534,
							"src": "239:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "2c5211c6",
							"id": 1094,
							"name": "InvalidAmount",
							"nameLocation": "442:13:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1093,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "455:2:11"
							},
							"src": "436:22:11"
						},
						{
							"errorSelector": "76166401",
							"id": 1096,
							"name": "InvalidDuration",
							"nameLocation": "465:15:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1095,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "480:2:11"
							},
							"src": "459:24:11"
						},
						{
							"errorSelector": "6929bcec",
							"id": 1098,
							"name": "StakingNotActive",
							"nameLocation": "490:16:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1097,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "506:2:11"
							},
							"src": "484:25:11"
						},
						{
							"errorSelector": "25e5ff65",
							"id": 1100,
							"name": "StakingStillLocked",
							"nameLocation": "516:18:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1099,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "534:2:11"
							},
							"src": "510:27:11"
						},
						{
							"errorSelector": "afb0be33",
							"id": 1102,
							"name": "NoRewardsAvailable",
							"nameLocation": "544:18:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1101,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "562:2:11"
							},
							"src": "538:27:11"
						},
						{
							"errorSelector": "447b0f67",
							"id": 1104,
							"name": "InsufficientRewardsPool",
							"nameLocation": "572:23:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1103,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "595:2:11"
							},
							"src": "566:32:11"
						},
						{
							"errorSelector": "f6b2911f",
							"id": 1106,
							"name": "InvalidZeroAddress",
							"nameLocation": "605:18:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1105,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "623:2:11"
							},
							"src": "599:27:11"
						},
						{
							"errorSelector": "fb348942",
							"id": 1108,
							"name": "NoActiveStake",
							"nameLocation": "633:13:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1107,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "646:2:11"
							},
							"src": "627:22:11"
						},
						{
							"errorSelector": "90b8ec18",
							"id": 1110,
							"name": "TransferFailed",
							"nameLocation": "656:14:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1109,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "670:2:11"
							},
							"src": "650:23:11"
						},
						{
							"errorSelector": "aee0d0ae",
							"id": 1112,
							"name": "DurationAlreadyExists",
							"nameLocation": "680:21:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1111,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "701:2:11"
							},
							"src": "674:30:11"
						},
						{
							"errorSelector": "f4d678b8",
							"id": 1114,
							"name": "InsufficientBalance",
							"nameLocation": "711:19:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1113,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "730:2:11"
							},
							"src": "705:28:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "AccessControl",
										"nameLocations": [
											"965:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "965:13:11"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:11"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"980:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "980:15:11"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "980:15:11"
								}
							],
							"canonicalName": "WallyStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "735:204:11",
								"text": " @title WallyStaking\n @dev Allows users to stake WallyToken for a predetermined duration\n to earn rewards at a fixed APY. Features multiple staking durations\n with corresponding APY rates."
							},
							"fullyImplemented": true,
							"id": 2228,
							"linearizedBaseContracts": [
								2228,
								533,
								295,
								1074,
								1086,
								378,
								1050
							],
							"name": "WallyStaking",
							"nameLocation": "949:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1123,
									"libraryName": {
										"id": 1120,
										"name": "SafeERC20",
										"nameLocations": [
											"1008:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "1008:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1002:27:11",
									"typeName": {
										"id": 1122,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1121,
											"name": "IERC20",
											"nameLocations": [
												"1022:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "1022:6:11"
										},
										"referencedDeclaration": 611,
										"src": "1022:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 1128,
									"mutability": "constant",
									"name": "_ADMIN_ROLE",
									"nameLocation": "1073:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "1048:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1124,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1048:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1126,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1097:12:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1125,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1087:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1127,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1087:23:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1133,
									"mutability": "constant",
									"name": "_REWARDS_MANAGER_ROLE",
									"nameLocation": "1141:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "1116:82:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1129,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1116:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "524557415244535f4d414e414745525f524f4c45",
												"id": 1131,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1175:22:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b",
													"typeString": "literal_string \"REWARDS_MANAGER_ROLE\""
												},
												"value": "REWARDS_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_51785d261c3b3e8c2cfe2d0e108b9ab2b1fb703ff9e9e49aba4ebdc85c36152b",
													"typeString": "literal_string \"REWARDS_MANAGER_ROLE\""
												}
											],
											"id": 1130,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1165:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1165:33:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
									"id": 1143,
									"name": "Staked",
									"nameLocation": "1225:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1248:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1232:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1262:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1254:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1286:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1270:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "1304:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1296:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:84:11"
									},
									"src": "1219:97:11"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 1151,
									"name": "Unstaked",
									"nameLocation": "1327:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1352:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1336:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedAmount",
												"nameLocation": "1366:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1358:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1388:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1380:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:66:11"
									},
									"src": "1321:81:11"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1157,
									"name": "RewardClaimed",
									"nameLocation": "1413:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1443:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1427:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1457:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1449:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:38:11"
									},
									"src": "1407:58:11"
								},
								{
									"anonymous": false,
									"eventSelector": "682563ed446791dcd2bb66aa531ebaf528bce493e57f037313263799851bc364",
									"id": 1163,
									"name": "StakingPlanAdded",
									"nameLocation": "1476:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1509:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1493:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1535:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1519:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:47:11"
									},
									"src": "1470:70:11"
								},
								{
									"anonymous": false,
									"eventSelector": "ad2954a6781cdc42b8af5df6f557041b3f146aaf8fbc031d767b7ad48164cff1",
									"id": 1169,
									"name": "StakingPlanUpdated",
									"nameLocation": "1551:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1586:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1570:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": true,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1612:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1596:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:47:11"
									},
									"src": "1545:72:11"
								},
								{
									"anonymous": false,
									"eventSelector": "f8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312",
									"id": 1173,
									"name": "RewardsAdded",
									"nameLocation": "1628:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1649:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1641:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:16:11"
									},
									"src": "1622:35:11"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 1179,
									"name": "EmergencyWithdraw",
									"nameLocation": "1668:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1702:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1686:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1716:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1708:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:38:11"
									},
									"src": "1662:62:11"
								},
								{
									"anonymous": false,
									"eventSelector": "3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c69",
									"id": 1183,
									"name": "StakingPaused",
									"nameLocation": "1735:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "1762:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1749:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1749:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:23:11"
									},
									"src": "1729:43:11"
								},
								{
									"canonicalName": "WallyStaking.StakingPlan",
									"id": 1188,
									"members": [
										{
											"constant": false,
											"id": 1185,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1833:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1188,
											"src": "1828:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1184,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1828:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1187,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "1859:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1188,
											"src": "1851:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1186,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1851:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingPlan",
									"nameLocation": "1806:11:11",
									"nodeType": "StructDefinition",
									"scope": 2228,
									"src": "1799:123:11",
									"visibility": "public"
								},
								{
									"canonicalName": "WallyStaking.UserStakingData",
									"id": 1203,
									"members": [
										{
											"constant": false,
											"id": 1190,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "2026:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2018:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1189,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2018:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1192,
											"mutability": "mutable",
											"name": "stakingStartTime",
											"nameLocation": "2056:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2048:24:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1191,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2048:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1194,
											"mutability": "mutable",
											"name": "lastClaimTime",
											"nameLocation": "2090:13:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2082:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1193,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2082:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1196,
											"mutability": "mutable",
											"name": "stakingEndTime",
											"nameLocation": "2121:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2113:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2113:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1198,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "2153:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2145:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2145:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1200,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "2179:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2171:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2171:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "2197:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "2192:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1201,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2192:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakingData",
									"nameLocation": "1992:15:11",
									"nodeType": "StructDefinition",
									"scope": 2228,
									"src": "1985:227:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1206,
									"mutability": "immutable",
									"name": "_token",
									"nameLocation": "2266:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2241:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$611",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1205,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1204,
											"name": "IERC20",
											"nameLocations": [
												"2241:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "2241:6:11"
										},
										"referencedDeclaration": 611,
										"src": "2241:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1211,
									"mutability": "mutable",
									"name": "_stakingPlans",
									"nameLocation": "2332:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2278:67:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
										"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan)"
									},
									"typeName": {
										"id": 1210,
										"keyName": "duration",
										"keyNameLocation": "2294:8:11",
										"keyType": {
											"id": 1207,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2286:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2278:45:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
											"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan)"
										},
										"valueName": "plan",
										"valueNameLocation": "2318:4:11",
										"valueType": {
											"id": 1209,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1208,
												"name": "StakingPlan",
												"nameLocations": [
													"2306:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1188,
												"src": "2306:11:11"
											},
											"referencedDeclaration": 1188,
											"src": "2306:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
												"typeString": "struct WallyStaking.StakingPlan"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1216,
									"mutability": "mutable",
									"name": "_userStakingData",
									"nameLocation": "2433:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2379:70:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
										"typeString": "mapping(address => struct WallyStaking.UserStakingData)"
									},
									"typeName": {
										"id": 1215,
										"keyName": "user",
										"keyNameLocation": "2395:4:11",
										"keyType": {
											"id": 1212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2387:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2379:45:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
											"typeString": "mapping(address => struct WallyStaking.UserStakingData)"
										},
										"valueName": "data",
										"valueNameLocation": "2419:4:11",
										"valueType": {
											"id": 1214,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1213,
												"name": "UserStakingData",
												"nameLocations": [
													"2403:15:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1203,
												"src": "2403:15:11"
											},
											"referencedDeclaration": 1203,
											"src": "2403:15:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
												"typeString": "struct WallyStaking.UserStakingData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1218,
									"mutability": "mutable",
									"name": "_totalStaked",
									"nameLocation": "2499:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2483:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2483:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1220,
									"mutability": "mutable",
									"name": "_rewardsPool",
									"nameLocation": "2533:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2517:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1222,
									"mutability": "mutable",
									"name": "_stakingPaused",
									"nameLocation": "2564:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2551:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1221,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2551:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1225,
									"mutability": "mutable",
									"name": "_availableDurations",
									"nameLocation": "2602:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2584:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1223,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2584:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1224,
										"nodeType": "ArrayTypeName",
										"src": "2584:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1228,
									"mutability": "constant",
									"name": "_BASIS_POINTS",
									"nameLocation": "2708:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2683:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2683:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2724:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1231,
									"mutability": "constant",
									"name": "_ONE_YEAR",
									"nameLocation": "2776:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "2751:45:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1229,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2751:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1230,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2788:8:11",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "3081:832:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1239,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "3132:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3156:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3148:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1240,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3148:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3148:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3132:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "3128:59:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1245,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "3167:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3167:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1247,
													"nodeType": "RevertStatement",
													"src": "3160:27:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1249,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "3201:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3225:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3217:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3217:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3217:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3201:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1258,
												"nodeType": "IfStatement",
												"src": "3197:59:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1255,
															"name": "InvalidZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "3236:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3236:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1257,
													"nodeType": "RevertStatement",
													"src": "3229:27:11"
												}
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3267:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$611",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1261,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "3283:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1260,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "3276:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$611_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3276:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$611",
															"typeString": "contract IERC20"
														}
													},
													"src": "3267:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "3267:29:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3349:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1267,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "3369:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1265,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3338:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3338:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "3338:44:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1271,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3403:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1272,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "3416:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1270,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3392:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3392:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "3392:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "_REWARDS_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3450:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1277,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "3473:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1275,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3439:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3439:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "3439:47:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "_REWARDS_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3575:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1282,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3598:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1280,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "3561:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3561:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "3561:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3930",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3699:7:11",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														{
															"hexValue": "353030",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3708:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															{
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															}
														],
														"id": 1285,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "3683:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3683:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "3683:29:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313830",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:8:11",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															"value": "180"
														},
														{
															"hexValue": "383030",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3772:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_800_by_1",
																"typeString": "int_const 800"
															},
															"value": "800"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															{
																"typeIdentifier": "t_rational_800_by_1",
																"typeString": "int_const 800"
															}
														],
														"id": 1290,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "3746:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3746:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "3746:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "333635",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3825:8:11",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "31323030",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3835:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1200_by_1",
																"typeString": "int_const 1200"
															},
															"value": "1200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_rational_1200_by_1",
																"typeString": "int_const 1200"
															}
														],
														"id": 1295,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "3809:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "3809:31:11"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1300,
														"name": "_stakingPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "3884:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3901:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3884:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "3884:22:11"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "2803:209:11",
										"text": " @dev Constructor sets up the initial contract state\n @param tokenAddress Address of the WallyToken contract\n @param adminAddress Address of the admin who will manage the contract"
									},
									"id": 1305,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3037:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3029:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "adminAddress",
												"nameLocation": "3059:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3051:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:44:11"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3081:0:11"
									},
									"scope": 2228,
									"src": "3017:896:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "4242:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "4268:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1320,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "4278:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1318,
														"name": "_addStakingPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "4252:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4252:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "4252:30:11"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "3919:187:11",
										"text": " @dev Adds a staking plan with a specific duration and APR\n @param duration Duration in seconds\n @param apr Annual percentage rate in basis points (100 = 1%)"
									},
									"functionSelector": "5ef23fa9",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1313,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1312,
												"name": "nonReentrant",
												"nameLocations": [
													"4193:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "4193:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4193:12:11"
										},
										{
											"arguments": [
												{
													"id": 1315,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1128,
													"src": "4224:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1314,
												"name": "onlyRole",
												"nameLocations": [
													"4215:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4215:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4215:21:11"
										}
									],
									"name": "addStakingPlan",
									"nameLocation": "4120:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4143:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "4135:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4135:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "4161:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "4153:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4134:31:11"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4242:0:11"
									},
									"scope": 2228,
									"src": "4111:178:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "4670:819:11",
										"statements": [
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "found",
														"nameLocation": "4721:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "4716:10:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1339,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4716:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4729:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4716:18:11"
											},
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "durationsLength",
														"nameLocation": "4794:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "4786:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4786:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1347,
												"initialValue": {
													"expression": {
														"id": 1345,
														"name": "_availableDurations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "4812:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4832:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4812:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4786:52:11"
											},
											{
												"body": {
													"id": 1370,
													"nodeType": "Block",
													"src": "4894:193:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1358,
																		"name": "_availableDurations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "4973:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1360,
																	"indexExpression": {
																		"id": 1359,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "4993:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4973:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1361,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "4999:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4973:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1369,
															"nodeType": "IfStatement",
															"src": "4969:108:11",
															"trueBody": {
																"id": 1368,
																"nodeType": "Block",
																"src": "5009:68:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1363,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1340,
																				"src": "5027:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5035:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "5027:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1366,
																		"nodeType": "ExpressionStatement",
																		"src": "5027:12:11"
																	},
																	{
																		"id": 1367,
																		"nodeType": "Break",
																		"src": "5057:5:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1352,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "4868:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1353,
														"name": "durationsLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "4872:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4868:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"initializationExpression": {
													"assignments": [
														1349
													],
													"declarations": [
														{
															"constant": false,
															"id": 1349,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4861:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1371,
															"src": "4853:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1348,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4853:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1351,
													"initialValue": {
														"hexValue": "30",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4865:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4853:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4889:3:11",
														"subExpression": {
															"id": 1355,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "4891:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1357,
													"nodeType": "ExpressionStatement",
													"src": "4889:3:11"
												},
												"nodeType": "ForStatement",
												"src": "4848:239:11"
											},
											{
												"condition": {
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5100:6:11",
													"subExpression": {
														"id": 1372,
														"name": "found",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5101:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1377,
												"nodeType": "IfStatement",
												"src": "5096:36:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1374,
															"name": "InvalidDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "5115:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5115:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1376,
													"nodeType": "RevertStatement",
													"src": "5108:24:11"
												}
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "5228:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "5208:24:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 1379,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1378,
																"name": "StakingPlan",
																"nameLocations": [
																	"5208:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1188,
																"src": "5208:11:11"
															},
															"referencedDeclaration": 1188,
															"src": "5208:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"baseExpression": {
														"id": 1381,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "5235:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 1383,
													"indexExpression": {
														"id": 1382,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5249:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5235:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1188_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5208:50:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1385,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "5272:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5277:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "5272:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1387,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "5284:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5272:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "5268:60:11",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "5289:39:11",
													"statements": [
														{
															"expression": {
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1389,
																		"name": "plan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "5303:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																			"typeString": "struct WallyStaking.StakingPlan storage pointer"
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5308:3:11",
																	"memberName": "apr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1187,
																	"src": "5303:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1392,
																	"name": "apr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "5314:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5303:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1394,
															"nodeType": "ExpressionStatement",
															"src": "5303:14:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1397,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "5350:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5355:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "5350:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1399,
														"name": "isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "5367:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5350:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "IfStatement",
												"src": "5346:80:11",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "5377:49:11",
													"statements": [
														{
															"expression": {
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1401,
																		"name": "plan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "5391:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																			"typeString": "struct WallyStaking.StakingPlan storage pointer"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5396:8:11",
																	"memberName": "isActive",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "5391:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1404,
																	"name": "isActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "5407:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5391:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1406,
															"nodeType": "ExpressionStatement",
															"src": "5391:24:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1410,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "5468:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1411,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "5478:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1409,
														"name": "StakingPlanUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "5449:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5449:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "EmitStatement",
												"src": "5444:38:11"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "4295:221:11",
										"text": " @dev Updates an existing staking plan\n @param duration Duration of the plan to update\n @param apr New annual percentage rate in basis points\n @param isActive Whether the plan is active"
									},
									"functionSelector": "aea1b6ef",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1334,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1333,
												"name": "nonReentrant",
												"nameLocations": [
													"4621:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "4621:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4621:12:11"
										},
										{
											"arguments": [
												{
													"id": 1336,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1128,
													"src": "4652:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1335,
												"name": "onlyRole",
												"nameLocations": [
													"4643:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4643:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4643:21:11"
										}
									],
									"name": "updateStakingPlan",
									"nameLocation": "4530:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4556:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4548:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "4574:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4566:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4566:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "4584:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4579:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4579:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4547:46:11"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4670:0:11"
									},
									"scope": 2228,
									"src": "4521:968:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "5719:179:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1426,
														"name": "_stakingPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "5778:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1427,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "5796:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5778:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "IfStatement",
												"src": "5774:118:11",
												"trueBody": {
													"id": 1437,
													"nodeType": "Block",
													"src": "5804:88:11",
													"statements": [
														{
															"expression": {
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1429,
																	"name": "_stakingPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "5818:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1430,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "5835:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5818:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "5818:23:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1434,
																		"name": "paused",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "5874:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1433,
																	"name": "StakingPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "5860:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
																		"typeString": "function (bool)"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5860:21:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1436,
															"nodeType": "EmitStatement",
															"src": "5855:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "5495:104:11",
										"text": " @dev Pauses or unpauses staking\n @param paused Whether staking should be paused"
									},
									"functionSelector": "15b31bbb",
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1420,
												"name": "nonReentrant",
												"nameLocations": [
													"5670:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "5670:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5670:12:11"
										},
										{
											"arguments": [
												{
													"id": 1423,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1128,
													"src": "5701:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1422,
												"name": "onlyRole",
												"nameLocations": [
													"5692:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5692:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5692:21:11"
										}
									],
									"name": "setStakingPaused",
									"nameLocation": "5613:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "5635:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "5630:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5630:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:13:11"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5719:0:11"
									},
									"scope": 2228,
									"src": "5604:294:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "6131:561:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1451,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "6145:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6155:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6145:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1457,
												"nodeType": "IfStatement",
												"src": "6141:39:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1454,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6165:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6165:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1456,
													"nodeType": "RevertStatement",
													"src": "6158:22:11"
												}
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "6256:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1488,
														"src": "6248:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1458,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6248:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"arguments": [
														{
															"id": 1462,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "6271:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyStaking_$2228",
																"typeString": "contract WallyStaking"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyStaking_$2228",
																"typeString": "contract WallyStaking"
															}
														],
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6263:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6263:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6263:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6248:28:11"
											},
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "rewardsPool",
														"nameLocation": "6362:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1488,
														"src": "6354:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6354:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"id": 1467,
													"name": "_rewardsPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1220,
													"src": "6376:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6354:34:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6482:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6486:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6482:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "6494:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "6500:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1469,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "6458:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6465:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "6458:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6458:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "6458:49:11"
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "_rewardsPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "6606:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1479,
															"name": "rewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "6621:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "6635:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6621:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6606:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "6606:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "6678:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "RewardsAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "6665:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6665:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "EmitStatement",
												"src": "6660:25:11"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "5904:100:11",
										"text": " @dev Adds tokens to the rewards pool\n @param amount Amount of tokens to add"
									},
									"functionSelector": "beceed39",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "nonReentrant",
												"nameLocations": [
													"6072:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "6072:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6072:12:11"
										},
										{
											"arguments": [
												{
													"id": 1448,
													"name": "_REWARDS_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1133,
													"src": "6103:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1447,
												"name": "onlyRole",
												"nameLocations": [
													"6094:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6094:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6094:31:11"
										}
									],
									"name": "addRewards",
									"nameLocation": "6018:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6037:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "6029:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:16:11"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6131:0:11"
									},
									"scope": 2228,
									"src": "6009:683:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "6943:2060:11",
										"statements": [
											{
												"assignments": [
													1500
												],
												"declarations": [
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "stakingPaused",
														"nameLocation": "7018:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7013:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1499,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7013:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"id": 1501,
													"name": "_stakingPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1222,
													"src": "7034:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7013:35:11"
											},
											{
												"assignments": [
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "totalStaked",
														"nameLocation": "7066:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7058:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"id": 1505,
													"name": "_totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1218,
													"src": "7080:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:34:11"
											},
											{
												"condition": {
													"id": 1507,
													"name": "stakingPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1500,
													"src": "7129:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "7125:44:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1508,
															"name": "StakingNotActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "7151:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:18:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1510,
													"nodeType": "RevertStatement",
													"src": "7144:25:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1512,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "7183:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7193:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7183:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "7179:39:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1515,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "7203:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7203:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1517,
													"nodeType": "RevertStatement",
													"src": "7196:22:11"
												}
											},
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "7310:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7290:24:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 1520,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1519,
																"name": "StakingPlan",
																"nameLocations": [
																	"7290:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1188,
																"src": "7290:11:11"
															},
															"referencedDeclaration": 1188,
															"src": "7290:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"baseExpression": {
														"id": 1522,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "7317:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 1524,
													"indexExpression": {
														"id": 1523,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "7331:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7317:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1188_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7290:50:11"
											},
											{
												"condition": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7354:14:11",
													"subExpression": {
														"expression": {
															"id": 1526,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "7355:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7360:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "7355:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1532,
												"nodeType": "IfStatement",
												"src": "7350:44:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1529,
															"name": "InvalidDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "7377:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7377:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1531,
													"nodeType": "RevertStatement",
													"src": "7370:24:11"
												}
											},
											{
												"assignments": [
													1534
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "7452:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7444:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1533,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7444:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"arguments": [
														{
															"id": 1537,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "7467:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyStaking_$2228",
																"typeString": "contract WallyStaking"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyStaking_$2228",
																"typeString": "contract WallyStaking"
															}
														],
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7459:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1535,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7459:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7459:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7444:28:11"
											},
											{
												"assignments": [
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "7552:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7544:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7544:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"initialValue": {
													"expression": {
														"id": 1542,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "7566:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7572:9:11",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "7566:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7544:37:11"
											},
											{
												"assignments": [
													1547
												],
												"declarations": [
													{
														"constant": false,
														"id": 1547,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "7669:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7645:32:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1546,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1545,
																"name": "UserStakingData",
																"nameLocations": [
																	"7645:15:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1203,
																"src": "7645:15:11"
															},
															"referencedDeclaration": 1203,
															"src": "7645:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"baseExpression": {
														"id": 1548,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "7680:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1551,
													"indexExpression": {
														"expression": {
															"id": 1549,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7697:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7701:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7697:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7680:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1203_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7645:63:11"
											},
											{
												"condition": {
													"expression": {
														"id": 1553,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "7722:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData storage pointer"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7731:8:11",
													"memberName": "isActive",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1202,
													"src": "7722:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "7718:430:11",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "7741:407:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1555,
																			"name": "userData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "7845:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																				"typeString": "struct WallyStaking.UserStakingData storage pointer"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7854:16:11",
																		"memberName": "stakingStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1192,
																		"src": "7845:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7874:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7845:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1559,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1541,
																		"src": "7879:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"id": 1560,
																			"name": "userData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "7894:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																				"typeString": "struct WallyStaking.UserStakingData storage pointer"
																			}
																		},
																		"id": 1561,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7903:16:11",
																		"memberName": "stakingStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1192,
																		"src": "7894:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7879:40:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7845:74:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1583,
															"nodeType": "IfStatement",
															"src": "7841:297:11",
															"trueBody": {
																"id": 1582,
																"nodeType": "Block",
																"src": "7921:217:11",
																"statements": [
																	{
																		"assignments": [
																			1565
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1565,
																				"mutability": "mutable",
																				"name": "pendingRewards",
																				"nameLocation": "7947:14:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 1582,
																				"src": "7939:22:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1564,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7939:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1570,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1567,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "7988:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7992:6:11",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "7988:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1566,
																				"name": "calculatePendingRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2001,
																				"src": "7964:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7964:35:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7939:60:11"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1571,
																				"name": "pendingRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1565,
																				"src": "8021:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8039:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8021:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1581,
																		"nodeType": "IfStatement",
																		"src": "8017:107:11",
																		"trueBody": {
																			"id": 1580,
																			"nodeType": "Block",
																			"src": "8042:82:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1575,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "8078:3:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1576,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8082:6:11",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "8078:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1577,
																								"name": "pendingRewards",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1565,
																								"src": "8090:14:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1574,
																							"name": "_claimRewards",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2227,
																							"src": "8064:13:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 1578,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8064:41:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1579,
																					"nodeType": "ExpressionStatement",
																					"src": "8064:41:11"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "8207:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "8199:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8199:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1588,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "8220:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1589,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "8234:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8220:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8199:43:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1595,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8334:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8338:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8334:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1597,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "8346:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "8352:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1592,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "8310:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8317:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "8310:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8310:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "8310:49:11"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1601,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8472:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8481:12:11",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "8472:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1604,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "8496:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8472:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "8472:30:11"
											},
											{
												"expression": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1607,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8512:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8521:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "8512:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1610,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "8540:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8512:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "8512:39:11"
											},
											{
												"expression": {
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1613,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8561:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8570:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "8561:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1616,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "8587:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8561:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "8561:36:11"
											},
											{
												"expression": {
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1619,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8607:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8616:8:11",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "8607:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1622,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "8627:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8607:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "8607:28:11"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1625,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8645:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8654:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "8645:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1628,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "8660:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8665:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "8660:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "8645:23:11"
											},
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1632,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8678:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8687:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "8678:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8698:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8678:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "8678:24:11"
											},
											{
												"expression": {
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1638,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "8712:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8721:13:11",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1194,
														"src": "8712:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1641,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "8737:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8712:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "8712:36:11"
											},
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1644,
														"name": "_totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "8854:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1645,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "8869:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "8883:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8869:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8854:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "8854:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1651,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8920:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8924:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8920:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "8932:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1654,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "8940:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8950:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1650,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "8913:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8913:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "EmitStatement",
												"src": "8908:44:11"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "6698:146:11",
										"text": " @dev Allows a user to stake tokens\n @param amount Amount to stake\n @param duration Duration in seconds to stake for"
									},
									"functionSelector": "7b0472f0",
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "nonReentrant",
												"nameLocations": [
													"6925:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "6925:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6925:12:11"
										}
									],
									"name": "stake",
									"nameLocation": "6858:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6872:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "6864:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "6888:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "6880:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6880:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6863:34:11"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6943:0:11"
									},
									"scope": 2228,
									"src": "6849:2154:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "9161:1219:11",
										"statements": [
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "9195:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9171:32:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1666,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1665,
																"name": "UserStakingData",
																"nameLocations": [
																	"9171:15:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1203,
																"src": "9171:15:11"
															},
															"referencedDeclaration": 1203,
															"src": "9171:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"baseExpression": {
														"id": 1668,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "9206:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1671,
													"indexExpression": {
														"expression": {
															"id": 1669,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9223:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9227:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9223:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9206:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1203_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:63:11"
											},
											{
												"condition": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9280:18:11",
													"subExpression": {
														"expression": {
															"id": 1673,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9281:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9290:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "9281:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "9276:46:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1676,
															"name": "NoActiveStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "9307:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9307:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1678,
													"nodeType": "RevertStatement",
													"src": "9300:22:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1680,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9336:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9342:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9336:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1682,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9355:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9364:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "9355:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9336:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1688,
												"nodeType": "IfStatement",
												"src": "9332:75:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1685,
															"name": "StakingStillLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "9387:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9387:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1687,
													"nodeType": "RevertStatement",
													"src": "9380:27:11"
												}
											},
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "9482:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9474:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9474:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"arguments": [
														{
															"id": 1693,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "9497:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyStaking_$2228",
																"typeString": "contract WallyStaking"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyStaking_$2228",
																"typeString": "contract WallyStaking"
															}
														],
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9489:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1691,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9489:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9474:28:11"
											},
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "9529:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9521:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9521:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1700,
												"initialValue": {
													"expression": {
														"id": 1698,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "9544:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData storage pointer"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9553:12:11",
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1190,
													"src": "9544:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9521:44:11"
											},
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "pendingRewards",
														"nameLocation": "9583:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9575:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9575:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1704,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9624:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9628:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1703,
														"name": "calculatePendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "9600:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9600:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9575:60:11"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1708,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9681:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9690:12:11",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "9681:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9705:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9681:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "9681:25:11"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1714,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9716:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9725:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "9716:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9744:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9716:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "9716:29:11"
											},
											{
												"expression": {
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1720,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9755:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9764:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "9755:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9781:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9755:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "9755:27:11"
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1726,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9792:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9801:8:11",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "9792:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9812:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9792:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "9792:21:11"
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1732,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9823:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9832:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "9823:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9838:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9823:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "9823:16:11"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1738,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9849:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9858:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "9849:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9869:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9849:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "9849:25:11"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1744,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "9884:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9893:13:11",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1194,
														"src": "9884:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9909:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9884:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "9884:26:11"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1750,
														"name": "_totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "10009:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1751,
															"name": "_totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "10024:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1752,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "10039:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10024:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10009:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "10009:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1759,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10130:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10134:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10130:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1761,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "10142:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1756,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "10110:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10117:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "10110:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10110:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "10110:45:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1764,
														"name": "pendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "10213:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10231:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10213:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1774,
												"nodeType": "IfStatement",
												"src": "10209:91:11",
												"trueBody": {
													"id": 1773,
													"nodeType": "Block",
													"src": "10234:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1768,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10262:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10266:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10262:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1770,
																		"name": "pendingRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "10274:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1767,
																	"name": "_claimRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "10248:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10248:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1772,
															"nodeType": "ExpressionStatement",
															"src": "10248:41:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1776,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10332:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10336:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10332:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1778,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "10344:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1779,
															"name": "pendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "10358:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1775,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "10323:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10323:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "EmitStatement",
												"src": "10318:55:11"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "9009:83:11",
										"text": " @dev Allows a user to unstake their tokens after the lock period"
									},
									"functionSelector": "2def6620",
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1662,
												"name": "nonReentrant",
												"nameLocations": [
													"9143:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "9143:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9143:12:11"
										}
									],
									"name": "unstake",
									"nameLocation": "9106:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9113:2:11"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9161:0:11"
									},
									"scope": 2228,
									"src": "9097:1283:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "10531:490:11",
										"statements": [
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "10565:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "10541:32:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1790,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1789,
																"name": "UserStakingData",
																"nameLocations": [
																	"10541:15:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1203,
																"src": "10541:15:11"
															},
															"referencedDeclaration": 1203,
															"src": "10541:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"baseExpression": {
														"id": 1792,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "10576:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1795,
													"indexExpression": {
														"expression": {
															"id": 1793,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10593:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10597:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10593:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10576:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1203_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10541:63:11"
											},
											{
												"condition": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10650:18:11",
													"subExpression": {
														"expression": {
															"id": 1797,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "10651:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10660:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "10651:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1803,
												"nodeType": "IfStatement",
												"src": "10646:46:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1800,
															"name": "NoActiveStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "10677:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10677:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1802,
													"nodeType": "RevertStatement",
													"src": "10670:22:11"
												}
											},
											{
												"assignments": [
													1805
												],
												"declarations": [
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "pendingRewards",
														"nameLocation": "10719:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "10711:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10711:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1807,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10760:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10764:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10760:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1806,
														"name": "calculatePendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "10736:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10736:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10711:60:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "pendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "10785:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10803:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10785:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1817,
												"nodeType": "IfStatement",
												"src": "10781:52:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1814,
															"name": "NoRewardsAvailable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "10813:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10813:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1816,
													"nodeType": "RevertStatement",
													"src": "10806:27:11"
												}
											},
											{
												"expression": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1818,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "10886:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10895:13:11",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1194,
														"src": "10886:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1821,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10911:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10917:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10911:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10886:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "10886:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10987:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10991:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10987:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "pendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "10999:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1825,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "10973:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10973:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "10973:41:11"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "10386:71:11",
										"text": " @dev Allows users to claim rewards without unstaking"
									},
									"functionSelector": "372500ab",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1786,
												"name": "nonReentrant",
												"nameLocations": [
													"10513:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "10513:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10513:12:11"
										}
									],
									"name": "claimRewards",
									"nameLocation": "10471:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10483:2:11"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10531:0:11"
									},
									"scope": 2228,
									"src": "10462:559:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "11242:875:11",
										"statements": [
											{
												"assignments": [
													1840
												],
												"declarations": [
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "11276:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "11252:32:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1839,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1838,
																"name": "UserStakingData",
																"nameLocations": [
																	"11252:15:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1203,
																"src": "11252:15:11"
															},
															"referencedDeclaration": 1203,
															"src": "11252:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"baseExpression": {
														"id": 1841,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "11287:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1844,
													"indexExpression": {
														"expression": {
															"id": 1842,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11304:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11308:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11304:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11287:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1203_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11252:63:11"
											},
											{
												"condition": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11361:18:11",
													"subExpression": {
														"expression": {
															"id": 1846,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11362:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11371:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "11362:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1852,
												"nodeType": "IfStatement",
												"src": "11357:46:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1849,
															"name": "NoActiveStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "11388:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11388:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1851,
													"nodeType": "RevertStatement",
													"src": "11381:22:11"
												}
											},
											{
												"assignments": [
													1854
												],
												"declarations": [
													{
														"constant": false,
														"id": 1854,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "11487:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "11479:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11479:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1857,
												"initialValue": {
													"expression": {
														"id": 1855,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "11502:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData storage pointer"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11511:12:11",
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1190,
													"src": "11502:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11479:44:11"
											},
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1858,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11569:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11578:12:11",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "11569:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11593:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11569:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "11569:25:11"
											},
											{
												"expression": {
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1864,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11604:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11613:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "11604:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11632:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11604:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "11604:29:11"
											},
											{
												"expression": {
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1870,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11643:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11652:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "11643:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11669:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11643:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "11643:27:11"
											},
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1876,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11680:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11689:8:11",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "11680:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11700:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11680:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "11680:21:11"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1882,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11711:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11720:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "11711:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11726:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11711:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "11711:16:11"
											},
											{
												"expression": {
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1888,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11737:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11746:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "11737:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11757:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11737:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "11737:25:11"
											},
											{
												"expression": {
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1894,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "11772:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11781:13:11",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1194,
														"src": "11772:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11797:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11772:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "11772:26:11"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1900,
														"name": "_totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "11897:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1901,
															"name": "_totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "11912:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1902,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "11927:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11912:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11897:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "11897:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1909,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12018:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12022:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12018:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "12030:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1906,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "11998:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12005:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "11998:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11998:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "11998:45:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12085:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12089:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12085:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1917,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "12097:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1914,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "12067:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12067:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "EmitStatement",
												"src": "12062:48:11"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "11027:136:11",
										"text": " @dev Emergency withdraw function in case of critical issues\n Note: This doesn't calculate or distribute rewards"
									},
									"functionSelector": "db2e21bc",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1836,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1835,
												"name": "nonReentrant",
												"nameLocations": [
													"11224:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "11224:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11224:12:11"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "11177:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11194:2:11"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11242:0:11"
									},
									"scope": 2228,
									"src": "11168:949:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "12382:1018:11",
										"statements": [
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "12416:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "12392:32:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 1930,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1929,
																"name": "UserStakingData",
																"nameLocations": [
																	"12392:15:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1203,
																"src": "12392:15:11"
															},
															"referencedDeclaration": 1203,
															"src": "12392:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": {
													"baseExpression": {
														"id": 1932,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "12427:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 1934,
													"indexExpression": {
														"id": 1933,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "12444:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12427:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1203_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12392:57:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12472:18:11",
														"subExpression": {
															"expression": {
																"id": 1936,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "12473:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12482:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "12473:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1939,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "12494:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12503:12:11",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1190,
															"src": "12494:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12519:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12494:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12472:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1947,
												"nodeType": "IfStatement",
												"src": "12468:87:11",
												"trueBody": {
													"id": 1946,
													"nodeType": "Block",
													"src": "12522:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12543:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1928,
															"id": 1945,
															"nodeType": "Return",
															"src": "12536:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1949
												],
												"declarations": [
													{
														"constant": false,
														"id": 1949,
														"mutability": "mutable",
														"name": "endTime",
														"nameLocation": "12632:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "12624:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12624:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"expression": {
														"id": 1950,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "12642:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12648:9:11",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "12642:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12624:33:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1953,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "12671:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1954,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12682:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12691:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "12682:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12671:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1963,
												"nodeType": "IfStatement",
												"src": "12667:98:11",
												"trueBody": {
													"id": 1962,
													"nodeType": "Block",
													"src": "12707:58:11",
													"statements": [
														{
															"expression": {
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1957,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "12721:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1958,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "12731:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																			"typeString": "struct WallyStaking.UserStakingData storage pointer"
																		}
																	},
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12740:14:11",
																	"memberName": "stakingEndTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1196,
																	"src": "12731:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12721:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1961,
															"nodeType": "ExpressionStatement",
															"src": "12721:33:11"
														}
													]
												}
											},
											{
												"assignments": [
													1965
												],
												"declarations": [
													{
														"constant": false,
														"id": 1965,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "12791:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "12783:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12783:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1970,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1966,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "12805:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1967,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12815:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12824:13:11",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1194,
														"src": "12815:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12805:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12783:54:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1971,
														"name": "timeElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "12851:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12866:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12851:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1977,
												"nodeType": "IfStatement",
												"src": "12847:55:11",
												"trueBody": {
													"id": 1976,
													"nodeType": "Block",
													"src": "12869:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12890:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1928,
															"id": 1975,
															"nodeType": "Return",
															"src": "12883:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "13157:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "13149:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13149:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1980,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "13169:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13178:12:11",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1190,
															"src": "13169:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 1982,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "13193:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																	"typeString": "struct WallyStaking.UserStakingData storage pointer"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13202:3:11",
															"memberName": "apr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1200,
															"src": "13193:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13169:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1985,
														"name": "timeElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "13208:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13169:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13149:70:11"
											},
											{
												"assignments": [
													1989
												],
												"declarations": [
													{
														"constant": false,
														"id": 1989,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "13237:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "13229:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13229:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1993,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1990,
														"name": "_BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "13251:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1991,
														"name": "_ONE_YEAR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13267:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13251:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13229:47:11"
											},
											{
												"expression": {
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1994,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "13286:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1995,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "13296:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1996,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "13308:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13296:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13286:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "13286:33:11"
											}
										]
									},
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "12123:137:11",
										"text": " @dev Calculates pending rewards for a user\n @param user Address of the user\n @return rewards Reward amount"
									},
									"functionSelector": "097aad10",
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePendingRewards",
									"nameLocation": "12274:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12306:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "12298:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12298:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12297:14:11"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "12368:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "12360:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12360:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12359:17:11"
									},
									"scope": 2228,
									"src": "12265:1135:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "WallyStaking.UserStakingInfo",
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "13406:162:11",
										"text": " @dev Get user staking information\n @param user Address of the user\n @return userInfo Struct containing all user staking information"
									},
									"id": 2017,
									"members": [
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "13680:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13672:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2003,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13672:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2006,
											"mutability": "mutable",
											"name": "stakingStartTime",
											"nameLocation": "13710:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13702:24:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2005,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13702:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2008,
											"mutability": "mutable",
											"name": "stakingEndTime",
											"nameLocation": "13745:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13737:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2007,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13737:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "13777:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13769:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2009,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13769:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2012,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "13803:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13795:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13795:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2014,
											"mutability": "mutable",
											"name": "pendingRewards",
											"nameLocation": "13824:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13816:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13816:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "13853:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "13848:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2015,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "13848:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakingInfo",
									"nameLocation": "13646:15:11",
									"nodeType": "StructDefinition",
									"scope": 2228,
									"src": "13639:229:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "14008:490:11",
										"statements": [
											{
												"assignments": [
													2027
												],
												"declarations": [
													{
														"constant": false,
														"id": 2027,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "14042:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "14018:32:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
															"typeString": "struct WallyStaking.UserStakingData"
														},
														"typeName": {
															"id": 2026,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2025,
																"name": "UserStakingData",
																"nameLocations": [
																	"14018:15:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1203,
																"src": "14018:15:11"
															},
															"referencedDeclaration": 1203,
															"src": "14018:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2031,
												"initialValue": {
													"baseExpression": {
														"id": 2028,
														"name": "_userStakingData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "14053:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStakingData_$1203_storage_$",
															"typeString": "mapping(address => struct WallyStaking.UserStakingData storage ref)"
														}
													},
													"id": 2030,
													"indexExpression": {
														"id": 2029,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "14070:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14053:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingData_$1203_storage",
														"typeString": "struct WallyStaking.UserStakingData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14018:57:11"
											},
											{
												"expression": {
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2032,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14094:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14103:12:11",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "14094:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2035,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "14118:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14127:12:11",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "14118:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14094:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "14094:45:11"
											},
											{
												"expression": {
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2039,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14149:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14158:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2006,
														"src": "14149:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2042,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "14177:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2043,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14186:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "14177:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14149:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "14149:53:11"
											},
											{
												"expression": {
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2046,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14212:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14221:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2008,
														"src": "14212:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2049,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "14238:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14247:14:11",
														"memberName": "stakingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "14238:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14212:49:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "14212:49:11"
											},
											{
												"expression": {
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2053,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14271:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14280:8:11",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2010,
														"src": "14271:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2056,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "14291:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14300:8:11",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "14291:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14271:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "14271:37:11"
											},
											{
												"expression": {
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2060,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14318:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14327:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2012,
														"src": "14318:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2063,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "14333:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14342:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "14333:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14318:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "14318:27:11"
											},
											{
												"expression": {
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2067,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14355:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14364:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2016,
														"src": "14355:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2070,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "14375:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingData_$1203_storage_ptr",
																"typeString": "struct WallyStaking.UserStakingData storage pointer"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14384:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "14375:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14355:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "14355:37:11"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2074,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "14402:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
																"typeString": "struct WallyStaking.UserStakingInfo memory"
															}
														},
														"id": 2076,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14411:14:11",
														"memberName": "pendingRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2014,
														"src": "14402:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2078,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "14452:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2077,
															"name": "calculatePendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "14428:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14428:29:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14402:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "14402:55:11"
											},
											{
												"expression": {
													"id": 2082,
													"name": "userInfo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2023,
													"src": "14483:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
														"typeString": "struct WallyStaking.UserStakingInfo memory"
													}
												},
												"functionReturnParameters": 2024,
												"id": 2083,
												"nodeType": "Return",
												"src": "14476:15:11"
											}
										]
									},
									"functionSelector": "80933608",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStakingInfo",
									"nameLocation": "13887:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "13914:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "13906:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13906:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13905:14:11"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "userInfo",
												"nameLocation": "13993:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "13970:31:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserStakingInfo_$2017_memory_ptr",
													"typeString": "struct WallyStaking.UserStakingInfo"
												},
												"typeName": {
													"id": 2022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2021,
														"name": "UserStakingInfo",
														"nameLocations": [
															"13970:15:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "13970:15:11"
													},
													"referencedDeclaration": 2017,
													"src": "13970:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStakingInfo_$2017_storage_ptr",
														"typeString": "struct WallyStaking.UserStakingInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:33:11"
									},
									"scope": 2228,
									"src": "13878:620:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "14828:109:11",
										"statements": [
											{
												"assignments": [
													2097
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "14858:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "14838:24:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 2096,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2095,
																"name": "StakingPlan",
																"nameLocations": [
																	"14838:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1188,
																"src": "14838:11:11"
															},
															"referencedDeclaration": 1188,
															"src": "14838:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"baseExpression": {
														"id": 2098,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "14865:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 2100,
													"indexExpression": {
														"id": 2099,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "14879:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14865:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1188_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14838:50:11"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 2102,
																"name": "plan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "14906:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																	"typeString": "struct WallyStaking.StakingPlan storage pointer"
																}
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14911:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "14906:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2104,
																"name": "plan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "14921:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																	"typeString": "struct WallyStaking.StakingPlan storage pointer"
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14926:3:11",
															"memberName": "apr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "14921:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2106,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14905:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2094,
												"id": 2107,
												"nodeType": "Return",
												"src": "14898:32:11"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "14504:194:11",
										"text": " @dev Get staking plan details\n @param duration Duration of the plan\n @return isActive Whether the plan is active\n @return apr APR of the plan in basis points"
									},
									"functionSelector": "9fca9c22",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingPlan",
									"nameLocation": "14712:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "14735:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "14727:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14727:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14726:18:11"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "14800:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "14795:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14795:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "14818:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "14810:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14810:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14794:28:11"
									},
									"scope": 2228,
									"src": "14703:234:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "15177:43:11",
										"statements": [
											{
												"expression": {
													"id": 2116,
													"name": "_availableDurations",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1225,
													"src": "15194:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 2115,
												"id": 2117,
												"nodeType": "Return",
												"src": "15187:26:11"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "14943:113:11",
										"text": " @dev Get all available staking durations\n @return durations Array of available durations"
									},
									"functionSelector": "b6b365c2",
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableDurations",
									"nameLocation": "15070:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15091:2:11"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "durations",
												"nameLocation": "15161:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "15144:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2112,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15144:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2113,
													"nodeType": "ArrayTypeName",
													"src": "15144:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15143:28:11"
									},
									"scope": 2228,
									"src": "15061:159:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "15570:68:11",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 2129,
															"name": "_totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "15588:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2130,
															"name": "_rewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "15602:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2131,
															"name": "_stakingPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "15616:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2132,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15587:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 2128,
												"id": 2133,
												"nodeType": "Return",
												"src": "15580:51:11"
											}
										]
									},
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "15226:194:11",
										"text": " @dev Get contract stats\n @return totalStaked Total tokens staked\n @return rewardsPool Available rewards pool\n @return stakingPaused Whether staking is paused"
									},
									"functionSelector": "dfe6b5d6",
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractStats",
									"nameLocation": "15434:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15450:2:11"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "totalStaked",
												"nameLocation": "15511:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "15503:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15503:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "rewardsPool",
												"nameLocation": "15532:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "15524:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15524:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "stakingPaused",
												"nameLocation": "15550:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "15545:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15545:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15502:62:11"
									},
									"scope": 2228,
									"src": "15425:213:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "15890:412:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2143,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "15904:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15916:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15904:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2149,
												"nodeType": "IfStatement",
												"src": "15900:43:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2146,
															"name": "InvalidDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "15926:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15926:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2148,
													"nodeType": "RevertStatement",
													"src": "15919:24:11"
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 2150,
															"name": "_stakingPlans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "15957:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
																"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
															}
														},
														"id": 2152,
														"indexExpression": {
															"id": 2151,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "15971:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15957:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1188_storage",
															"typeString": "struct WallyStaking.StakingPlan storage ref"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15981:8:11",
													"memberName": "isActive",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1185,
													"src": "15957:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "15953:68:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2154,
															"name": "DurationAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "15998:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15998:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2156,
													"nodeType": "RevertStatement",
													"src": "15991:30:11"
												}
											},
											{
												"assignments": [
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "plan",
														"nameLocation": "16103:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "16083:24:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
															"typeString": "struct WallyStaking.StakingPlan"
														},
														"typeName": {
															"id": 2159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2158,
																"name": "StakingPlan",
																"nameLocations": [
																	"16083:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1188,
																"src": "16083:11:11"
															},
															"referencedDeclaration": 1188,
															"src": "16083:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2164,
												"initialValue": {
													"baseExpression": {
														"id": 2161,
														"name": "_stakingPlans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "16110:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPlan_$1188_storage_$",
															"typeString": "mapping(uint256 => struct WallyStaking.StakingPlan storage ref)"
														}
													},
													"id": 2163,
													"indexExpression": {
														"id": 2162,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "16124:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16110:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPlan_$1188_storage",
														"typeString": "struct WallyStaking.StakingPlan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16083:50:11"
											},
											{
												"expression": {
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2165,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "16143:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16148:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "16143:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16159:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16143:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "16143:20:11"
											},
											{
												"expression": {
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2171,
															"name": "plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "16173:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPlan_$1188_storage_ptr",
																"typeString": "struct WallyStaking.StakingPlan storage pointer"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16178:3:11",
														"memberName": "apr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "16173:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2174,
														"name": "apr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "16184:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16173:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2176,
												"nodeType": "ExpressionStatement",
												"src": "16173:14:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2180,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "16231:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2177,
															"name": "_availableDurations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "16206:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16226:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "16206:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16206:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "16206:34:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2184,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "16281:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2185,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "16291:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2183,
														"name": "StakingPlanAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "16264:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16264:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "EmitStatement",
												"src": "16259:36:11"
											}
										]
									},
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "15644:163:11",
										"text": " @dev Internal function to add a staking plan\n @param duration Duration in seconds\n @param apr Annual percentage rate in basis points"
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addStakingPlan",
									"nameLocation": "15821:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "15845:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "15837:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15837:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "15863:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "15855:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15855:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15836:31:11"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15890:0:11"
									},
									"scope": 2228,
									"src": "15812:490:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "16533:414:11",
										"statements": [
											{
												"assignments": [
													2198
												],
												"declarations": [
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "rewardsPool",
														"nameLocation": "16610:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "16602:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16602:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2200,
												"initialValue": {
													"id": 2199,
													"name": "_rewardsPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1220,
													"src": "16624:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16602:34:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2201,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2194,
														"src": "16659:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2202,
														"name": "rewardsPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "16669:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16659:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2207,
												"nodeType": "IfStatement",
												"src": "16655:59:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2204,
															"name": "InsufficientRewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "16689:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16689:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2206,
													"nodeType": "RevertStatement",
													"src": "16682:32:11"
												}
											},
											{
												"expression": {
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2208,
														"name": "_rewardsPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "16811:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2209,
															"name": "rewardsPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "16826:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "16840:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16826:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16811:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "16811:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2217,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "16876:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2218,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "16882:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2214,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "16856:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16863:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "16856:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16856:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2220,
												"nodeType": "ExpressionStatement",
												"src": "16856:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2222,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "16927:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2223,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "16933:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2221,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "16913:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16913:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "EmitStatement",
												"src": "16908:32:11"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "16308:145:11",
										"text": " @dev Internal function to claim rewards\n @param user Address of the user\n @param amount Amount of rewards to claim"
									},
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRewards",
									"nameLocation": "16467:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "16489:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "16481:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16481:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16503:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "16495:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16495:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16480:30:11"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16533:0:11"
									},
									"scope": 2228,
									"src": "16458:489:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2229,
							"src": "940:16009:11",
							"usedErrors": [
								305,
								308,
								623,
								1094,
								1096,
								1098,
								1100,
								1102,
								1104,
								1106,
								1108,
								1112
							],
							"usedEvents": [
								317,
								326,
								335,
								1143,
								1151,
								1157,
								1163,
								1169,
								1173,
								1179,
								1183
							]
						}
					],
					"src": "32:16917:11"
				},
				"id": 11
			}
		}
	}
}